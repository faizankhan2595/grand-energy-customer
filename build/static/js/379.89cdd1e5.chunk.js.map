{"version":3,"file":"static/js/379.89cdd1e5.chunk.js","mappings":"uRAmPA,IAvOA,SAAqBA,GAA0B,IAAvBC,EAAUD,EAAVC,WAAYC,EAAMF,EAANE,OAClCC,GAAsCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAClCI,GAA8CL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAtDE,EAAeD,EAAA,GAAEE,EAAkBF,EAAA,GAEpCG,EAAMC,aAAaC,QAAQ,SAE3BC,EAAU,CACd,CACEC,MAAO,KACPC,UAAW,MAEb,CACED,MAAO,cACPC,UAAW,kBAEb,CACED,MAAO,eACPC,UAAW,gBAEb,CACED,MAAO,cACPC,UAAW,eAEb,CACED,MAAO,kBACPC,UAAW,SAEb,CACED,MAAO,mBACPC,UAAW,cACXC,OAAQ,SAACC,EAAGC,GACV,OAAOC,EAAAA,EAAAA,KAAA,OAAAC,SAAMF,EAAOG,aAAe,GACrC,GAEF,CACEP,MAAO,eACPC,UAAW,aACXC,OAAQ,SAACC,EAAGC,GACV,OAAOC,EAAAA,EAAAA,KAAA,OAAAC,SAAME,IAAOJ,EAAOK,YAAYC,OAAO,eAChD,GAEF,CACEV,MAAO,SACPC,UAAW,SACXC,OAAQ,SAACC,EAAEC,GACT,MAAmB,SAAhBA,EAAOO,QAAmC,SAAhBP,EAAOO,QAAwBN,EAAAA,EAAAA,KAAA,QAAMO,MAAO,CAACC,MAAO,UAAWC,gBAAiB,UAAWC,QAAS,UAAWC,aAAa,MAAOC,WAAW,MAAOC,SAAU,QAAQZ,SAAC,SAC7K,YAAhBF,EAAOO,QAAsC,YAAhBP,EAAOO,QAA2BN,EAAAA,EAAAA,KAAA,QAAMO,MAAO,CAACC,MAAO,UAAWC,gBAAiB,UAAWC,QAAS,UAAWC,aAAa,MAAOC,WAAW,MAAOC,SAAU,QAAQZ,SAAC,aACpMD,EAAAA,EAAAA,KAAA,QAAMO,MAAO,CAACC,MAAO,UAAWC,gBAAiB,YAAaC,QAAS,UAAWC,aAAa,MAAOC,WAAW,MAAOC,SAAU,QAAQZ,SAAC,WACzJ,GAEF,CACEN,MAAO,SAEPE,OAAQ,SAACC,EAAGC,GACV,OACEC,EAAAA,EAAAA,KAAAc,EAAAA,SAAA,CAAAb,UACED,EAAAA,EAAAA,KAACe,EAAAA,EAAgB,CACfC,MACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAAAjB,SAAA,EACHD,EAAAA,EAAAA,KAACkB,EAAAA,EAAAA,KAAS,CAAAjB,UACRgB,EAAAA,EAAAA,MAACE,EAAAA,GAAI,CACHC,GAAE,oDAAAC,OAAsDtB,EAAOuB,IAC/DC,UAAU,4BAA2BtB,SAAA,EAErCD,EAAAA,EAAAA,KAACwB,EAAAA,EAAI,CAACC,UAAWC,EAAAA,KAAe,qBAIpC1B,EAAAA,EAAAA,KAACkB,EAAAA,EAAAA,KAAS,CAAAjB,UACRgB,EAAAA,EAAAA,MAACE,EAAAA,GAAI,CACHC,GAAE,oDAAAC,OAAsDtB,EAAOuB,IAC/DC,UAAU,4BAA2BtB,SAAA,EAErCD,EAAAA,EAAAA,KAACwB,EAAAA,EAAI,CAACD,UAAU,OAAOE,UAAWE,EAAAA,KAAY,aAIlD3B,EAAAA,EAAAA,KAACkB,EAAAA,EAAAA,KAAS,CACRU,QAAS,WACPC,GACF,EAAE5B,UAEFgB,EAAAA,EAAAA,MAAA,QAAMM,UAAU,4BAA2BtB,SAAA,EACzCD,EAAAA,EAAAA,KAACwB,EAAAA,EAAI,CAACD,UAAU,OAAOE,UAAWK,EAAAA,KAAc,eAKpD9B,EAAAA,EAAAA,KAAC+B,EAAAA,EAAK,CACJC,QAAS3C,EAGT4C,UAAQ,EACRC,OAAQ,EACNlC,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,CACL5B,MAAO,CAAEC,MAAO,WAChBoB,QAASQ,EACTb,UAAU,mBAAkBtB,SAC7B,gBAGDD,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,CACLE,KAAK,UACLd,UAAU,mBACVK,QAAS,kBAAIU,EAASvC,EAAOuB,GAAG,EAACrB,SAClC,kBAGDA,UAEFD,EAAAA,EAAAA,KAAA,OACEO,MAAO,CAAEC,MAAO,WAChBe,UAAU,kCAAiCtB,SAC5C,sDASf,IAIEmC,EAAe,WACnB9C,GAAmB,EACrB,EAEMgD,EAAW,SAAChB,GAChBiB,EAAcjB,GACdhC,GAAmB,EACrB,EAEMuC,EAAkB,WACtBvC,GAAmB,EACrB,EAEMiD,EAAgB,SAACjB,GACrBkB,QAAQC,IAAI,kBAAmBnB,IAC/BoB,EAAAA,EAAAA,GAAM,CACJC,OAAQ,OACRC,IAAK,yBACLC,KAAM,CAAEvB,GAAIA,GACZwB,QAAS,CAEPC,cAAc,UAAD1B,OAAY9B,MAG1ByD,MAAK,SAACC,GACLT,QAAQC,IAAIQ,EAASJ,MACrB3D,EACED,EAAYiE,QAAO,SAACC,GAClB,OAAOA,EAAK7B,KAAOA,CACrB,IAEJ,IACC0B,MAAK,SAACI,GACLZ,QAAQC,IAAIW,EACd,GACJ,EA2DA,OAzDAC,EAAAA,EAAAA,YAAU,WACR,IAAMR,EAAO,CAAES,YAAa1E,IAC5B8D,EAAAA,EAAAA,GAAM,CACJC,OAAQ,OACRC,IAAK,uBACLC,KAAMA,IAELG,MAAK,SAACC,GACLT,QAAQC,IAAIQ,EAASJ,MACjBI,EAASJ,KAAKU,QAChBrE,EACE+D,EAASJ,KAAKA,KAAKA,KAAKW,KAAI,SAACL,EAAMM,GACjC,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKP,GAAI,IACPQ,MAAOF,EAAM,GAEjB,KAGFjB,QAAQC,IAAIQ,EAEhB,IACCD,MAAK,SAACI,GACLZ,QAAQC,IAAIW,EACd,GACJ,GAAG,KAEHC,EAAAA,EAAAA,YAAU,WACR,IAAMR,EAAO,CACXS,YAAa1E,EACbgF,OAAQjF,IAEV+D,EAAAA,EAAAA,GAAM,CACJC,OAAQ,OACRC,IAAK,uBACLC,KAAMA,IAELG,MAAK,SAACC,GACLT,QAAQC,IAAIQ,EAASJ,MACjBI,EAASJ,KAAKU,QAChBrE,EACE+D,EAASJ,KAAKA,KAAKA,KAAKW,KAAI,SAACL,EAAMM,GACjC,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKP,GAAI,IACPQ,MAAOF,EAAM,GAEjB,KAGFjB,QAAQC,IAAIQ,EAEhB,IACCD,MAAK,SAACI,GACLZ,QAAQC,IAAIW,EACd,GACJ,GAAG,CAACzE,KAGFqB,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAAC6D,EAAAA,EACC,CACAnE,QAASA,EACToE,WAAY7E,KAIpB,C,4HCvOI4D,EAAO,GAgIX,IA9HA,SAAiBnE,GAAwB,IAAtBC,EAAUD,EAAVC,WAAYC,EAAMF,EAANE,OAE3BC,GAAwCC,EAAAA,EAAAA,UAAS+D,GAAK9D,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/CkF,EAAYhF,EAAA,GAAEiF,EAAejF,EAAA,GAE9BW,EAAQ,CACV,CACIC,MAAM,KACNC,UAAU,MAEd,CACID,MAAM,cACNC,UAAU,MAEd,CACID,MAAM,eACNC,UAAU,WAEd,CACID,MAAM,cACNC,UAAU,SAEd,CACID,MAAM,iBACNC,UAAU,aAEd,CACID,MAAM,kBACNC,UAAU,OACVC,OAAQ,SAACC,EAAGC,GACR,OAAOC,EAAAA,EAAAA,KAAA,OAAAC,SAAMF,EAAOG,aAAe,GACrC,GAEN,CACIP,MAAM,eACNC,UAAU,aACVC,OAAQ,SAACC,EAAGC,GACR,OAAOC,EAAAA,EAAAA,KAAA,OAAAC,SAAME,IAAOJ,EAAOK,YAAYC,OAAO,eAClD,GAEJ,CACIV,MAAM,SACNC,UAAU,SACVC,OAAQ,SAACC,EAAEC,GACP,MAAmB,SAAhBA,EAAOO,QAAmC,SAAhBP,EAAOO,QAAwBN,EAAAA,EAAAA,KAAA,QAAMO,MAAO,CAACC,MAAO,UAAWC,gBAAiB,UAAWC,QAAS,UAAWC,aAAa,MAAOC,WAAW,MAAOC,SAAU,QAAQZ,SAAC,SAC7K,YAAhBF,EAAOO,QAAsC,YAAhBP,EAAOO,QAA2BN,EAAAA,EAAAA,KAAA,QAAMO,MAAO,CAACC,MAAO,UAAWC,gBAAiB,UAAWC,QAAS,UAAWC,aAAa,MAAOC,WAAW,MAAOC,SAAU,QAAQZ,SAAC,aACpMD,EAAAA,EAAAA,KAAA,QAAMO,MAAO,CAACC,MAAO,UAAWC,gBAAiB,YAAaC,QAAS,UAAWC,aAAa,MAAOC,WAAW,MAAOC,SAAU,QAAQZ,SAAC,WACzJ,IAqEV,OAzDAoD,EAAAA,EAAAA,YAAU,WACN,IAAMR,EAAO,CAAES,YAAa1E,IAC5B8D,EAAAA,EAAAA,GAAM,CACJC,OAAQ,OACRC,IAAK,sBACLC,KAAMA,IAELG,MAAK,SAACC,GACLT,QAAQC,IAAIQ,EAASJ,MACjBI,EAASJ,KAAKU,QAChBS,EACEf,EAASJ,KAAKA,KAAKA,KAAKW,KAAI,SAACL,EAAMM,GACjC,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKP,GAAI,IACPQ,MAAOF,EAAM,GAEjB,KAGFjB,QAAQC,IAAIQ,EAEhB,IACCD,MAAK,SAACI,GACLZ,QAAQC,IAAIW,EACd,GACJ,GAAG,KAELC,EAAAA,EAAAA,YAAU,WACN,IAAMR,EAAO,CACTS,YAAa1E,EACbgF,OAAQjF,IAEZ+D,EAAAA,EAAAA,GAAM,CACJC,OAAQ,OACRC,IAAK,sBACLC,KAAMA,IAELG,MAAK,SAACC,GACLT,QAAQC,IAAIQ,EAASJ,MACjBI,EAASJ,KAAKU,QAChBS,EACEf,EAASJ,KAAKA,KAAKA,KAAKW,KAAI,SAACL,EAAMM,GACjC,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKP,GAAI,IACPQ,MAAOF,EAAM,GAEjB,KAGFjB,QAAQC,IAAIQ,EAEhB,IACCD,MAAK,SAACI,GACLZ,QAAQC,IAAIW,EACd,GACJ,GAAG,CAACzE,KAGNqB,EAAAA,EAAAA,KAAA,OAAAC,UACID,EAAAA,EAAAA,KAAC6D,EAAAA,EAGD,CACAnE,QAASA,EAASoE,WAAYC,KAGtC,C,sWC3HOE,EAAYC,EAAAA,EAAAA,SAmKnB,MAjKA,SAAexF,GAAgD,IAA7C4C,EAAE5C,EAAF4C,GAAI6C,EAAYzF,EAAZyF,aAAcC,EAAQ1F,EAAR0F,SAAUC,EAAY3F,EAAZ2F,aAC1CxF,GAA8CC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtDQ,EAAeN,EAAA,GAAEO,EAAkBP,EAAA,GAC1CI,GAA8CL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAtDmF,EAAelF,EAAA,GAAEmF,EAAkBnF,EAAA,GAC1CoF,GAA4B1F,EAAAA,EAAAA,UAAS,YAAW2F,GAAAzF,EAAAA,EAAAA,GAAAwF,EAAA,GAAzClE,EAAMmE,EAAA,GAAEC,EAASD,EAAA,GACxBE,GAA4B7F,EAAAA,EAAAA,WAAS,GAAM8F,GAAA5F,EAAAA,EAAAA,GAAA2F,EAAA,GAApCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAClBrF,EAAMC,aAAaC,QAAQ,SAsC3B2C,EAAe,WAEjBmC,GAAmB,EACvB,EAuCA,OACItD,EAAAA,EAAAA,MAAAH,EAAAA,SAAA,CAAAb,SAAA,EACID,EAAAA,EAAAA,KAACe,EAAAA,EAAgB,CACbC,MACIC,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAAAjB,SAAA,EACDD,EAAAA,EAAAA,KAACkB,EAAAA,EAAAA,KAAS,CAAAjB,UACNgB,EAAAA,EAAAA,MAACE,EAAAA,GAAI,CAACC,GAAE,+DAAAC,OAAiEC,GAAMC,UAAU,4BAA2BtB,SAAA,EAChHD,EAAAA,EAAAA,KAACwB,EAAAA,EAAI,CAACD,UAAU,OAAOE,UAAWsD,EAAAA,KAAkB,qBAI5D/E,EAAAA,EAAAA,KAACkB,EAAAA,EAAAA,KAAS,CAAAjB,UACNgB,EAAAA,EAAAA,MAACE,EAAAA,GAAI,CAACC,GAAE,mDAAAC,OAAqDC,GAAMC,UAAU,4BAA2BtB,SAAA,EACpGD,EAAAA,EAAAA,KAACwB,EAAAA,EAAI,CAACD,UAAU,OAAOE,UAAWE,EAAAA,KAAY,qBAItD3B,EAAAA,EAAAA,KAACkB,EAAAA,EAAAA,KAAS,CAACU,QA/FP,WACpBtC,GAAmB,EAEvB,EA4FwDW,UAChCgB,EAAAA,EAAAA,MAAA,QAAMM,UAAU,4BAA2BtB,SAAA,EACvCD,EAAAA,EAAAA,KAACwB,EAAAA,EAAI,CAACD,UAAU,OAAOE,UAAWK,EAAAA,KAAc,eAIxD9B,EAAAA,EAAAA,KAACkB,EAAAA,EAAAA,KAAS,CAACU,QAjGA,WAC3B2C,GAAmB,EACvB,EA+F+DtE,UACvCgB,EAAAA,EAAAA,MAAA,QAAMM,UAAU,4BAA2BtB,SAAA,EACvCD,EAAAA,EAAAA,KAACwB,EAAAA,EAAI,CAACD,UAAU,OAAOE,UAAWuD,EAAAA,KAAiB,4BAOvE/D,EAAAA,EAAAA,MAACc,EAAAA,EAAK,CACFC,QAAS3C,EAGT4C,UAAQ,EACRC,OAAQ,EACJlC,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,CAAC5B,MAAO,CAAEC,MAAO,WAAaoB,QAASQ,EAAcb,UAAU,mBAAkBtB,SAAC,gBACzFD,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,CAAC5B,MAAO,CAAEE,gBAAiB,UAAWD,MAAO,WAAae,UAAU,mBAAmBK,QA9G7F,WACbwC,EAAS9C,GAMToB,EAAAA,EAAAA,KAEE,0BACA,CACEpB,GAAIA,GAEN,CACEwB,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD1B,OAAY9B,MAI9ByD,MAAK,SAACC,GACL,IAAIgC,EAAMhC,EAASJ,KACnBL,QAAQC,IAAIwC,EACd,IACCC,OAAM,SAACC,GACN3C,QAAQC,IAAI0C,EACd,GAEJ,EAkFgIlF,SAAC,kBACnHA,SAAA,EAEFD,EAAAA,EAAAA,KAAA,OAAKO,MAAO,CAAEC,MAAO,WAAae,UAAU,kCAAiCtB,SAAC,sCAC9ED,EAAAA,EAAAA,KAAA,KAAGO,MAAO,CAAEC,MAAO,WAAae,UAAU,kCAAiCtB,SAAC,uDAEhFgB,EAAAA,EAAAA,MAACc,EAAAA,EAAK,CACFC,QAASsC,EACTrC,UAAQ,EACRmD,cAAY,EACZC,SAAUjD,EACVzC,MAAO,iBACPuC,OAAQ,EACJlC,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,CAAgB5B,MAAO,CAAEC,MAAO,WAAa6B,KAAK,UAAUd,UAAU,mBAAmBK,QA1FzF,WACnBY,QAAQC,IAAI0B,GACZzB,EAAAA,EAAAA,KAEE,2BAAyBgB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAEpBS,GAAY,IACf7C,GAAIA,EACJgE,KAAMnB,EAAaoB,QACnBjF,OAAQA,IAEV,CACEwC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD1B,OAAY9B,MAI9ByD,MAAK,SAACC,GACL,IAAIgC,EAAMhC,EAASJ,KACnBL,QAAQC,IAAIwC,GACZO,EAAAA,GAAAA,QAAgB,uCAChBjB,GAAmB,GACnBF,GACF,IACCa,OAAM,SAACC,GACJ3C,QAAQC,IAAI0C,GACZK,EAAAA,GAAAA,MAAc,gDACdjB,GAAmB,EACvB,GAEJ,EA2DwItE,SAAC,QAA5G,WACbD,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,CAAgB5B,MAAO,CAAEC,MAAO,WAAaoB,QA3DzC,WACvB8C,GAAU,GACVI,EAAU,IACVP,GAAmB,EACvB,EAuDiGhD,UAAU,mBAAkBtB,SAAC,UAAjG,WACfA,SAAA,EAEFD,EAAAA,EAAAA,KAAA,OAAAC,UACIgB,EAAAA,EAAAA,MAACwE,EAAAA,GAAAA,MAAW,CACRC,KAAK,QACLC,SAAU,SAACC,GAAC,OAAKlB,EAAUkB,EAAEC,OAAOC,MAAM,EAC1CC,aAAc,WAAW9F,SAAA,EAEzBD,EAAAA,EAAAA,KAACyF,EAAAA,GAAK,CAACK,MAAM,WAAU7F,SAAC,eACxBD,EAAAA,EAAAA,KAACyF,EAAAA,GAAK,CAACK,MAAM,WAAU7F,SAAC,mBAIhCgB,EAAAA,EAAAA,MAAA,OAAAhB,SAAA,EACID,EAAAA,EAAAA,KAAA,MAAIuB,UAAU,YAAWtB,SAAC,aAC1BD,EAAAA,EAAAA,KAACiE,EAAQ,CAAC+B,KAAM,EAAGL,SAAU,SAACC,GAAC,OAAKd,EAAUc,EAAEC,OAAOC,MAAM,EAAEA,MAAOjB,YAK1F,E,SC2JA,MAhUA,SAAsBnG,GAA4B,IAAzBC,EAAUD,EAAVC,WAAYsH,EAAQvH,EAARuH,SACnCpH,GAAsDC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3DqH,EAAmBnH,EAAA,GAAEoH,EAAsBpH,EAAA,GAClDI,GAAqDL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1DiH,EAAmBhH,EAAA,GAAEiH,EAAqBjH,EAAA,GACjDoF,GAAwB1F,EAAAA,EAAAA,UAAS,GAAE2F,GAAAzF,EAAAA,EAAAA,GAAAwF,EAAA,GAA5B8B,EAAI7B,EAAA,GAAE8B,EAAO9B,EAAA,GACpBE,GAA0B7F,EAAAA,EAAAA,UAAS,GAAE8F,GAAA5F,EAAAA,EAAAA,GAAA2F,EAAA,GAA9B6B,EAAK5B,EAAA,GAAE6B,EAAQ7B,EAAA,GAChBrF,EAAMC,aAAaC,QAAQ,SAE3BC,EAAU,CACd,CACEC,MAAO,UACPC,UAAW,QAEb,CACED,MAAO,cACPC,UAAW,MAEb,CACED,MAAO,mBACPC,UAAW,UACX8G,OAAQ,SAACC,EAAGC,GAAC,OAAKD,EAAEpB,QAAQsB,cAAcD,EAAErB,QAAQ,GAEtD,CACE5F,MAAO,iBACPC,UAAW,eAEb,CACED,MAAO,WACPC,UAAW,WAEb,CACED,MAAO,aACPC,UAAW,cAEb,CACED,MAAO,SACPC,UAAW,SACXC,OAAQ,SAACC,EAAEC,GACT,MAAmB,aAAhBA,EAAOO,QAAuC,aAAhBP,EAAOO,QAA4BN,EAAAA,EAAAA,KAAA,QAAMO,MAAO,CAACC,MAAO,UAAWC,gBAAiB,UAAWC,QAAS,UAAWC,aAAa,MAAOC,WAAW,MAAOC,SAAU,QAAQZ,SAAC,WACrL,aAAhBF,EAAOO,QAAuC,aAAhBP,EAAOO,QAA4BN,EAAAA,EAAAA,KAAA,QAAMO,MAAO,CAACC,MAAO,UAAWC,gBAAiB,UAAWC,QAAS,UAAWC,aAAa,MAAOC,WAAW,MAAOC,SAAU,QAAQZ,SAAC,aAC1L,aAAhBF,EAAOO,QAAuC,aAAhBP,EAAOO,QAA4BN,EAAAA,EAAAA,KAAA,QAAMO,MAAO,CAACC,MAAO,UAAWC,gBAAiB,UAAWC,QAAS,UAAWC,aAAa,MAAOC,WAAW,MAAOC,SAAU,QAAQZ,SAAC,cACtMD,EAAAA,EAAAA,KAAA,QAAMO,MAAO,CAACC,MAAO,UAAWC,gBAAiB,YAAaC,QAAS,UAAWC,aAAa,MAAOC,WAAW,MAAOC,SAAU,QAAQZ,SAAC,oBACzJ,GAEF,CACEN,MAAO,SACPC,UAAW,GACXC,OAAQ,SAACC,EAAGC,GACV,OACEC,EAAAA,EAAAA,KAAC8G,EAAM,CACLxF,GAAIvB,EAAOuB,GACX6C,aAAcpE,EACdqE,SAAU2C,EACV1C,aAAcA,GAGpB,IAKJ2C,GAAoDlI,EAAAA,EAAAA,WAAS,GAAMmI,GAAAjI,EAAAA,EAAAA,GAAAgI,EAAA,GAA5DE,EAAkBD,EAAA,GAAEE,EAAqBF,EAAA,GAE1CF,EAAa,eAAAK,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOlG,GAAE,IAAAmG,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC7B,IASE1B,GAAuB,SAACyB,GAAI,OAAKA,EAAK1E,QAAO,SAAC4E,GAAI,OAAKA,EAAKxG,KAAOA,CAAE,GAAC,IAClEmG,EAAcvB,EAAoB6B,MAAK,SAAAD,GAAI,OAAIA,EAAKxG,KAAOA,CAAE,IACjE+E,EAAsBoB,GACtBN,GAAsB,GACtBa,YAAW,WACTb,GAAsB,EACxB,GAAG,IACL,CAAE,MAAO/D,GACPZ,QAAQC,IAAIW,EAAIoC,QAClB,CAAC,wBAAAmC,EAAAM,OAAA,GAAAT,EAAA,KACF,gBApBkBU,GAAA,OAAAd,EAAAe,MAAA,KAAAC,UAAA,KAwCb/D,EAAe,WACnB3B,EAAAA,EAAAA,KAEI,wBACA,CACE2F,WAAY,EACZC,UAAW,GAEX1E,OAASjF,GAA0B,MAErC,CACEmE,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD1B,OAAY9B,MAI9ByD,MAAK,SAACC,GACL,IAAIgC,EAAMhC,EAASJ,KAAKA,KAAKA,KAC7BL,QAAQC,IAAIwC,GAEZ,IAAIsD,EAAQtD,EAAIzB,KAAI,SAACL,EAAMQ,GACzB,IAAI6E,EAAgB,CAAC,EAIrB,OAHGrF,EAAKqF,gBACNA,EAAgBC,KAAKC,MAAMvF,EAAKqF,gBAE3B,CACLG,KAAMhF,EAAM,EACZiF,IAAKjF,EAAM,EACXrC,GAAI6B,EAAK7B,GACTiE,QAASpC,EAAKmC,MAAQ,GACtBuD,YAAa1F,EAAK2F,OAAS,GAC3BC,QAAS5F,EAAK6F,OAAS,GACvB1I,OAAQ6C,EAAK7C,QAAU,mBACvB2I,WAAYT,EAAcS,YAAc,GACxCT,cAAerF,EAAKqF,cAExB,IAEArC,EAAuBoC,GACvB/F,QAAQC,IAAI8F,EACd,IACCrD,OAAM,SAACC,GACN3C,QAAQC,IAAI0C,EACd,GACN,EA4IE,OA1IA9B,EAAAA,EAAAA,YAAU,WACRX,EAAAA,EAAAA,KAEI,wBACA,CACE2F,WAAY,EACZC,UAAW,GAEX1E,OAASjF,GAA0B,MAErC,CACEmE,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD1B,OAAY9B,MAI9ByD,MAAK,SAACC,GACL,IAAIgC,EAAMhC,EAASJ,KAAKA,KAAKA,KAC7BL,QAAQC,IAAIwC,GAEZ,IAAIsD,EAAQtD,EAAIzB,KAAI,SAACL,EAAMQ,GACzB,IAAI6E,EAAgB,CAAC,EAIrB,OAHGrF,EAAKqF,gBACNA,EAAgBC,KAAKC,MAAMvF,EAAKqF,gBAE3B,CACLG,KAAMhF,EAAM,EACZiF,IAAKjF,EAAM,EACXrC,GAAI6B,EAAK7B,GACTiE,QAASpC,EAAKmC,MAAQ,GACtBuD,YAAa1F,EAAK2F,OAAS,GAC3BC,QAAS5F,EAAK6F,OAAS,GACvB1I,OAAQ6C,EAAK7C,QAAU,mBACvB2I,WAAYT,EAAcS,YAAc,GACxCT,cAAerF,EAAKqF,cAExB,IAEArC,EAAuBoC,GACvB/F,QAAQC,IAAI8F,EACd,IACCrD,OAAM,SAACC,GACN3C,QAAQC,IAAI0C,EACd,GACJ,GAAG,CAACxG,KAEJ0E,EAAAA,EAAAA,YAAU,WACRX,EAAAA,EAAAA,KAEI,wBACA,CACE2F,WAAY,EACZC,UAAW,GACXrC,SAAUA,GAAY,CAAC,SAAU,YACjCrC,OAASjF,GAA0B,MAErC,CACEmE,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD1B,OAAY9B,MAI9ByD,MAAK,SAACC,GACL,IAAIgC,EAAMhC,EAASJ,KAAKA,KAAKA,KAC7BL,QAAQC,IAAIwC,GAEZ,IAAIsD,EAAQtD,EAAIzB,KAAI,SAACL,EAAMQ,GACzB,IAAI6E,EAAgB,CAAC,EAIrB,OAHGrF,EAAKqF,gBACNA,EAAgBC,KAAKC,MAAMvF,EAAKqF,gBAE3B,CACLG,KAAMhF,EAAM,EACZiF,IAAKjF,EAAM,EACXrC,GAAI6B,EAAK7B,GACTiE,QAASpC,EAAKmC,MAAQ,GACtBuD,YAAa1F,EAAK2F,OAAS,GAC3BC,QAAS5F,EAAK6F,OAAS,GACvB1I,OAAQ6C,EAAK7C,QAAU,mBACvB2I,WAAYT,EAAcS,YAAc,GACxCT,cAAerF,EAAKqF,cAExB,IACArC,EAAuBoC,EACzB,IACCrD,OAAM,SAACC,GACN3C,QAAQC,IAAI0C,EACd,GACJ,GAAG,CAACc,KAEJ5C,EAAAA,EAAAA,YAAU,WACRX,EAAAA,EAAAA,KAEI,wBACA,CACE2F,WAAY/B,EACZgC,UAAW,GAEX3J,WAAaA,GAA0B,MAEzC,CACEmE,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD1B,OAAY9B,MAI9ByD,MAAK,SAACC,GACL,IAAIgC,EAAMhC,EAASJ,KAAKA,KAAKA,KAC7BL,QAAQC,IAAIwC,GAEZ,IAAIsD,EAAQtD,EAAIzB,KAAI,SAACL,EAAMQ,GACzB,IAAI6E,EAAgB,CAAC,EAIrB,OAHGrF,EAAKqF,gBACNA,EAAgBC,KAAKC,MAAMvF,EAAKqF,gBAE3B,CACLG,KAAMhF,EAAM,EACZiF,IAAKjF,EAAM,EACXrC,GAAI6B,EAAK7B,GACTiE,QAASpC,EAAKmC,MAAQ,GACtBuD,YAAa1F,EAAK2F,OAAS,GAC3BC,QAAS5F,EAAK6F,OAAS,GACvB1I,OAAQ6C,EAAK7C,QAAU,mBACvB2I,WAAYT,EAAcS,YAAc,GACxCT,cAAerF,EAAKqF,cAExB,IAEArC,EAAuBoC,EACzB,IACCrD,OAAM,SAACC,GACN3C,QAAQC,IAAI0C,EACd,GACJ,GAAG,CAACmB,KAGFrF,EAAAA,EAAAA,MAAAH,EAAAA,SAAA,CAAAb,SAAA,EACED,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAAC6D,EAAAA,EAAK,CACJqF,OAAQ,CACNC,EAAE,MAEJC,SAAU,KAGV1J,QAASA,EACToE,WAAYoC,EACZP,SA7Ma,SAAC0D,GAChB7C,GAAS6C,EAAWC,UACtB/C,EAAQ8C,EAAWC,SAEnB7C,EAAS4C,EAAWC,SAExB,OA0MItJ,EAAAA,EAAAA,KAAC+B,EAAAA,EAAK,CACJE,UAAQ,EACRD,QAASkF,EACThF,OAAQ,CAAC,MACTmD,SAAU,WACR8B,GAAsB,EACxB,EAAElH,UAEFD,EAAAA,EAAAA,KAACuJ,EAAAA,EAAa,CACZC,KAAMC,EAAAA,GACN9J,MAAM,iCACN+J,KAAI,iBAAArI,OAAmB+E,EAAoBb,QAAO,4BAK5D,E,WCrLA,MAnIA,WACE,IAAA1G,GAA4DC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjE8K,EAAsB5K,EAAA,GAAE6K,EAAyB7K,EAAA,GACxDI,GAAoCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAzCR,EAAUS,EAAA,GAAEyK,EAAazK,EAAA,GAChCoF,GAAwB1F,EAAAA,EAAAA,UAAS,GAAE2F,GAAAzF,EAAAA,EAAAA,GAAAwF,EAAA,GAAtB+B,GAAF9B,EAAA,GAASA,EAAA,IACpBE,GAAwC7F,EAAAA,EAAAA,UAAS,IAAG8F,GAAA5F,EAAAA,EAAAA,GAAA2F,EAAA,GAA7CmF,EAAYlF,EAAA,GACnBoC,GADoCpC,EAAA,IACN9F,EAAAA,EAAAA,UAAS,CAAC,SAAOmI,GAAAjI,EAAAA,EAAAA,GAAAgI,EAAA,GAAjCC,EAAA,GAAYA,EAAA,GAqF1B,OAzEA5D,EAAAA,EAAAA,YAAU,WACRX,EAAAA,EAAAA,KAEE,wBACA,CACE2F,WAAY,EACZC,UAAW,IACX1E,OAAS,OAGZZ,MAAK,SAACC,GACL,IAEIsF,EAFMtF,EAASJ,KAAKA,KAAKA,KAEbW,KAAI,SAACL,EAAMQ,GACzB,IAAI6E,EAAgB,CAAC,EAIrB,OAHGrF,EAAKqF,gBACNA,EAAgBC,KAAKC,MAAMvF,EAAKqF,gBAE3B,CACLuB,MAAOpG,EAAM,EACbiF,IAAKjF,EAAM,EACXrC,GAAI6B,EAAK7B,GACTiE,QAASpC,EAAKmC,MAAQ,GACtBuD,YAAa1F,EAAK2F,OAAS,GAC3BC,QAAS5F,EAAK6F,OAAS,GACvB1I,OAAQ6C,EAAK7C,QAAU,mBACvB2I,WAAYT,EAAcS,YAAc,GAE5C,IAEAW,EAA0BrB,EAC5B,IACCrD,OAAM,SAACC,GACN3C,QAAQC,IAAI0C,EACd,GACF,GAAG,IA4BAjE,EAAAA,EACEA,EAAAA,EAAAA,KACAA,EAAAA,EAAAA,QACEA,EAAAA,EAAAA,KACAA,EAAAA,EAAAA,KACAA,EAAAA,EAAAA,MAMLD,EAAAA,EAAAA,MAAAH,EAAAA,SAAA,CAAAb,SAAA,EACEgB,EAAAA,EAAAA,MAAA,OAAKM,UAAU,iCAAgCtB,SAAA,EAC7CD,EAAAA,EAAAA,KAACgK,EAAAA,EACC,CACArK,MAAM,uBAERK,EAAAA,EAAAA,KAAA,OAAKuB,UAAU,sCAAqCtB,UAClDgB,EAAAA,EAAAA,MAAA,OAAKM,UAAU,0DAAyDtB,SAAA,EACtED,EAAAA,EAAAA,KAACiK,EAAAA,EAAS,CAACJ,cAAeA,KAE1B7J,EAAAA,EAAAA,KAACkK,EAAAA,QAAO,CAACrH,KAAM8G,EACb7G,QA/FI,CACd,CAAEqH,MAAO,SAAUvB,IAAK,SACxB,CAAEuB,MAAO,cAAevB,IAAK,MAC7B,CAAEuB,MAAO,mBAAoBvB,IAAK,WAClC,CAAEuB,MAAO,iBAAkBvB,IAAK,eAChC,CAAEuB,MAAO,WAAYvB,IAAK,WAC1B,CAAEuB,MAAO,aAAcvB,IAAK,cAC5B,CAAEuB,MAAO,SAAUvB,IAAK,WAyFdwB,SAAU,oBAAoBnK,UAE9BgB,EAAAA,EAAAA,MAACkB,EAAAA,EAAM,CAACZ,UAAU,sCAAqCtB,SAAA,EACrDD,EAAAA,EAAAA,KAAA,OAAKuB,UAAU,OAAO8I,IAAKC,EAAAA,EAAYC,IAAI,eAAmB,eAIlEvK,EAAAA,EAAAA,KAACmB,EAAAA,GAAI,CAACC,GAAG,qDAAoDnB,UAC3DgB,EAAAA,EAAAA,MAACkB,EAAAA,EAAM,CACLZ,UAAU,4BACVc,KAAK,UACLqD,KAAK,SAAQzF,SAAA,EAEbD,EAAAA,EAAAA,KAAA,OAAKuB,UAAU,OAAO8I,IAAKG,EAAAA,EAAUD,IAAI,aAAiB,wBAOpEvK,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAACyK,EAAa,CAAClE,QAASA,EAAS5H,WAAYA,EAC7CsH,SAAU6D,QAIlB,E,WCrBA,MA9GA,SAA6BpL,GAAqI,IAAlI4C,EAAE5C,EAAF4C,GAAIgC,EAAW5E,EAAX4E,YAAaoH,EAAYhM,EAAZgM,aAAcC,EAAWjM,EAAXiM,YAAa5K,EAAMrB,EAANqB,OAAQ6K,EAAIlM,EAAJkM,KAAMC,EAAQnM,EAARmM,SAAUC,EAAcpM,EAAdoM,eAA0BC,GAAFrM,EAAR0F,SAAgB1F,EAANqM,QAAoBC,GAAFtM,EAAVuM,WAAuBvM,EAAXsM,aAC9IxI,QAAQC,IAAIa,GACZ,IAAM4H,GAAUC,EAAAA,EAAAA,MAEV5L,EAAMC,aAAaC,QAAQ,SAEjCZ,GAA8CC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtDQ,EAAeN,EAAA,GAAEO,EAAkBP,EAAA,GAoCpCqD,EAAe,WACjB9C,GAAmB,EAEvB,EA4BA,OACI2B,EAAAA,EAAAA,MAAAH,EAAAA,SAAA,CAAAb,SAAA,EAEID,EAAAA,EAAAA,KAACe,EAAAA,EAAgB,CACbC,MACIC,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAAAjB,SAAA,EACDD,EAAAA,EAAAA,KAACkB,EAAAA,EAAAA,KAAS,CAACU,QAvEP,WACpBtC,GAAmB,EACvB,EAqEwDW,UAChCgB,EAAAA,EAAAA,MAAA,QAAMM,UAAU,4BAA2BtB,SAAA,EACvCD,EAAAA,EAAAA,KAACwB,EAAAA,EAAI,CAACD,UAAU,OAAOE,UAAWK,EAAAA,KAAc,gBAGxD9B,EAAAA,EAAAA,KAACkB,EAAAA,EAAAA,KAAS,CAACU,QArCV,WAIjB,GAHAY,QAAQC,IAAI1C,GACZgL,EAAOzJ,GAEHqJ,EAiBAnI,QAAQC,IAAI1C,EAAOqL,gBACnBF,EAAQG,KAAK,+DAADhK,OAAgEiC,QAlB/D,CACb,IAAIgI,EAAaT,EAAS9C,MAAK,SAACnC,GAAC,OAAKA,EAAE2F,UAAYxL,EAAOwL,OAAO,IAClE,GAAGD,EAAY,CACX,IAAIE,EAAWV,EAAe/C,MAAK,SAAAnC,GAAC,OAAIA,EAAE6F,mBAAqBH,EAAWC,OAAO,IAC9EC,GACCZ,EAAKc,eAAe,CAChBC,WAAYH,EAASI,cACrBL,QAASC,EAASC,kBAG9B,CACAb,EAAKc,gBAAchI,EAAAA,EAAAA,GAAC,CAAC,EACd3D,IAEP2K,GAAa,EACjB,CAKJ,EAaqDzK,UAC7BgB,EAAAA,EAAAA,MAAA,QAAMM,UAAU,4BAA2BtB,SAAA,EACvCD,EAAAA,EAAAA,KAACwB,EAAAA,EAAI,CAACD,UAAU,OAAOE,UAAWE,EAAAA,KAAY,mBAOlEV,EAAAA,EAAAA,MAACc,EAAAA,EAAK,CACFC,QAAS3C,EACT4C,UAAQ,EACRoD,SAAUjD,EACVF,OAAQ,EACJlC,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,CAAC5B,MAAO,CAAEC,MAAO,WAAaoB,QAASQ,EAAcb,UAAU,mBAAkBtB,SAAC,gBACzFD,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,CAAC5B,MAAO,CAAEC,MAAO,WAAa6B,KAAK,UAAUd,UAAU,mBAAmBK,QAxFhF,WACbc,EAAAA,EAAAA,KAEE,mCACA,CACEpB,GAAIA,GAEN,CACEwB,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD1B,OAAW9B,MAI7ByD,MAAK,SAACC,GACL,IAAIgC,EAAMhC,EAASJ,KACnBL,QAAQC,IAAIwC,GACTA,EAAI1B,QACLiC,EAAAA,GAAAA,QAAgB,gCAEbP,EAAIO,QAASA,EAAAA,GAAAA,MAAcP,EAAIO,SAC7BA,EAAAA,GAAAA,MAAc,6BAErBlG,GAAmB,GACnB0L,GACF,IACC9F,OAAM,SAACC,GACN3C,QAAQC,IAAI0C,EACd,GAEJ,EA0DmHlF,SAAC,kBACtGA,SAAA,EAEFD,EAAAA,EAAAA,KAAA,OAAKO,MAAO,CAAEC,MAAO,WAAae,UAAU,kCAAiCtB,SAAC,8BAC9EgB,EAAAA,EAAAA,MAAA,KAAGV,MAAO,CAAEC,MAAO,WAAae,UAAU,kCAAiCtB,SAAA,CAAC,gBAAcqB,EAAG,4BAK7G,ECwWA,MAvdA,SAAsBuK,IACJV,EAAAA,EAAAA,MAAhB,IACAtM,GAAsDC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3DqH,EAAmBnH,EAAA,GAAEoH,EAAsBpH,EAAA,GAClDI,GAA4CL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjC2M,GAAF1M,EAAA,GAAmBA,EAAA,IACxCoF,GAAwB1F,EAAAA,EAAAA,UAAS,GAAE2F,GAAAzF,EAAAA,EAAAA,GAAAwF,EAAA,GAA5B8B,EAAI7B,EAAA,GAAE8B,EAAO9B,EAAA,GACpBE,GAA0B7F,EAAAA,EAAAA,UAAS,GAAE8F,GAAA5F,EAAAA,EAAAA,GAAA2F,EAAA,GAA9B6B,EAAK5B,EAAA,GAAE6B,EAAQ7B,EAAA,GAChBrF,EAAMC,aAAaC,QAAQ,SACjC+C,QAAQC,IAAIoJ,GAkDZ,IAAMnM,EAAU,CACd,CACEC,MAAO,KACPC,UAAW,MAEb,CACED,MAAO,WACPC,UAAW,WAEb,CACED,MAAO,mBACPC,UAAW,iBACXmM,MAAO,KAeT,CACEpM,MAAO,UACPC,UAAW,WAOb,CACED,MAAO,eACPC,UAAW,eACXmM,MAAO,KAET,CACEpM,MAAO,QACPC,UAAW,eAWb,CACED,MAAO,SACPC,UAAW,SACXC,OAAQ,SAACC,EAAEC,GACT,MAAmB,WAAhBA,EAAOO,QAA0BN,EAAAA,EAAAA,KAAA,QAAMO,MAAO,CAACC,MAAO,UAAWC,gBAAiB,UAAWC,QAAS,UAAWC,aAAa,MAAOC,WAAW,MAAOC,SAAU,QAAQZ,SAAC,YACjKD,EAAAA,EAAAA,KAAA,QAAMO,MAAO,CAACC,MAAO,UAAWC,gBAAiB,UAAWC,QAAS,UAAWC,aAAa,MAAOC,WAAW,MAAOC,SAAU,QAAQZ,SAAC,YACzJ,GAGA,CACEN,MAAO,SACPC,UAAW,SACXC,OAAQ,SAACC,EAAGC,GACV,OACEC,EAAAA,EAAAA,KAACgM,EAAoB,CACnBjM,OAASA,EACTuB,GAAIvB,EAAOuB,GACXgC,YAAavD,EAAOqL,eACpBL,OAAQkB,EACR7H,SAAU2C,EACVkE,WAAYY,EAAMvK,GAElBoJ,aAAcmB,EAAMnB,aACpBC,aAAakB,EAAMnB,cAGzB,IAIEuB,EAAc,SAAC3K,GAGnBkB,QAAQC,IAAI,WACd,GA6BAY,EAAAA,EAAAA,YAAU,WACRX,EAAAA,EAAAA,KAEI,iCACA,CACE2F,WAAY/B,EACZgC,UAAW,GACXrC,SAAU,CAAC,SAAU,YACrB3C,YAAauI,EAAMvK,GAAKuK,EAAMvK,GAAK,KACnCsC,OAASiI,EAAMlN,WAAYkN,EAAMlN,WAAa,MAEhD,CACEmE,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD1B,OAAY9B,MAI9ByD,MAAK,SAACC,GACL,IAAIgC,EAAMhC,EAASJ,KAAKA,KAAKA,KAC7BL,QAAQC,IAAIwC,GAEZ,IAAIsD,EAAQtD,EAAIzB,KAAI,SAACL,EAAMM,GACzB,MAAO,CACLnC,GAAI6B,EAAK7B,GACT4K,QAAS/I,EAAKmC,KACd6G,eAAgBhJ,EAAKoI,QAAUpI,EAAKoI,QAAO,GAAAlK,OAAM8B,EAAKiJ,YAAW,KAAA/K,OAAI8B,EAAKkJ,cAAa,MAAAhL,OAAK8B,EAAKmJ,aAAY,KAAAjL,OAAI8B,EAAKoJ,YAAW,MAAAlL,OAAK8B,EAAKqJ,SAC3IjH,QAASpC,EAAKsJ,cACd5D,YAAiB,OAAJ1F,QAAI,IAAJA,OAAI,EAAJA,EAAM2F,MACnBC,QAAa,OAAJ5F,QAAI,IAAJA,OAAI,EAAJA,EAAM6F,MACf0D,WAAe,OAAJvJ,QAAI,IAAJA,OAAI,EAAJA,EAAMwJ,uBAAwB,EACzCC,IAAK,CAAEC,MAAW,OAAJ1J,QAAI,IAAJA,OAAI,EAAJA,EAAMyJ,IAAKtH,KAAMnC,EAAKmC,MACpCwH,YAAa3J,EAAK2J,YAClBC,MAAO5J,EAAK4J,MACZC,QAAS7J,EAAK6J,QACdC,eAAgB9J,EAAK8J,eACrBC,YAAa/J,EAAK+J,YAClBC,aAAchK,EAAKgK,aACnB7M,OAAQ6C,EAAK7C,OACb8M,OAAQ,GACRhC,eAAgBjI,EAAKiI,eAEzB,IACAjF,EAAuBD,EAAoB7E,OAAOkH,GAEpD,IACCrD,OAAM,SAACC,GACN3C,QAAQC,IAAI0C,EACd,GACJ,GAAG,CAACmB,KAGJjD,EAAAA,EAAAA,YAAU,WACRX,EAAAA,EAAAA,KAEI,iCACA,CACE2F,WAAY,EACZC,UAAW,GAEXhF,YAAauI,EAAMvK,GAAKuK,EAAMvK,GAAK,KACnCsC,OAASiI,EAAMlN,WAAYkN,EAAMlN,WAAa,MAEhD,CACEmE,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD1B,OAAY9B,MAI9ByD,MAAK,SAACC,GACL,IAAIgC,EAAMhC,EAASJ,KAAKA,KAAKA,KAC7BL,QAAQC,IAAIwC,GAEZ,IAAIsD,EAAQtD,EAAIzB,KAAI,SAACL,EAAMM,GACzB,MAAO,CACLnC,GAAI6B,EAAK7B,GACT4K,QAAS/I,EAAKmC,KACd6G,eAAgBhJ,EAAKoI,QAAUpI,EAAKoI,QAAO,GAAAlK,OAAM8B,EAAKkJ,cAAa,gBAAAhL,OAAe8B,EAAKmJ,aAAY,iBAAAjL,OAAgB8B,EAAKoJ,YAAW,MAAAlL,OAAK8B,EAAKqJ,SAC7IjH,QAASpC,EAAKsJ,cACd5D,YAAiB,OAAJ1F,QAAI,IAAJA,OAAI,EAAJA,EAAM2F,MACnBC,QAAa,OAAJ5F,QAAI,IAAJA,OAAI,EAAJA,EAAM6F,MACf0D,WAAe,OAAJvJ,QAAI,IAAJA,OAAI,EAAJA,EAAMwJ,uBAAwB,EACzCC,IAAK,CAAEC,MAAW,OAAJ1J,QAAI,IAAJA,OAAI,EAAJA,EAAMyJ,IAAKtH,KAAM,cAC/BwH,YAAa3J,EAAK2J,YAClBC,MAAO5J,EAAK4J,MACZC,QAAS7J,EAAK6J,QACdC,eAAgB9J,EAAKkK,YACrBH,YAAa/J,EAAK+J,YAClBC,aAAchK,EAAKgK,aACnB7M,OAAQ6C,EAAK7C,OACb8M,OAAQ,GACRhC,eAAgBjI,EAAKiI,eAEzB,IACAjF,EAAuBoC,GACvBsD,EAAMyB,gBAAgB/E,EAAM,GAAGjH,GACjC,IACC4D,OAAM,SAACC,GACN3C,QAAQC,IAAI0C,EACd,GACJ,GAAG,CAAC0G,EAAMvK,MAEV+B,EAAAA,EAAAA,YAAU,WACRX,EAAAA,EAAAA,KAEI,iCACA,CACE2F,WAAY,EACZC,UAAW,GAEXhF,YAAauI,EAAMvK,GAAKuK,EAAMvK,GAAK,KACnCsC,OAASiI,EAAMlN,WAAYkN,EAAMlN,WAAa,MAEhD,CACEmE,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD1B,OAAY9B,MAI9ByD,MAAK,SAACC,GACL,IAAIgC,EAAMhC,EAASJ,KAAKA,KAAKA,KAC7BL,QAAQC,IAAIwC,GAEZ,IAAIsD,EAAQtD,EAAIzB,KAAI,SAACL,EAAMM,GACzB,MAAO,CACLnC,GAAI6B,EAAK7B,GACT4K,QAAS/I,EAAKmC,KACd6G,eAAgBhJ,EAAKoI,QAAUpI,EAAKoI,QAAO,GAAAlK,OAAM8B,EAAKkJ,cAAa,gBAAAhL,OAAe8B,EAAKmJ,aAAY,iBAAAjL,OAAgB8B,EAAKoJ,YAAW,MAAAlL,OAAK8B,EAAKqJ,SAC7IjH,QAASpC,EAAKsJ,cACd5D,YAAiB,OAAJ1F,QAAI,IAAJA,OAAI,EAAJA,EAAM2F,MACnBC,QAAa,OAAJ5F,QAAI,IAAJA,OAAI,EAAJA,EAAM6F,MACf0D,WAAe,OAAJvJ,QAAI,IAAJA,OAAI,EAAJA,EAAMwJ,uBAAwB,EACzCC,IAAK,CAAEC,MAAW,OAAJ1J,QAAI,IAAJA,OAAI,EAAJA,EAAMyJ,IAAKtH,KAAM,cAC/BwH,YAAa3J,EAAK2J,YAClBC,MAAO5J,EAAK4J,MACZC,QAAS7J,EAAK6J,QACdC,eAAgB9J,EAAKkK,YACrBH,YAAa/J,EAAK+J,YAClBC,aAAchK,EAAKgK,aACnB7M,OAAQ6C,EAAK7C,OACb8M,OAAQ,GACRhC,eAAgBjI,EAAKiI,eAEzB,IACAjF,EAAuBoC,GACvBsD,EAAMyB,gBAAgB/E,EAAM,GAAGjH,GACjC,IACC4D,OAAM,SAACC,GACN3C,QAAQC,IAAI0C,EACd,GACJ,GAAG,CAAC0G,EAAMlN,cAEV0E,EAAAA,EAAAA,YAAU,WACRX,EAAAA,EAAAA,KAEI,iCACA,CACE2F,WAAY,EACZC,UAAW,GAEXhF,YAAauI,EAAMvI,YAAcuI,EAAMvI,YAAc,KACrDM,OAASiI,EAAMlN,WAAYkN,EAAMlN,WAAa,MAEhD,CACEmE,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD1B,OAAY9B,MAI9ByD,MAAK,SAACC,GACL,IAAIgC,EAAMhC,EAASJ,KAAKA,KAAKA,KAC7BL,QAAQC,IAAIwC,GAEZ,IAAIsD,EAAQtD,EAAIzB,KAAI,SAACL,EAAMM,GACzB,MAAO,CACLnC,GAAI6B,EAAK7B,GACT4K,QAAS/I,EAAKmC,KACd6G,eAAgBhJ,EAAKoI,QAAUpI,EAAKoI,QAAO,GAAAlK,OAAM8B,EAAKkJ,cAAa,gBAAAhL,OAAe8B,EAAKmJ,aAAY,iBAAAjL,OAAgB8B,EAAKoJ,YAAW,MAAAlL,OAAK8B,EAAKqJ,SAC7IjH,QAASpC,EAAKsJ,cACd5D,YAAiB,OAAJ1F,QAAI,IAAJA,OAAI,EAAJA,EAAM2F,MACnBC,QAAa,OAAJ5F,QAAI,IAAJA,OAAI,EAAJA,EAAM6F,MACf0D,WAAe,OAAJvJ,QAAI,IAAJA,OAAI,EAAJA,EAAMwJ,uBAAwB,EACzCC,IAAK,CAAEC,MAAW,OAAJ1J,QAAI,IAAJA,OAAI,EAAJA,EAAMyJ,IAAKtH,KAAM,cAC/BwH,YAAa3J,EAAK2J,YAClBC,MAAO5J,EAAK4J,MACZC,QAAS7J,EAAK6J,QACdC,eAAgB9J,EAAKkK,YACrBH,YAAa/J,EAAK+J,YAClBC,aAAchK,EAAKgK,aACnB7M,OAAQ6C,EAAK7C,OACb8M,OAAQ,GACRhC,eAAgBjI,EAAKiI,eAEzB,IACAjF,EAAuBoC,GACvBsD,EAAMyB,gBAAgB/E,EAAM,GAAGjH,GACjC,IACC4D,OAAM,SAACC,GACN3C,QAAQC,IAAI0C,EACd,GACJ,GAAG,CAAC0G,EAAMvI,cAGV,IAAA0D,GAAoDlI,EAAAA,EAAAA,WAAS,GAAMmI,GAAAjI,EAAAA,EAAAA,GAAAgI,EAAA,GAA5DE,EAAkBD,EAAA,GAAEE,EAAqBF,EAAA,GAE1CF,EAAa,eAAArI,GAAA2I,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOlG,GAAE,OAAAgG,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC7B,IASEnF,EAAAA,EAAAA,KAEI,mCACA,CACEpB,GAAIA,GAEN,CACEwB,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD1B,OAAY9B,MAI9ByD,MAAK,SAACC,GACLT,QAAQC,IAAIQ,EACd,IACCiC,OAAM,SAACC,GACN3C,QAAQC,IAAI0C,EACd,IAEFgB,GAAuB,SAACyB,GAAI,OAAKA,EAAK1E,QAAO,SAAC4E,GAAI,OAAKA,EAAKxG,KAAOA,CAAE,GAAC,IAGtE6F,GAAsB,GACtBa,YAAW,WACTb,GAAsB,EACxB,GAAG,IACL,CAAE,MAAO/D,GACPZ,QAAQC,IAAIW,EAAIoC,QAClB,CAAC,wBAAAmC,EAAAM,OAAA,GAAAT,EAAA,KACF,gBAxCkBU,GAAA,OAAAxJ,EAAAyJ,MAAA,KAAAC,UAAA,KAyDnB,OAfA/E,EAAAA,EAAAA,YAAU,YA7QRX,EAAAA,EAAAA,GAAM,CACFC,OAAQ,OACRC,IAAK,iCACLC,KAAM,CACFwF,WAAY,EACZC,UAAW,IACX1E,OAAS,GACTN,YAAa,QAElBN,MAAK,SAACC,GACLT,QAAQC,IAAIQ,EAASJ,KAAKA,KAAKA,MAC3BI,EAASJ,KAAKU,SAChBuI,EAAkB7I,EAASJ,KAAKA,KAAKA,KAE3C,IAAGqC,OAAM,SAAC9B,GACNZ,QAAQC,IAAIW,EAChB,GA+PF,GAAG,KAcDnC,EAAAA,EAAAA,MAAAH,EAAAA,SAAA,CAAAb,SAAA,EACED,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAAC6D,EAAAA,EAKC,CACAnE,QAASA,EACToE,WAAYoC,EACZP,SA/Sa,SAAC0D,GAChB7C,GAAS6C,EAAWC,UACtB/C,EAAQ8C,EAAWC,SACnB7C,EAAS4C,EAAWC,SAExB,OA6SItJ,EAAAA,EAAAA,KAAC+B,EAAAA,EAAK,CACJE,UAAQ,EACRD,QAASkF,EACThF,OAAQ,CAAC,MACTmD,SAAU,WACR8B,GAAsB,EACxB,EAAElH,UAEFD,EAAAA,EAAAA,KAACuJ,EAAAA,EAAa,CACZC,KAAMC,EAAAA,GACN9J,MAAM,iCACN+J,KAAK,6BAKf,ECnSA,MA3KA,WAEE,IAAA7K,GAAoCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCF,EAAUI,EAAA,GAAE8K,EAAa9K,EAAA,GAChCI,GAAsCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA3CoO,EAAWnO,EAAA,GAAEoO,EAAcpO,EAAA,GAC5BG,EAAMC,aAAaC,QAAQ,SACjC+E,GAA8B1F,EAAAA,EAAAA,UAAS,CAAC,QAAO2F,GAAAzF,EAAAA,EAAAA,GAAAwF,EAAA,GAE/CG,GAFcF,EAAA,GAAYA,EAAA,IAEgB3F,EAAAA,EAAAA,UAAS,KAAG8F,GAAA5F,EAAAA,EAAAA,GAAA2F,EAAA,GAA/C8I,EAAa7I,EAAA,GAAE8I,EAAgB9I,EAAA,GACtCoC,GAA8ClI,EAAAA,EAAAA,UAAS,IAAGmI,GAAAjI,EAAAA,EAAAA,GAAAgI,EAAA,GAAnD2G,EAAe1G,EAAA,GAAE2G,EAAkB3G,EAAA,GAoH1C,OAlBA5D,EAAAA,EAAAA,YAAU,WArFRX,EAAAA,EAAAA,KAEI,wBACA,CACE2F,WAAY,EACZC,UAAW,IACXrC,SAAU,CAAC,SAAU,WAAY,oBACjCrC,OAAS,MAEX,CACEd,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD1B,OAAY9B,MAI9ByD,MAAK,SAACC,GACL,IAAIgC,EAAMhC,EAASJ,KAAKA,KAAKA,KAC7BL,QAAQC,IAAIwC,GACZuI,EAAevI,EACjB,IACCC,OAAM,SAACC,GACN3C,QAAQC,IAAI0C,EACd,IAcFzC,EAAAA,EAAAA,KAEE,iCACA,CACE2F,WAAY,EACZC,UAAW,IACX1E,OAAS,KACTN,YAAc,OAGjBN,MAAK,SAACC,GACL,IAEIsF,EAFMtF,EAASJ,KAAKA,KAAKA,KAEbW,KAAI,SAACL,EAAMQ,GAKzB,OAHGR,EAAKqF,eACUC,KAAKC,MAAMvF,EAAKqF,eAE3B,CACLuB,MAAOpG,EAAM,EACbiF,IAAKjF,EAAM,EACXrC,GAAI6B,EAAK7B,GACTuM,QAAS1K,EAAKmC,KACd6G,eAAgBhJ,EAAKoI,QAAUpI,EAAKoI,QAAO,GAAAlK,OAAM8B,EAAKiJ,YAAW,KAAA/K,OAAI8B,EAAKkJ,cAAa,MAAAhL,OAAK8B,EAAKmJ,aAAY,KAAAjL,OAAI8B,EAAKoJ,YAAW,MAAAlL,OAAK8B,EAAKqJ,SAC3IjH,QAASpC,EAAKsJ,cACd5D,YAAiB,OAAJ1F,QAAI,IAAJA,OAAI,EAAJA,EAAM2F,MACnBC,QAAa,OAAJ5F,QAAI,IAAJA,OAAI,EAAJA,EAAM6F,MACf0D,WAAe,OAAJvJ,QAAI,IAAJA,OAAI,EAAJA,EAAMwJ,uBAAwB,EACzCC,IAAK,CAAEC,MAAW,OAAJ1J,QAAI,IAAJA,OAAI,EAAJA,EAAMyJ,IAAKtH,KAAMnC,EAAKmC,MACpCwH,YAAa3J,EAAK2J,YAClBC,MAAO5J,EAAK4J,MACZC,QAAS7J,EAAK6J,SAAW,EACzBC,eAAgB9J,EAAK8J,gBAAkB,EACvCC,YAAa/J,EAAK+J,aAAe,EACjCC,aAAchK,EAAKgK,cAAgB,EACnC7M,OAAQ6C,EAAK7C,OACb8M,OAAQ,GAEZ,IAEAQ,EAAmBrF,GACnB/F,QAAQC,IAAI8F,EACd,IACCrD,OAAM,SAACC,GACN3C,QAAQC,IAAI0C,EACd,GAMF,GAAG,KAgBDlE,EAAAA,EAAAA,MAAAH,EAAAA,SAAA,CAAAb,SAAA,EACEgB,EAAAA,EAAAA,MAAA,OAAKM,UAAU,iCAAgCtB,SAAA,EAC7CD,EAAAA,EAAAA,KAACgK,EAAAA,EACC,CACArK,MAAM,eAERK,EAAAA,EAAAA,KAAA,OAAKuB,UAAU,sCAAqCtB,UAClDgB,EAAAA,EAAAA,MAAA,OAAKM,UAAU,qDAAoDtB,SAAA,EACjED,EAAAA,EAAAA,KAACiK,EAAAA,EAAS,CAACJ,cAAeA,KAU1B7J,EAAAA,EAAAA,KAACkK,EAAAA,QAAO,CAACrH,KAAM8K,EACb7K,QAvII,CACd,CAAEqH,MAAO,SAAUvB,IAAK,SACxB,CAAEuB,MAAO,KAAMvB,IAAK,MACpB,CAAEuB,MAAO,UAAWvB,IAAK,WACzB,CAAEuB,MAAO,kBAAmBvB,IAAK,kBACjC,CAAEuB,MAAO,UAAWvB,IAAK,WACzB,CAAEuB,MAAO,iBAAkBvB,IAAK,gBAChC,CAAEuB,MAAO,QAASvB,IAAK,eACvB,CAAEuB,MAAO,SAAUvB,IAAK,WAgIdwB,SAAU,mBAAmBnK,UAE7BgB,EAAAA,EAAAA,MAACkB,EAAAA,EAAM,CAACZ,UAAU,iCAAgCtB,SAAA,EAChDD,EAAAA,EAAAA,KAAA,OAAKuB,UAAU,OAAO8I,IAAKC,EAAAA,EAAYC,IAAI,eAAmB,eAIlEvK,EAAAA,EAAAA,KAAC8N,EAAAA,EAAM,CAACnI,SAAU+H,EAAkBnN,MAAO,CAACwL,MAAO,SAAUgC,YAAa,WAAW9N,SAClFsN,EAAY/J,KAAI,SAACL,EAAMQ,GACtB,OACE3D,EAAAA,EAAAA,KAAC8N,EAAAA,EAAAA,OAAa,CAAahI,MAAO3C,EAAK7B,GAAGrB,SACvCkD,EAAKmC,MADY3B,EAIxB,eAKR3D,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAACgO,EAAY,CAACrP,WAAYA,EAAY2C,GAAImM,EAAc,GAAInK,YAAamK,QAIjF,E,uHCyQA,MA1aA,SAAoB5B,GAEhB,IAAAoC,EAAeC,EAAAA,EAAAA,UAARtD,GAAsB5L,EAAAA,EAAAA,GAAAiP,EAAA,GAAlB,GACXpP,GAAsCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9CsP,EAAWpP,EAAA,GAAEqP,EAAcrP,EAAA,GAClCI,GAAwCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA7CkP,EAAYjP,EAAA,GACnBoF,GADoCpF,EAAA,IACIN,EAAAA,EAAAA,UAAS,KAAG2F,GAAAzF,EAAAA,EAAAA,GAAAwF,EAAA,GAA7C8J,EAAY7J,EAAA,GACnBE,GADoCF,EAAA,IACJ3F,EAAAA,EAAAA,UAAS,KAAG8F,GAAA5F,EAAAA,EAAAA,GAAA2F,EAAA,GAArC4J,EAAQ3J,EAAA,GAAE4J,EAAW5J,EAAA,GAC5BoC,GAA0DlI,EAAAA,EAAAA,UAAS,cAAamI,GAAAjI,EAAAA,EAAAA,GAAAgI,EAAA,GAAzEyH,EAAqBxH,EAAA,GAAEyH,EAAwBzH,EAAA,GAChD1H,EAAMC,aAAaC,QAAQ,SAC3BkP,GAAQC,EAAAA,EAAAA,MACdC,GAAsC/P,EAAAA,EAAAA,UAAS,IAAGgQ,GAAA9P,EAAAA,EAAAA,GAAA6P,EAAA,GAA3CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,GAAwCnQ,EAAAA,EAAAA,UAAS,CAAC,GAAEoQ,GAAAlQ,EAAAA,EAAAA,GAAAiQ,EAAA,GAA7C9K,EAAY+K,EAAA,GAAEC,EAAeD,EAAA,GAC9BhE,GAAUC,EAAAA,EAAAA,MAChBiE,GAAwCtQ,EAAAA,EAAAA,WAAS,GAAKuQ,IAAArQ,EAAAA,EAAAA,GAAAoQ,EAAA,GAA/CE,GAAYD,GAAA,GAAEE,GAAeF,GAAA,GACpCG,IAA4B1Q,EAAAA,EAAAA,WAAS,GAAM2Q,IAAAzQ,EAAAA,EAAAA,GAAAwQ,GAAA,GAApCE,GAAMD,GAAA,GAAEE,GAASF,GAAA,GAsClBG,IACF3O,EAAAA,EAAAA,MAAA,OAAAhB,SAAA,EACID,EAAAA,EAAAA,KAAC6P,EAAAA,EAAY,KACb7P,EAAAA,EAAAA,KAAA,OACIO,MAAO,CACHuP,UAAW,EACX/D,MAAO,SACT9L,SACL,sBAMT8P,IAAgDjR,EAAAA,EAAAA,WAAS,GAAMkR,IAAAhR,EAAAA,EAAAA,GAAA+Q,GAAA,GAAxDE,GAAgBD,GAAA,GAAEE,GAAmBF,GAAA,GAqFtCG,GAAkB,SAAC7O,GACrBkB,QAAQC,IAAInB,IACZoB,EAAAA,EAAAA,GAAM,CACFC,OAAQ,OACRC,IAAK,uBACLC,KAAM,CACFvB,GAAIA,GAERwB,QAAS,CACLC,cAAc,UAAD1B,OAAY9B,MAE9ByD,MAAK,SAAUC,GACd,IAAIgC,EAAMhC,EAASJ,KAAKA,KACpBI,EAASJ,KAAKU,UACdqH,EAAKc,eAAe,CAChB0E,aAAcnL,EAAIK,OAEtB6J,EAAgBlK,GAExB,IAAGC,OAAM,SAAUC,GACf3C,QAAQC,IAAI0C,EAChB,GACJ,EA8DA,OAZA9B,EAAAA,EAAAA,YAAU,WACHsL,EAAMrN,KAhDTkB,QAAQC,IAAIkM,EAAMrN,KAClBoB,EAAAA,EAAAA,GAAM,CACFC,OAAQ,OACRC,IAAK,4BACLC,KAAM,CACFvB,GAAIqN,EAAMrN,IAEdwB,QAAS,CACLC,cAAc,UAAD1B,OAAY9B,MAE9ByD,MAAK,SAAUC,GACd,IAAIgC,EAAMhC,EAASJ,KAAKA,KACpBI,EAASJ,KAAKU,UACdqH,EAAKc,eAAe,CAChB0E,aAAcnL,EAAIK,KAClB+K,QAASpL,EAAI+D,MACbsH,SAAUrL,EAAIK,KACdiL,YAAatL,EAAI6D,MACjB0H,UAAWvL,EAAIwL,iBACfC,QAASzL,EAAI0L,SACbC,YAAa3L,EAAI2L,YACjBC,IAAK1Q,IAAO8E,EAAI4L,KAChBC,OAAuB,SAAf7L,EAAI6L,OAAoB,EAAI,EACpC5E,QAASjH,EAAI8L,UACbzQ,OAAuB,WAAf2E,EAAI3E,OACZ0Q,YAAgB,OAAH/L,QAAG,IAAHA,OAAG,EAAHA,EAAK+L,YAClBC,gBAAmB,OAAHhM,QAAG,IAAHA,OAAG,EAAHA,EAAKgM,kBAAqB,OAAHhM,QAAG,IAAHA,OAAG,EAAHA,EAAKwL,kBAC5CS,YAAe,OAAHjM,QAAG,IAAHA,OAAG,EAAHA,EAAKiM,cAAiB,OAAHjM,QAAG,IAAHA,OAAG,EAAHA,EAAK2L,aACpCO,uBAA0B,OAAHlM,QAAG,IAAHA,OAAG,EAAHA,EAAKkM,yBAA4B,OAAHlM,QAAG,IAAHA,OAAG,EAAHA,EAAK6L,UAE9D9B,EAAe/J,EAAI+L,aAChB/L,EAAI+L,aAAaxC,EAAY,CAAC,CAAC5L,IAAIqC,EAAI+L,eAC1CzB,GAAgB3E,EAAKwG,gBAAgB9Q,QACrC6P,GAAgBlL,EAAImG,gBAEpB5I,QAAQC,IAAIwC,EAAImG,gBAGxB,IAAGlG,OAAM,SAAUC,GACf3C,QAAQC,IAAI0C,EAChB,IAUIwK,IAAU,IAEXhB,EAAMrL,cACL6M,GAAgBxB,EAAMrL,aACtBqM,IAAU,GAElB,GAAG,KAIC1O,EAAAA,EAAAA,MAAA,OAAAhB,SAAA,EAEID,EAAAA,EAAAA,KAACgK,EAAAA,EACG,CACArK,MAAO+P,GAAS,0BAA0B,gCAE9CzO,EAAAA,EAAAA,MAACiN,EAAAA,EAAI,CACDtD,KAAMA,EACNyG,SAAU,CACNC,KAAM,IAEVC,WAAY,CACRD,KAAM,IAEVE,OAAO,WACPC,SAvLU,SAAC7L,GAChB+I,EAAMrL,aACLZ,EAAAA,EAAAA,GAAM,CACFC,OAAQ,OACRC,IAAK,4BACLC,KAAM,CACFuI,gBAAiBuD,EAAMrL,YACvBgC,KAAMM,EAAE0K,SACRU,YAAajC,EACb/F,MAAOpD,EAAEyK,QACTvH,MAAO4I,OAAO9L,EAAE2K,aAChBI,SAA8B,cAApB/K,EAAEqL,eAAiCrL,EAAE8K,QAAU9K,EAAEsL,WAC3DL,IAAK,KACLE,UAAW,CAAC,GACZzQ,OAAQgP,GAAe,SAAS,WAChC2B,eAAgBrL,EAAEqL,eAClBC,WAAYtL,EAAEsL,WAEdT,iBAAkB7K,EAAEqL,eACpBL,YAAahL,EAAEsL,WACfJ,OAAQlL,EAAEuL,uBAKdrO,QAAS,CACLC,cAAc,UAAD1B,OAAY9B,MAE9ByD,MAAK,SAAUC,GACdT,QAAQC,IAAIQ,EAASJ,MAClBI,EAASJ,KAAKU,SACb2M,IAAoB,GACpBlI,YAAW,WACPkI,IAAoB,GACpBhF,EAAQyG,QACZ,GAAG,OAEHnM,EAAAA,GAAAA,MAAcvC,EAASJ,KAAK+O,IAEpC,IAAG1M,OAAM,SAAUC,GACf3C,QAAQC,IAAI0C,EAChB,KAEAzC,EAAAA,EAAAA,GAAM,CACFC,OAAQ,OACRC,IAAK,+BACLC,KAAM,CACFvB,GAAIqN,EAAMrN,GACV8J,eAAgBjH,EAAa7C,GAC7BgE,KAAMM,EAAE0K,SACRU,YAAajC,EACb/F,MAAOpD,EAAEyK,QACTvH,MAAO4I,OAAO9L,EAAE2K,aAChBI,SAA+B,cAApB/K,EAAEqL,eAAiCrL,EAAE8K,QAAU9K,EAAEsL,WAC5DL,IAAK1Q,IAAOyF,EAAEiL,KAAKxQ,OAAO,cAC1B0Q,UAAW,CAAC,GACZzQ,OAAQgP,GAAe,SAAW,WAClC2B,eAAgBrL,EAAEqL,eAClBC,WAAYtL,EAAEsL,WAEdT,iBAAkB7K,EAAEqL,eACpBL,YAAahL,EAAEsL,WACfJ,OAAQlL,EAAEuL,uBAEdrO,QAAS,CACLC,cAAc,UAAD1B,OAAY9B,MAE9ByD,MAAK,SAAUC,GACXA,EAASJ,KAAKU,SACb2M,IAAoB,GACpBlI,YAAW,WACPkI,IAAoB,GACpBhF,EAAQyG,QACZ,GAAG,OAEHnM,EAAAA,GAAAA,MAAcvC,EAASJ,KAAK+O,IAEpC,IAAG1M,OAAM,SAAUC,GACf3C,QAAQC,IAAI0C,EAChB,GAER,EAsGoClF,SAAA,EAExBgB,EAAAA,EAAAA,MAAC4Q,EAAAA,EAAI,CAACtQ,UAAU,OAAMtB,SAAA,EAClBD,EAAAA,EAAAA,KAAA,OAAKuB,UAAU,6BAA6BhB,MAAO,CAACC,MAAO,OAAOP,UAChED,EAAAA,EAAAA,KAAA,OAAAC,SAAK,oCAGPgB,EAAAA,EAAAA,MAAC6Q,EAAAA,EAAG,CACAC,MAAM,SAAQ9R,SAAA,EAEdgB,EAAAA,EAAAA,MAAC+Q,EAAAA,EAAG,CAACV,KAAM,GAAGrR,SAAA,EACVgB,EAAAA,EAAAA,MAACiN,EAAAA,EAAAA,KAAS,CAAC5I,KAAK,QAAQ6E,MAAM,kBAAiBlK,SAAA,EAC3CD,EAAAA,EAAAA,KAACiS,EAAAA,EACG,CACAC,SAAS,eACT3D,SAAUA,EACV4D,OAAO,UACPxM,SA1PX,SAAHjH,GAAmC,IAAnB0T,EAAW1T,EAArB6P,SACpBC,EAAY4D,GACZ5P,QAAQC,IAAI2P,GACZ,IAAMC,EAAW,IAAIC,SAElBF,EAAYG,OAAS,IAOpBF,EAASG,OAAO,OAAQJ,EAAY,GAAGK,gBACvC/P,EAAAA,EAAAA,GAAM,CACFC,OAAQ,OACRC,IAAK,0BACLC,KAAMwP,EACNvP,QAAS,CACL,eAAe,sBACfC,cAAc,UAAD1B,OAAY9B,MAG5ByD,MAAK,SAAUC,GACZT,QAAQC,IAAIQ,EAASJ,MACjBI,EAASJ,KAAKU,SAClByL,EAAe/L,EAASJ,KAAKD,IAEjC,IACCsC,OAAM,SAAUC,GACb3C,QAAQC,IAAI0C,EAChB,IAEZ,EA2NgCuN,SAAU,EACVC,aAAc,WACV,OAAO,CACX,EACAC,eAAgB,CACZC,iBAAiB,GACnB5S,SAEDsO,EAASgE,QAAU,EAAI,KAAO3C,MAEnC5P,EAAAA,EAAAA,KAAC+B,EAAAA,EAAK,CAAC+Q,KAAM3E,EAAaxO,MAAO2O,EAAcpM,OAAQ,KAAMmD,SAvQpE,WAAH,OAAS+I,GAAe,EAAO,EAuQ+DnO,UAChFD,EAAAA,EAAAA,KAAA,OACIuK,IAAI,UACJhK,MAAO,CACHwL,MAAO,QAEX1B,IAAKgE,UAiBjBrO,EAAAA,EAAAA,KAACkO,EAAAA,EAAAA,KAAS,CAAC5I,KAAK,iBAAiB6E,MAAM,iBAAgBlK,UACnDgB,EAAAA,EAAAA,MAAC6M,EAAAA,EAAM,CACHiF,YAAU,EACVhF,YAAY,iBACZiF,iBAAiB,WACjBC,aAAc,SAACC,EAAOC,GAAM,IAAAC,EAAAC,EAAA,OAAmD,QAAnDD,GAAmB,QAAdC,EAAO,OAANF,QAAM,IAANA,OAAM,EAANA,EAAQxT,aAAK,IAAA0T,EAAAA,EAAI,IAAIC,WAAWC,qBAAa,IAAAH,OAAA,EAA9CA,EAAgDI,SAAc,OAALN,QAAK,IAALA,OAAK,EAALA,EAAOK,cAAc,EAC/GE,WAAY,SAACC,EAASC,GAAO,IAAAC,EAAAC,EAAA,OACV,QAAfD,EAAQ,OAAPF,QAAO,IAAPA,OAAO,EAAPA,EAASvJ,aAAK,IAAAyJ,EAAAA,EAAI,IAAIN,WAAWC,cAAc1M,eAA6B,QAAfgN,EAAQ,OAAPF,QAAO,IAAPA,OAAO,EAAPA,EAASxJ,aAAK,IAAA0J,EAAAA,EAAI,IAAIP,WAAWC,cAAc,EAElHzN,MAAO2I,EACP9I,SAAU+I,EAAyBzO,SAAA,EAEnCD,EAAAA,EAAAA,KAAC8N,EAAAA,EAAAA,OAAa,CAAChI,MAAO,aAAa7F,SAAC,gBACpCD,EAAAA,EAAAA,KAAC8N,EAAAA,EAAAA,OAAa,CAAChI,MAAO,UAAU7F,SAAC,kBAIzCD,EAAAA,EAAAA,KAACkO,EAAAA,EAAAA,KAAS,CAAC5I,KAAK,UAAU6E,MAAM,WAAW2J,MAAO,CAAC,CAAEC,UAAU,EAAM1R,KAAM,QAASmD,QAAS,sCAAuCvF,UAChID,EAAAA,EAAAA,KAACkE,EAAAA,EAAK,OAGVlE,EAAAA,EAAAA,KAACkO,EAAAA,EAAAA,KAAS,CAAC5I,KAAK,wBAAwB6E,MAAM,wBAAwB2J,MAAO,CAAC,CAAEC,UAAU,EAAMvO,QAAS,wCAAyCvF,UAC9ID,EAAAA,EAAAA,KAACkE,EAAAA,EAAK,UAKdjD,EAAAA,EAAAA,MAAC+Q,EAAAA,EAAG,CAACV,KAAM,GAAGrR,SAAA,EACVD,EAAAA,EAAAA,KAACkO,EAAAA,EAAAA,KAAS,CAAC5I,KAAK,WAAW6E,MAAM,OAAO2J,MAAO,CAAC,CAAEC,UAAU,EAAMvO,QAAS,uBAAwBvF,UAC/FD,EAAAA,EAAAA,KAACkE,EAAAA,EAAK,OAGVlE,EAAAA,EAAAA,KAACkO,EAAAA,EAAAA,KAAS,CAAC5I,KAAK,cAAc6E,MAAM,eAAe2J,MAAO,CAAC,CAAEC,UAAU,EAAMvO,QAAS,8BACtF,CACIA,QAAS,0CACTwO,UAAW,SAAClU,EAAGgG,GACX,MAAI,WAAWmO,KAAKC,OAAOpO,IAChBqO,QAAQC,UAERD,QAAQE,OAAO,oBAE9B,IACDpU,UACCD,EAAAA,EAAAA,KAACkE,EAAAA,EAAK,CAAC3D,MAAO,CAAEwL,MAAO,QAAUuI,UAAW,MASrB,eAA1B7F,IAA0CzO,EAAAA,EAAAA,KAACkO,EAAAA,EAAAA,KAAS,CAAC5I,KAAK,UAAU6E,MAAM,WAAW2J,MAAO,CACzF,CACIC,UAAU,EACVvO,QAAS,6BAEb,CACIA,QAAS,sHACTwO,UAAW,SAAClU,EAAGgG,GACX,MAAI,sBAAsBmO,KAAKnO,GACpBqO,QAAQC,UAERD,QAAQE,OAAO,oBAE9B,IAENpU,UACED,EAAAA,EAAAA,KAACkE,EAAAA,EAAK,MAEiB,YAA1BuK,IAAuCzO,EAAAA,EAAAA,KAACkO,EAAAA,EAAAA,KAAS,CAAC5I,KAAK,aAAa6E,MAAM,aAAa2J,MAAO,CAAC,CAAEC,UAAU,EAAMvO,QAAS,gCAAiCvF,UACxJD,EAAAA,EAAAA,KAACkE,EAAAA,EAAK,aAsBlBlE,EAAAA,EAAAA,KAAC8R,EAAAA,EAAG,CAACC,MAAM,SAAQ9R,UACfD,EAAAA,EAAAA,KAACgS,EAAAA,EAAG,CAACV,KAAM,GAAGrR,UACVgB,EAAAA,EAAAA,MAACiN,EAAAA,EAAAA,KAAS,CAAC5I,KAAK,SAAS6E,MAAM,SAAS5J,MAAO,CAACgU,aAAc,SAAStU,SAAA,CACtEqP,GAAe,SAAS,YAAWtP,EAAAA,EAAAA,KAACwU,EAAAA,EAAM,CAACC,QAASnF,GAAc1N,QAnLhE,SAAC6S,GACxBlF,GAAgBkF,EAClB,EAiLsHlT,UAAU,oBAMtHN,EAAAA,EAAAA,MAACiN,EAAAA,EAAAA,KAAS,CAAC3M,UAAS,gCAAkCtB,SAAA,EAClDD,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,CAACP,QAASsJ,EAAQyG,OAAO1R,SAAC,UACjCD,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,CACHP,QAAS,WACLgJ,EAAK8J,cACLlG,EAAY,GAChB,EACAjN,UAAU,OAAMtB,SACnB,eAEDD,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,CAACE,KAAK,UAAUsS,SAAS,SAAQ1U,SAAC,gBAIjDgB,EAAAA,EAAAA,MAACc,EAAAA,EAAK,CAACE,UAAQ,EAACD,QAASiO,GAAkB/N,OAAQ,CAAC,MAAOmD,SAAU,WAAQ6K,IAAoB,EAAO,EAAEjQ,SAAA,CACrG0O,EAAMrL,cAAetD,EAAAA,EAAAA,KAACuJ,EAAAA,EAAa,CAACC,KAAMC,EAAAA,GAAc9J,MAAM,+BAA+B+J,KAAK,oCAClGiF,EAAMrN,KAAMtB,EAAAA,EAAAA,KAACuJ,EAAAA,EAAa,CAACC,KAAMC,EAAAA,GAAc9J,MAAM,iCAAiC+J,KAAK,2CAI5G,E,+EC/IA,OA/RA,SAAsBhL,GAA0B,IAAvBE,EAAMF,EAANE,OAAQD,EAAUD,EAAVC,WAC/BE,GAAwCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GACpDM,GADmBJ,EAAA,GAAiBA,EAAA,IACUD,EAAAA,EAAAA,WAAS,IAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAtDE,EAAeD,EAAA,GAAEE,EAAkBF,EAAA,GAC1CoF,GAAwB1F,EAAAA,EAAAA,UAAS,GAAE2F,GAAAzF,EAAAA,EAAAA,GAAAwF,EAAA,GAA5B8B,EAAI7B,EAAA,GAIXE,GAJoBF,EAAA,IAIY3F,EAAAA,EAAAA,UAAS,KAAG8F,GAAA5F,EAAAA,EAAAA,GAAA2F,EAAA,GAArCiQ,EAAQhQ,EAAA,GAAEiQ,EAAWjQ,EAAA,GAEtBsG,GAAUC,EAAAA,EAAAA,MAGV5L,IAFQuV,EAAAA,EAAAA,MAEFtV,aAAaC,QAAQ,UAE3BC,EAAU,CACd,CACEC,MAAO,QACPC,UAAW,SAEb,CACED,MAAO,KACPC,UAAW,UAcb,CACED,MAAO,iBACPC,UAAW,YAEb,CACED,MAAO,UACPC,UAAW,GACXC,OAAQ,SAACiI,GACP,OAAO9H,EAAAA,EAAAA,KAAA,OAAAC,SAAM,KACf,GAGF,CACEN,MAAO,iBACPC,UAAW,gBAEb,CACED,MAAO,iBACPC,UAAW,kBAEb,CACED,MAAO,SACPC,UAAW,SACXC,OAAQ,SAACC,EAAEC,GACT,MAAmB,aAAhBA,EAAOO,QAAuC,aAAhBP,EAAOO,QAA4BN,EAAAA,EAAAA,KAAA,QAAMO,MAAO,CAACC,MAAO,UAAWC,gBAAiB,UAAWC,QAAS,UAAWC,aAAa,MAAOC,WAAW,MAAOC,SAAU,QAAQZ,SAAC,cACjMD,EAAAA,EAAAA,KAAA,QAAMO,MAAO,CAACC,MAAO,UAAWC,gBAAiB,UAAWC,QAAS,UAAWC,aAAa,MAAOC,WAAW,MAAOC,SAAU,QAAQZ,SAAC,UACvJ,GAEF,CACEN,MAAO,SAEPE,OAAQ,SAACC,EAAEC,GACT,OACEC,EAAAA,EAAAA,KAAAc,EAAAA,SAAA,CAAAb,UACED,EAAAA,EAAAA,KAACe,EAAAA,EAAgB,CACfC,MACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAAAjB,SAAA,EACHD,EAAAA,EAAAA,KAACkB,EAAAA,EAAAA,KAAS,CAAAjB,UACRgB,EAAAA,EAAAA,MAACE,EAAAA,GAAI,CACHC,GAAE,sEAAAC,OAAwEtB,EAAOgV,QACjFxT,UAAU,4BAA2BtB,SAAA,EAErCD,EAAAA,EAAAA,KAACwB,EAAAA,EAAI,CAACD,UAAU,OAAOE,UAAWE,EAAAA,KAAY,aAIlD3B,EAAAA,EAAAA,KAACkB,EAAAA,EAAAA,KAAS,CACRU,QAAS,WACPC,GACF,EAAE5B,UAEFgB,EAAAA,EAAAA,MAAA,QAAMM,UAAU,4BAA2BtB,SAAA,EACzCD,EAAAA,EAAAA,KAACwB,EAAAA,EAAI,CAACD,UAAU,OAAOE,UAAWK,EAAAA,KAAc,eAKpD9B,EAAAA,EAAAA,KAAC+B,EAAAA,EAAK,CACJC,QAAS3C,EACTgG,SAAUjD,EACVH,UAAQ,EACRC,OAAQ,EACNlC,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,CACL5B,MAAO,CAAEC,MAAO,WAChBoB,QAASQ,EACTb,UAAU,mBAAkBtB,SAC7B,gBAGDD,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,CACLE,KAAK,UACLd,UAAU,mBACVK,QAAS,kBAAIU,EAASvC,EAAOgV,OAAO,EAAC9U,SACtC,kBAGDA,UAEFD,EAAAA,EAAAA,KAAA,OACEO,MAAO,CAAEC,MAAO,WAChBe,UAAU,kCAAiCtB,SAC5C,gEASf,IAIEmC,EAAe,WACnB9C,GAAmB,EACrB,EAEMgD,EAAW,SAAC0S,GAChBxS,QAAQC,IAAIuS,GACZ1V,GAAmB,GACnBoD,EAAAA,EAAAA,KAEI,gCACA,CACEpB,GAAI0T,IAGPhS,MAAK,SAACC,GACL,IAAIgC,EAAMhC,EAASJ,KACnBL,QAAQC,IAAIwC,GACTA,EAAI1B,SACL0R,GAEJ,IACC/P,OAAM,SAACC,GACN3C,QAAQC,IAAI0C,EACd,GACJ,EAEMtD,EAAkB,WACtBvC,GAAmB,EACrB,EAMM2V,EAA2B,WAC/B,IAAMpS,EAAO,CACXS,YAAa1E,EACbyJ,WAAY/B,EACZgC,UAAW,GACX1E,OAAQjF,IAEZ+D,EAAAA,EAAAA,GAAM,CACJC,OAAQ,OACRC,IAAK,6BACLC,KAAMA,EACNC,QAAS,CACPC,cAAc,UAAD1B,OAAY9B,MAG1ByD,MAAK,SAACC,GACLT,QAAQC,IAAIQ,EAASJ,MACrB,IAAIoC,EAAMhC,EAASJ,KAAKA,KAAKA,KAEzB0F,EAAQtD,EAAIzB,KAAI,SAACL,EAAMM,GACzB,MAAO,CACLsG,MAAOtG,EAAI,EACXmF,IAAKnF,EACLsR,OAAQ5R,EAAK7B,GACbgP,SAAUnN,EAAKmC,KACfwL,QAAQ9Q,EAAAA,EAAAA,KAACwB,EAAAA,EAAI,CAACC,UAA2B,SAAhB0B,EAAK2N,OAAoBoE,EAAAA,GAAUC,EAAAA,KAC5DvE,YACuB,UAArBzN,EAAKyN,aAA0B5Q,EAAAA,EAAAA,KAACoV,GAAAA,GAAE,CAACzV,MAAM,KAAK4B,UAAU,gBACjC,cAArB4B,EAAKyN,aAA8B5Q,EAAAA,EAAAA,KAACqV,GAAAA,GAAE,CAAC1V,MAAM,KAAK4B,UAAU,iBAC5DvB,EAAAA,EAAAA,KAACsV,GAAAA,GAAE,CAAC3V,MAAM,KAAK4B,UAAU,gBAE7BqL,IAAK,CAAEC,MAAO1J,EAAK6N,YAAa1L,KAAMnC,EAAKmC,MAC3CiQ,aAAcpS,EAAK2F,MACnBC,QAAS5F,EAAK6F,MACdkD,QAAS/I,EAAK4N,UACdzQ,OAAQ6C,EAAK7C,OACb2Q,eAAgB9N,EAAK8N,gBAAkB9N,EAAKsN,iBAC5C+E,YAAarS,EAAKqS,aAAerS,EAAKyN,YACtCO,sBAAuBhO,EAAKgO,uBAAyBhO,EAAK2N,OAE9D,IACAtO,QAAQC,IAAIwC,GACZ4P,EAAYD,EAASvT,OAAOkH,GAC9B,IACCvF,MAAK,SAACI,GACLZ,QAAQC,IAAIW,EACd,GACF,EAmDA,OAjDAC,EAAAA,EAAAA,YAAU,WACR,IAAMR,EAAO,CACTS,YAAa1E,EACbyJ,WAAY/B,EACZgC,UAAW,KAEf5F,EAAAA,EAAAA,GAAM,CACJC,OAAQ,OACRC,IAAK,6BACLC,KAAMA,EACNC,QAAS,CACPC,cAAc,UAAD1B,OAAY9B,MAG1ByD,MAAK,SAACC,GACLT,QAAQC,IAAIQ,EAASJ,MACrB,IAAIoC,EAAMhC,EAASJ,KAAKA,KAAKA,KAEzB0F,EAAQtD,EAAIzB,KAAI,SAACL,EAAMM,GACzB,MAAO,CACLsG,MAAOtG,EAAI,EACXmF,IAAKnF,EACLsR,OAAQ5R,EAAK7B,GACbgP,SAAUnN,EAAKmC,KACfwL,QAAQ9Q,EAAAA,EAAAA,KAACwB,EAAAA,EAAI,CAACC,UAA2B,SAAhB0B,EAAK2N,OAAoBoE,EAAAA,GAAUC,EAAAA,KAC5DvE,YACuB,UAArBzN,EAAKyN,aAA0B5Q,EAAAA,EAAAA,KAACoV,GAAAA,GAAE,CAACzV,MAAM,KAAK4B,UAAU,gBACjC,cAArB4B,EAAKyN,aAA8B5Q,EAAAA,EAAAA,KAACqV,GAAAA,GAAE,CAAC1V,MAAM,KAAK4B,UAAU,iBAC5DvB,EAAAA,EAAAA,KAACsV,GAAAA,GAAE,CAAC3V,MAAM,KAAK4B,UAAU,gBAE7BqL,IAAK,CAAEC,MAAO1J,EAAK6N,YAAa1L,KAAMnC,EAAKmC,MAC3CiQ,aAAcpS,EAAK2F,MACnBC,QAAS5F,EAAK6F,MACdkD,QAAS/I,EAAK4N,UACdzQ,OAAQ6C,EAAK7C,OAEjB,IACAkC,QAAQC,IAAIwC,GACZ4P,EAAYD,EAASvT,OAAOkH,GAC9B,IACCvF,MAAK,SAACI,GACLZ,QAAQC,IAAIW,EACd,GACJ,GAAG,KAEHC,EAAAA,EAAAA,YAAU,WACR4R,GACF,GAAG,CAACtW,KAGFsC,EAAAA,EAAAA,MAAA,OAAAhB,SAAA,EACED,EAAAA,EAAAA,KAAC6D,EAAAA,EAEC,CACAnE,QAASA,EACToE,WAAY8Q,KAGd5U,EAAAA,EAAAA,KAAC6R,EAAAA,EAAI,CAACtQ,UAAU,OAAMtB,UAClBgB,EAAAA,EAAAA,MAACkB,EAAAA,EAAM,CACLsT,OAAK,EACLpT,KAAK,SACLd,UAAU,6DACVK,QApHsB,WAC9BsJ,EAAQG,KAAK,yEAADhK,OAA0EzC,GACxF,EAkH2CqB,SAAA,EAEjCD,EAAAA,EAAAA,KAACwB,EAAAA,EAAI,CAACC,UAAWiU,EAAAA,MACjB1V,EAAAA,EAAAA,KAAC2V,GAAAA,EAAK,CAACC,MAAO,EAAGrU,UAAU,OAAOhB,MAAO,CAAEC,MAAO,WAAYP,UAC5DD,EAAAA,EAAAA,KAAA,KAAAC,SAAG,wCAMjB,E,YCzSwB4V,GAAAA,EAAAA,MAAAA,GAAAA,EAAAA,KAiKxB,OA/JA,WACI,IAAMtW,EAAMC,aAAaC,QAAQ,SAC3BkP,GAAQC,EAAAA,EAAAA,MACd/P,GAAwBC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GACnCM,GADWJ,EAAA,GAASA,EAAA,IACMD,EAAAA,EAAAA,UAAS,IAAEM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GACrCqF,GADYpF,EAAA,GAAUA,EAAA,IACkBN,EAAAA,EAAAA,UAAS,CAAC,IAAE2F,GAAAzF,EAAAA,EAAAA,GAAAwF,EAAA,GAA7CL,EAAYM,EAAA,GAAE0K,EAAe1K,EAAA,GA4CpC,OA1CAjC,QAAQC,IAAIkM,EAAMrN,KAsClB+B,EAAAA,EAAAA,YAAU,YAhCNX,EAAAA,EAAAA,GAAM,CACFC,OAAQ,OACRC,IAAK,uBACLE,QAAS,CACLC,cAAc,UAAD1B,OAAY9B,IAE7BsD,KAAM,CACFvB,GAAGqN,EAAMrN,MAEd0B,MAAK,SAACC,GAEL,GADAT,QAAQC,IAAIQ,EAASJ,MACjBI,EAASJ,KAAKU,QAAS,CACvB,GAAGN,EAASJ,KAAKA,KAAK2F,cAAe,CACjC,IAAIA,EAAgBC,KAAKC,MAAMzF,EAASJ,KAAKA,KAAK2F,eAC9CvD,GAAGvB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAOT,EAASJ,KAAKA,MAAS2F,GAErC,YADA2G,EAAgBlK,EAEpB,CACAkK,EAAgBlM,EAASJ,KAAKA,KAClC,MACIL,QAAQC,IAAIQ,EAEpB,GAYJ,GAAG,KAGChC,EAAAA,EAAAA,MAAA,OAAAhB,SAAA,EACID,EAAAA,EAAAA,KAAC6R,EAAAA,EAAI,CAACtR,MAAO,CAAEuV,WAAY,UAAWC,UAAW,SAAU9V,UACvDgB,EAAAA,EAAAA,MAAA,OAAKM,UAAU,iCAAgCtB,SAAA,EAC3CgB,EAAAA,EAAAA,MAAA,OAAKM,UAAU,OAAMtB,SAAA,EACjBD,EAAAA,EAAAA,KAAA,OAAKuB,UAAU,oCAAmCtB,UAC9CD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,gCAERD,EAAAA,EAAAA,KAAA,OAAKuB,UAAU,oCAAmCtB,UAC9CD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,8BAERD,EAAAA,EAAAA,KAAA,OAAKuB,UAAU,oCAAmCtB,UAC9CD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,wBAERD,EAAAA,EAAAA,KAAA,OAAKuB,UAAU,oCAAmCtB,UAC9CD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,4BAERD,EAAAA,EAAAA,KAAA,OAAKuB,UAAU,oCAAmCtB,UAC9CD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,qCAERD,EAAAA,EAAAA,KAAA,OAAKuB,UAAU,oCAAmCtB,UAC9CD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,mBAERD,EAAAA,EAAAA,KAAA,OAAKuB,UAAU,oCAAmCtB,UAC9CD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,6BAGZgB,EAAAA,EAAAA,MAAA,OAAKM,UAAU,OAAMtB,SAAA,EACjBD,EAAAA,EAAAA,KAAA,OAAKuB,UAAU,oCAAmCtB,UAC9CD,EAAAA,EAAAA,KAAA,MAAAC,SAAMkE,EAAamB,UAEvBtF,EAAAA,EAAAA,KAAA,OAAKuB,UAAU,oCAAmCtB,UAC9CD,EAAAA,EAAAA,KAAA,MAAAC,SAAMkE,EAAa6R,kBAEvBhW,EAAAA,EAAAA,KAAA,OAAKuB,UAAU,oCAAmCtB,UAC9CD,EAAAA,EAAAA,KAAA,MAAAC,SAAMkE,EAAa6E,WAEvBhJ,EAAAA,EAAAA,KAAA,OAAKuB,UAAU,oCAAmCtB,UAC9CD,EAAAA,EAAAA,KAAA,MAAAC,SAAMkE,EAAa2E,WAEvB9I,EAAAA,EAAAA,KAAA,OAAKuB,UAAU,oCAAmCtB,UAC9CD,EAAAA,EAAAA,KAAA,MAAAC,SAAMkE,EAAagN,2BAEvBnR,EAAAA,EAAAA,KAAA,OAAKuB,UAAU,oCAAmCtB,UAC9CD,EAAAA,EAAAA,KAAA,MAAAC,SAAMkE,EAAa+M,YAAc,YAErClR,EAAAA,EAAAA,KAAA,OAAKuB,UAAU,oCAAmCtB,UAC9CD,EAAAA,EAAAA,KAAA,MAAAC,SAAMkE,EAAa8E,wBAMnChI,EAAAA,EAAAA,MAAC4Q,EAAAA,EAAI,CAACtR,MAAO,CAAEuV,WAAY,UAAWC,UAAW,QAASjG,UAAW,QAAS7P,SAAA,EAC1ED,EAAAA,EAAAA,KAAA,MAAAC,UAAID,EAAAA,EAAAA,KAAA,UAAAC,SAAQ,wBAEZgB,EAAAA,EAAAA,MAAA,OAAKM,UAAU,iCAAgCtB,SAAA,EAC3CgB,EAAAA,EAAAA,MAAA,OAAKM,UAAU,OAAMtB,SAAA,EACjBD,EAAAA,EAAAA,KAAA,OAAKuB,UAAU,oCAAmCtB,UAC9CD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,uBAERD,EAAAA,EAAAA,KAAA,OAAKuB,UAAU,oCAAmCtB,UAC9CD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,2BAERD,EAAAA,EAAAA,KAAA,OAAKuB,UAAU,oCAAmCtB,UAC9CD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,6BAERD,EAAAA,EAAAA,KAAA,OAAKuB,UAAU,oCAAmCtB,UAC9CD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,4BAERD,EAAAA,EAAAA,KAAA,OAAKuB,UAAU,oCAAmCtB,UAC9CD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,0BAGZgB,EAAAA,EAAAA,MAAA,OAAKM,UAAU,OAAMtB,SAAA,EACjBD,EAAAA,EAAAA,KAAA,OAAKuB,UAAU,oCAAmCtB,UAC9CD,EAAAA,EAAAA,KAAA,MAAAC,SAAMkE,EAAaoI,iBAEvBvM,EAAAA,EAAAA,KAAA,OAAKuB,UAAU,oCAAmCtB,UAC9CD,EAAAA,EAAAA,KAAA,MAAAC,SAAMkE,EAAaiI,iBAEvBpM,EAAAA,EAAAA,KAAA,OAAKuB,UAAU,oCAAmCtB,UAC9CD,EAAAA,EAAAA,KAAA,MAAAC,SAAMkE,EAAakI,mBAEvBrM,EAAAA,EAAAA,KAAA,OAAKuB,UAAU,oCAAmCtB,UAC9CD,EAAAA,EAAAA,KAAA,MAAAC,SAAMkE,EAAamI,kBAEvBtM,EAAAA,EAAAA,KAAA,OAAKuB,UAAU,oCAAmCtB,UAC9CD,EAAAA,EAAAA,KAAA,MAAAC,SAAMkE,EAAaqI,sBAMnCvL,EAAAA,EAAAA,MAAC4Q,EAAAA,EAAI,CAACtR,MAAO,CAAEuV,WAAY,UAAWC,UAAW,QAASjG,UAAW,QAAS7P,SAAA,EAC1ED,EAAAA,EAAAA,KAAA,MAAAC,UAAID,EAAAA,EAAAA,KAAA,UAAAC,SAAQ,oBAEXkE,EAAa8R,eAAgBjW,EAAAA,EAAAA,KAAA,OAAKuB,UAAU,+BAA8BtB,UACvED,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,CAACP,QAAS,WACbY,QAAQC,IAAI,yBACT0B,EAAa8R,eAAeC,OAAOpD,KAAK3O,EAAa8R,cAAcrT,IAC1E,EAAE3C,SAAC,0BAGED,EAAAA,EAAAA,KAAA,OAAAC,SAAK,2BAI9B,E,YCkBA,ICpLIkW,GDoLJ,GA9KA,SAAqBzX,GAA+G,IAA7GC,EAAUD,EAAVC,WAAY2E,EAAW5E,EAAX4E,YAAaoH,EAAYhM,EAAZgM,aAAc4C,EAAe5O,EAAf4O,gBAAiB1C,EAAIlM,EAAJkM,KAAME,EAAcpM,EAAdoM,eAAgBsL,EAAW1X,EAAX0X,YAAaC,EAAc3X,EAAd2X,eAG9GxX,GAAoDC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5DqI,EAAkBnI,EAAA,GAAEoI,EAAqBpI,EAAA,GAC1CQ,EAAMC,aAAaC,QAAQ,SAC3BkP,GAAQC,EAAAA,EAAAA,MACdpM,QAAQC,IAAIkM,EAAMrN,IAClB,IAAAnC,GAAwBL,EAAAA,EAAAA,UAAS,GAAEM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA5BmH,EAAIlH,EAAA,GAAEmH,EAAOnH,EAAA,GACpBoF,GAA0B1F,EAAAA,EAAAA,UAAS,GAAE2F,GAAAzF,EAAAA,EAAAA,GAAAwF,EAAA,GAA9BgC,EAAK/B,EAAA,GAAEgC,EAAQhC,EAAA,GAEhB/E,EAAU,CACZ,CACEC,MAAO,aACPC,UAAW,MAEb,CACED,MAAO,eACPC,UAAW,QAEb,CACED,MAAO,UACPC,UAAW,UACXmM,MAAO,KAET,CACEpM,MAAO,UACPC,UAAW,iBAEb,CACED,MAAO,eACPC,UAAW,eACXmM,MAAO,KAET,CACEpM,MAAO,QACPC,UAAW,eAEb,CACED,MAAO,SACPC,UAAW,SACXC,OAAQ,SAACC,EAAEC,GACT,MAAmB,WAAhBA,EAAOO,QAA0BN,EAAAA,EAAAA,KAAA,QAAMO,MAAO,CAACC,MAAO,UAAWC,gBAAiB,UAAWC,QAAS,UAAWC,aAAa,MAAOC,WAAW,MAAOC,SAAU,QAAQZ,SAAC,YACjKD,EAAAA,EAAAA,KAAA,QAAMO,MAAO,CAACC,MAAO,UAAWC,gBAAiB,UAAWC,QAAS,UAAWC,aAAa,MAAOC,WAAW,MAAOC,SAAU,QAAQZ,SAAC,YACvJ,GAEF,CACEN,MAAO,SACPC,UAAW,SACXC,OAAQ,SAACC,EAAGC,GACV,OACEC,EAAAA,EAAAA,KAACgM,EAAoB,CACnBjM,OAASA,EACTuB,GAAIvB,EAAOuB,GACXgC,YAAavD,EAAOqL,eACpBL,OAAQkB,EACR7H,SAAU2C,EACVkE,WAAYmL,EAAY9U,GACxBoJ,aAAcA,EACdC,aAAaD,EACbE,KAAMA,EACNC,SAAUuL,EACVtL,eAAgBA,EAChBE,YAAaA,GAGnB,IAIAA,EAAc,SAACsL,GACjB9T,QAAQC,IAAIa,IACZZ,EAAAA,EAAAA,GAAM,CACFC,OAAQ,OACRC,IAAK,iCAILC,KAAM,CACFS,YAAaA,EACb+E,WAAYiO,EACZhO,UAAW,GACX1E,OAASjF,GAAsB,QAEpCqE,MAAK,SAACC,GACLT,QAAQC,IAAI,iBAAiBQ,EAASJ,KAAKA,KAAKA,MAC5CI,EAASJ,KAAKU,SAEV8S,EADW,IAAXC,EACerT,EAASJ,KAAKA,KAAKA,KAEnB,GAADxB,QAAAkV,EAAAA,GAAAA,GAAKH,IAAWG,EAAAA,GAAAA,GAAItT,EAASJ,KAAKA,KAAKA,OAGjE,IAAGqC,OAAM,SAAC9B,GACNZ,QAAQC,IAAIW,EAChB,GACJ,EASM6I,EAAc,SAAC3K,GACjBgM,EAAgBhM,GAChBkB,QAAQC,IAAI,WAChB,EAEMsE,EAAa,eAAAK,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOlG,GAAE,OAAAgG,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC3B,IACEnF,EAAAA,EAAAA,KAEI,mCACA,CACEpB,GAAIA,GAEN,CACEwB,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD1B,OAAY9B,MAI9ByD,MAAK,SAACC,GACLT,QAAQC,IAAIQ,EACd,IACCiC,OAAM,SAACC,GACN3C,QAAQC,IAAI0C,EACd,IAGFgC,GAAsB,GACtBa,YAAW,WACTb,GAAsB,EACxB,GAAG,IACL,CAAE,MAAO/D,GACPZ,QAAQC,IAAIW,EAAIoC,QAClB,CAAC,wBAAAmC,EAAAM,OAAA,GAAAT,EAAA,KACJ,gBA9BkBU,GAAA,OAAAd,EAAAe,MAAA,KAAAC,UAAA,KAuCnB,OAPA/E,EAAAA,EAAAA,YAAU,WACN2H,GACJ,GAAG,CAAC1E,KACJjD,EAAAA,EAAAA,YAAU,WACN2H,EAAY,EAChB,GAAG,CAACrM,KAGAsC,EAAAA,EAAAA,MAAA,OAAAhB,SAAA,EACID,EAAAA,EAAAA,KAAC6D,EAAAA,EAAK,CAACqF,OACH,CAACC,EAAE,MAEPqN,OAAQ,SAACC,GAAG,OAAKA,EAAInV,EAAE,EACvB5B,QAASA,EAASoE,WAAYsS,EAAazQ,SAzD9B,SAAC0D,GACd7C,GAAS6C,EAAWC,UACpB/C,EAAQ8C,EAAWC,SACnB7C,EAAS4C,EAAWC,SAE5B,EAoD2E/I,MAAO,CAACmW,SAAS,WAEpF1W,EAAAA,EAAAA,KAAC+B,EAAAA,EAAK,CACFE,UAAQ,EACRD,QAASkF,EACThF,OAAQ,CAAC,MACTmD,SAAU,WACV8B,GAAsB,EACtB,EAAElH,UAEFD,EAAAA,EAAAA,KAACuJ,EAAAA,EAAa,CACdC,KAAMC,EAAAA,GACN9J,MAAM,iCACN+J,KAAK,6BAKrB,E,YClGA,GA3DuB,SAAHhL,GAA6B,IAAvBiY,EAAejY,EAAfiY,gBAEpB9X,GAA0BC,EAAAA,EAAAA,YAAUC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7B+X,EAAK7X,EAAA,GAAE8X,EAAQ9X,EAAA,GAChB+X,GAAkBC,EAAAA,EAAAA,QAAO,MAgBzBC,EAAiB,eAAA5P,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOyP,GAAW,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAV,EAAAW,EAAA,OAAAjQ,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACZsO,GAAaqB,WAAW,KAAD,EAA7CF,EAAa3P,EAAA8P,KAEbb,EAAQU,EAAcI,kBAE9BT,EAAYL,GACJW,EAAS,CACfhM,QAAQqL,EACRe,SAAuB,OAAbL,QAAa,IAAbA,GAAuB,QAAVJ,EAAbI,EAAeM,gBAAQ,IAAAV,GAAU,QAAVC,EAAvBD,EAAyB1L,gBAAQ,IAAA2L,OAApB,EAAbA,EAAmCU,MAC7CC,UAAwB,OAAbR,QAAa,IAAbA,GAAuB,QAAVF,EAAbE,EAAeM,gBAAQ,IAAAR,GAAU,QAAVC,EAAvBD,EAAyB5L,gBAAQ,IAAA6L,OAApB,EAAbA,EAAmCU,OAEhDpB,EAAgBY,GAAQ,wBAAA5P,EAAAM,OAAA,GAAAT,EAAA,KACzB,gBAZsBU,GAAA,OAAAd,EAAAe,MAAA,KAAAC,UAAA,KAuBvB,OATA/E,EAAAA,EAAAA,YAAU,YApDG,SAACT,EAAKoV,GACvB,IAAIC,EAASC,SAASC,cAAc,UACpCF,EAAO5V,KAAO,kBAEV4V,EAAOG,WACTH,EAAOI,mBAAqB,WACA,WAAtBJ,EAAOG,YAAiD,aAAtBH,EAAOG,aAC3CH,EAAOI,mBAAqB,KAC5BL,IAEJ,EAEAC,EAAOK,OAAS,kBAAMN,GAAW,EAGnCC,EAAO5N,IAAMzH,EACbsV,SAASK,qBAAqB,QAAQ,GAAGC,YAAYP,EACvD,CAoCQQ,CAAW,+CAADpX,OAzDgB,0CA0DgD,sBACtE,kBA/BmB,SAAC4V,EAAaH,IACrCX,GAAe,IAAID,OAAOwC,OAAOC,KAAKC,OAAOC,aAC3C/B,EAAgBxN,QAChB,CAEEwP,sBAAuB,CAAEtM,QAAS,UAIzBuM,YAAY,iBAAiB,WACxC/B,EAAkBC,EACpB,GACF,CAmBY+B,CAAiBnC,EAAUC,EAAgB,IAGrDtU,QAAQC,IAAI,eACd,GAAG,KAGDzC,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAAA,SACEiZ,IAAKnC,EACLvV,UAAU,0BACVhB,MAAO,CAAC2Y,OAAQ,gCAChBvT,SAAU,SAACwT,GACP3W,QAAQC,IAAI0W,EAAMtT,OAAOC,OACzB+Q,EAASsC,EAAMtT,OAAOC,MAC1B,EACAiI,YAAY,qBACZjI,MAAO8Q,KAIf,EC2mBJ,OAhrBA,SAAkB/K,GAChB,IAAAhN,GAAwCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/Cua,EAAYra,EAAA,GAAEuO,EAAevO,EAAA,GACpCyD,QAAQC,IAAI,gBAAiBoJ,EAAMvI,aAanC,IAAAnE,GAAwCL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA/CmQ,EAAYlQ,EAAA,GAAEmQ,EAAenQ,EAAA,GACpCoF,GAAkC1F,EAAAA,EAAAA,WAAS,GAAM2F,GAAAzF,EAAAA,EAAAA,GAAAwF,EAAA,GAA1C6U,EAAS5U,EAAA,GAAEiG,EAAYjG,EAAA,GAC9BE,GAAgC7F,EAAAA,EAAAA,UAAS,IAAG8F,GAAA5F,EAAAA,EAAAA,GAAA2F,EAAA,GAA3B2U,GAAF1U,EAAA,GAAaA,EAAA,IAC5BoC,GAAsClI,EAAAA,EAAAA,UAAS,IAAGmI,GAAAjI,EAAAA,EAAAA,GAAAgI,EAAA,GAA3CoP,EAAWnP,EAAA,GAAEoP,EAAcpP,EAAA,GAClC4H,GAA4C/P,EAAAA,EAAAA,UAAS,IAAGgQ,GAAA9P,EAAAA,EAAAA,GAAA6P,EAAA,GAAjD/D,EAAcgE,EAAA,GAAEyK,EAAiBzK,EAAA,GACxCG,GAAwCnQ,EAAAA,EAAAA,UAAS,IAAGoQ,GAAAlQ,EAAAA,EAAAA,GAAAiQ,EAAA,GAA7CuK,EAAYtK,EAAA,GAAEyH,EAAezH,EAAA,GACpCjB,EAAeC,EAAAA,EAAAA,UAARtD,GAAsB5L,EAAAA,EAAAA,GAAAiP,EAAA,GAAlB,GAELrK,IADUuH,EAAAA,EAAAA,OACDsO,EAAAA,EAAAA,MAAc7V,QACvBiK,EAAU,IAAI6L,gBAAgB9V,GAAQ+V,IAAI,WAC1Cpa,EAAMC,aAAaC,QAAQ,SAEjCma,GAAiCC,EAAAA,GAAAA,iBAAgB,CAC/CC,OAAQ,0CACRC,gBAAiB,SAACC,GAChBxX,QAAQC,IAAIuX,EACd,EACAC,wBAAyB,4CAmLrBC,GAxLKN,EAAHX,IAAoBW,EAAfO,gBAwLa,SAACvU,EAAE2F,GAC3B,IAEI1I,EAAO,CACT+I,cAAehB,EAAKwG,gBAAgB9L,KACpCmG,iBAAkBb,EAAKwG,gBAAgB7F,QACvCoM,SAAU/M,EAAKwG,gBAAgBuG,SAC/BG,UAAWlN,EAAKwG,gBAAgB0G,UAChCsC,OAAQ,KAGNC,EAAS,EACb3X,EAAAA,EAAAA,KAXU,gCAWMG,EAAM,CAAC,GAAGG,MAAK,SAACC,GAE9B,OADAT,QAAQC,IAAIQ,EAASJ,MACQ,GAAzBI,EAASJ,KAAKU,SAChB8W,EAASpX,EAASJ,KAAKvB,GACvBkE,EAAAA,GAAAA,QAAgB,wCAChBmR,GAAejT,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAG8V,GAAY,IAAEc,iBAAkBD,KA/FvC,SAACzU,EAAG2F,EAAS8O,GAC9B3X,EAAAA,EAAAA,KAEE,gCACA,CACE0I,eAAgBS,EAAMvI,YACtBgC,KAAMM,EAAEN,KACRiV,eAAgB3U,EAAE2U,eAClBjO,aAAc1G,EAAE0G,cAAgB,GAChCD,cAAezG,EAAEyG,eAAiB,GAClCmO,aAAc5U,EAAE4U,cAAgB,GAChCpO,YAAaxG,EAAEwG,aAAe,GAC9BG,YAAa3G,EAAE2G,aAAe,GAC9BC,QAAS5G,EAAE4G,SAAW,GACtBjB,QAASA,EACTjL,OAAQgP,EAAe,SAAS,WAChCgL,iBAAkBD,GAEpB,CACEvX,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD1B,OAAY9B,MAI9ByD,MAAK,SAACC,GACLT,QAAQC,IAAIQ,GACTA,EAASJ,KAAKU,SACfiC,EAAAA,GAAAA,QAAgB,+BAElBoF,EAAK8J,cACLhK,GAAa,GACb+P,GACF,IACCvV,OAAM,SAACC,GACN3C,QAAQC,IAAI0C,EACd,GACF,CA2DMuV,CAAW9U,EAAG2F,EAAS8O,IAChB,GACEpX,EAASJ,KAAK2C,SACvBA,EAAAA,GAAAA,MAAcvC,EAASJ,KAAK2C,UACrB,IAEPA,EAAAA,GAAAA,MAAc,0BACP,EAEX,GACF,GAEMmV,EAAsB,SAAC/U,EAAG2F,GAC9B,IAEI1I,EAAO,CACTvB,GAAIsJ,EAAKwG,gBAAgBkJ,kBAAoB,EAC7C1O,cAAehB,EAAKwG,gBAAgB9L,KACpCmG,iBAAkBb,EAAKwG,gBAAgB7F,QACvCoM,SAAU/M,EAAKwG,gBAAgBuG,SAC/BG,UAAWlN,EAAKwG,gBAAgB0G,UAChCsC,OAAQ,KAGV1X,EAAAA,EAAAA,KAXU,gCAWMG,EAAM,CAAC,GAAGG,MAAK,SAACC,GAC9B,OAA6B,GAAzBA,EAASJ,KAAKU,SAChBiC,EAAAA,GAAAA,QAAgB,0CAnFA,SAACI,EAAG2F,GACxB7I,EAAAA,EAAAA,KAEE,gCACA,CACE0I,eAAgBS,EAAMvI,YACtBgC,KAAMM,EAAEN,KACRiV,eAAgB3U,EAAE2U,eAClBjO,aAAc1G,EAAE0G,cAAgB,GAChCD,cAAezG,EAAEyG,eAAiB,GAClCmO,aAAc5U,EAAE4U,cAAgB,GAChCpO,YAAaxG,EAAEwG,aAAe,GAC9BG,YAAa3G,EAAE2G,aAAe,GAC9BC,QAAS5G,EAAE4G,SAAW,GACtBjB,QAASA,EACTjL,OAAQgP,EAAe,SAAS,WAChCgL,iBAAkB1U,EAAE0U,kBAEtB,CACExX,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD1B,OAAY9B,MAI9ByD,MAAK,SAACC,GACLT,QAAQC,IAAIQ,GACTA,EAASJ,KAAKU,SACfiC,EAAAA,GAAAA,QAAgB,+BAElBoF,EAAK8J,cACLhK,GAAa,GACb+P,GACF,IACCvV,OAAM,SAACC,GACN3C,QAAQC,IAAI0C,EACd,GACF,CA+CMyV,CAAchV,EAAG2F,IACV,GACEtI,EAASJ,KAAK2C,SACvBA,EAAAA,GAAAA,MAAcvC,EAASJ,KAAK2C,UACrB,IAEPA,EAAAA,GAAAA,MAAc,0BACP,EAEX,GACF,GAWAnC,EAAAA,EAAAA,YAAU,WACR,GAAIwK,EA2CF,OA1CArL,QAAQC,IAAI,yBACZC,EAAAA,EAAAA,KAEI,gCACA,CACEpB,GAAIuM,GAEN,CACE/K,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD1B,OAAY9B,MAI9ByD,MAAK,SAACC,GACL,IAAM2C,EAAI3C,EAASJ,KAAKA,KACxBL,QAAQC,IAAI,IAAKmD,GAajBpD,QAAQC,IAAImD,EAAE2F,SACd,IAAIsP,EAAQ/P,EAAe/C,MAAK,SAAC5E,GAAI,OAAKA,EAAKsI,mBAAqB7F,EAAE2F,OAAO,IAC7E/I,QAAQC,IAAIoY,GACZjQ,EAAKc,eAAe,CAClBpG,KAAMM,EAAEN,KACRiG,QAAS3F,EAAE2F,QACXI,WAAY/F,EAAE2F,UAEhBgE,EAA6B,WAAb3J,EAAEtF,OACpB,IACC4E,OAAM,SAACC,GACN3C,QAAQC,IAAI0C,EACd,IAGIiU,IACN5W,QAAQC,IAAI,4BACZC,EAAAA,EAAAA,KAEI,gCACA,CACEpB,GAAI8X,GAEN,CACEtW,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD1B,OAAY9B,MAI9ByD,MAAK,SAACC,GACL,IAAM2C,EAAI3C,EAASJ,KAAKA,KACxB+H,EAAKc,eAAe,CAClBpG,KAAMM,EAAEN,KACRiG,QAAS3F,EAAE2F,QACXI,WAAY/F,EAAE2F,UAEhBgE,EAA6B,WAAb3J,EAAEtF,OACpB,IACC4E,OAAM,SAACC,GACN3C,QAAQC,IAAI0C,EACd,IAGN,GAAG,CAACiU,IAgDJ,IAAMqB,EAAiB,SAACnE,GACtB9T,QAAQC,IAAIoJ,EAAMvI,cAClBZ,EAAAA,EAAAA,GAAM,CACFC,OAAQ,OACRC,IAAK,iCACLC,KAAM,CACFS,YAAauI,EAAMvI,YACnB+E,WAAYiO,EACZhO,UAAW,GACX1E,OAAS,QAEdZ,MAAK,SAACC,GACLT,QAAQC,IAAI,iBAAiBQ,EAASJ,KAAKA,KAAKA,MAC5CI,EAASJ,KAAKU,SAChB8S,EAAepT,EAASJ,KAAKA,KAAKA,KAMxC,IAAGqC,OAAM,SAAC9B,GACNZ,QAAQC,IAAIW,EAChB,GACF,EAqGA,OArBAC,EAAAA,EAAAA,YAAU,WACRb,QAAQC,IAAIoJ,EAAMvK,IA1DlBoB,EAAAA,EAAAA,KAEI,gCACA,CACEkB,OAAQ,IAEV,CACEd,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD1B,OAAY9B,MAI9ByD,MAAK,SAACC,GAEL,GAAIA,EAASJ,KAAKU,QAAS,CACzB,IAAIuX,EAAS7X,EAASJ,KAAKkY,gBAC3BxB,EAAkBuB,GAClBtY,QAAQC,IAAIqI,EACd,CACF,IACC5F,OAAM,SAACC,GACN3C,QAAQC,IAAI0C,EACd,IAIFzC,EAAAA,EAAAA,KAEI,uBACA,CACEkB,OAAQ,IAEV,CACEd,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD1B,OAAY9B,MAI9ByD,MAAK,SAACC,GACL,GAAIA,EAASJ,KAAKU,QAAS,CACzB,IAAIuX,EAAS7X,EAASJ,KAAKmY,YAC3BF,EAASA,EAAO5X,QAAO,SAAA4E,GAAI,OAAwB,MAApBA,EAAKmT,WAAmB,IACvD3B,EAAYwB,EACd,CACF,IACC5V,OAAM,SAACC,GACN3C,QAAQC,IAAI0C,EACd,GAaJ,GAAG,KAEH9B,EAAAA,EAAAA,YAAU,WACRb,QAAQC,IAAI+W,GACZ5O,EAAKc,eAAe,CAClBH,QAASiO,EAAajO,QACtBoM,SAAU6B,EAAa7B,SACvBG,UAAW0B,EAAa1B,WAE5B,GAAG,CAAC0B,KAQFvY,EAAAA,EAAAA,MAAA,OAAAhB,SAAA,EACI4N,IAAW7N,EAAAA,EAAAA,KAAA,OAAAC,UACXD,EAAAA,EAAAA,KAACgO,GAAY,CAAC1M,GAAIuK,EAAMvK,GAAI3C,WAAYkN,EAAMlN,WAAY2E,YAAauI,EAAMvI,YAAagK,gBAAiBA,EAAiB5C,aAAcA,EAAcE,KAAMA,EAAME,eAAgBA,EAAgBsL,YAAaA,EAAaC,eAAgBA,OAG9OxI,IAAW7N,EAAAA,EAAAA,KAAC6R,EAAAA,EAAI,CAACtQ,UAAU,OAAMtB,UAC/BgB,EAAAA,EAAAA,MAACkB,EAAAA,EAAM,CACLsT,OAAK,EACLpT,KAAK,SACLd,UAAU,6DACVK,QA3QY,WACpB8I,GAAa,EACf,EAyQiCzK,SAAA,EAEvBD,EAAAA,EAAAA,KAACwB,EAAAA,EAAI,CAACC,UAAWiU,EAAAA,MACjB1V,EAAAA,EAAAA,KAAC2V,GAAAA,EAAK,CAACC,MAAO,EAAGrU,UAAU,OAAOhB,MAAO,CAAEC,MAAO,WAAYP,UAC5DD,EAAAA,EAAAA,KAAA,KAAAC,SAAG,6BAKXD,EAAAA,EAAAA,KAAC+B,EAAAA,EAAK,CAACC,QAASqX,EACdpX,UAAQ,EACRmD,cAAY,EACZC,SAnRe,WACnBuF,EAAK8J,cACLhK,GAAa,EACf,EAiRMxI,OAAQ,KACR6J,MAAO,IACPpM,MAAOyZ,EAAe,eAAiB,kBAAkBnZ,UACvDgB,EAAAA,EAAAA,MAACiN,EAAAA,EAAI,CACHtD,KAAMA,EACNyG,SAAU,CACRC,KAAM,IAERC,WAAY,CACVD,KAAM,IAERE,OAAO,WACPC,SA7gBY,SAAC7L,GACrBpD,QAAQC,IAAImD,GACZ,IAAM2F,EAAU3F,EAAE2F,SAAO,GAAAlK,OAAOuE,EAAEyG,cAAa,gBAAAhL,OAAeuE,EAAE0G,aAAY,iBAAAjL,OAAgBuE,EAAE2G,YAAW,MAAAlL,OAAKuE,EAAE4G,SAEhH,GAAG4M,EAAc,CACf,IAAIkB,EAAmBK,IACvB,IAAIL,EAEF,YADA9U,EAAAA,GAAAA,MAAc,8BAGhB9C,EAAAA,EAAAA,KAEI,mCACA,CACEpB,IAAK8X,EACLhO,eAAgBS,EAAMvI,YACtBgC,KAAMM,EAAEN,KACRiV,eAAgB3U,EAAE2U,eAClBjO,aAAc1G,EAAE0G,cAAgB,GAChCD,cAAezG,EAAEyG,eAAiB,GAClCmO,aAAc5U,EAAE4U,cAAgB,GAChCpO,YAAaxG,EAAEwG,aAAe,GAC9BG,YAAa3G,EAAE2G,aAAe,GAC9BC,QAAS5G,EAAE4G,SAAW,GACtBjB,QAASA,EACTjL,OAAQgP,EAAe,SAAS,WAChCgL,iBAAkBA,GAEpB,CACExX,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD1B,OAAY9B,MAI9ByD,MAAK,SAACC,GACLT,QAAQC,IAAIQ,GACTA,EAASJ,KAAKU,SACfiC,EAAAA,GAAAA,QAAgB,+BAElBoF,EAAK8J,cACLhK,GAAa,GACb4C,EAAgB,MAChBmN,GACF,IACCvV,OAAM,SAACC,GACN3C,QAAQC,IAAI0C,GACZmI,EAAgB,KAClB,GAEJ,MACE4M,EAAkBtU,EAAG2F,EA2CzB,EA+akCtL,SAAA,EAExBgB,EAAAA,EAAAA,MAAC4Q,EAAAA,EAAI,CAACtQ,UAAU,OAAMtB,SAAA,EACpBD,EAAAA,EAAAA,KAAA,KAAGuB,UAAU,qCAAoCtB,SAAC,sBAqClDgB,EAAAA,EAAAA,MAAC6Q,EAAAA,EAAG,CAAA7R,SAAA,EACAD,EAAAA,EAAAA,KAACgS,EAAAA,EAAG,CAACV,KAAM,GAAGrR,UACVD,EAAAA,EAAAA,KAACkO,EAAAA,EAAAA,KAAS,CAAC5I,KAAK,OAAO6E,MAAM,eAAe2J,MAAO,CAAC,CAAEC,UAAU,EAAMvO,QAAS,+BAAgCvF,UAC3GD,EAAAA,EAAAA,KAACkE,EAAAA,EAAK,SAGdlE,EAAAA,EAAAA,KAACgS,EAAAA,EAAG,CAACV,KAAM,GAAGrR,UACVD,EAAAA,EAAAA,KAACkO,EAAAA,EAAAA,KAAS,CAAC5I,KAAK,iBAAiB6E,MAAM,aAAa2J,MAAO,CAAC,CAAEC,UAAU,EAAMvO,QAAS,iCAAkCvF,UACrHD,EAAAA,EAAAA,KAACkE,EAAAA,EAAK,CAAC7B,KAAK,mBAKxBrC,EAAAA,EAAAA,KAAA,MAAAC,SAAI,aAEJgB,EAAAA,EAAAA,MAAC6Q,EAAAA,EAAG,CAACC,MAAM,MAAK9R,SAAA,EACZD,EAAAA,EAAAA,KAACgS,EAAAA,EAAG,CAACV,KAAM,GAAGrR,UACVD,EAAAA,EAAAA,KAACkO,EAAAA,EAAAA,KAAS,CAAC5I,KAAK,UAAU6E,MAAM,mBAAmB2J,MAAO,CAAC,CAAEC,UAAU,EAAMvO,QAAS,mCAAoCvF,UAGxHD,EAAAA,EAAAA,KAACkb,GAAc,CAACvE,gBAAiBA,SAGvC1V,EAAAA,EAAAA,MAAC+Q,EAAAA,EAAG,CAACV,KAAM,GAAGrR,SAAA,EAkBVD,EAAAA,EAAAA,KAACkO,EAAAA,EAAAA,KAAS,CAAC5I,KAAK,WAAW6E,MAAM,WAAUlK,UACvCD,EAAAA,EAAAA,KAACkE,EAAAA,EAAK,CAACiX,UAAQ,OAEnBnb,EAAAA,EAAAA,KAACkO,EAAAA,EAAAA,KAAS,CAAC5I,KAAK,YAAY6E,MAAM,YAAWlK,UACzCD,EAAAA,EAAAA,KAACkE,EAAAA,EAAK,CAACiX,UAAQ,UAGvBnb,EAAAA,EAAAA,KAACgS,EAAAA,EAAG,CAACV,KAAM,SAaftR,EAAAA,EAAAA,KAAC8R,EAAAA,EAAG,CAACC,MAAM,SAAQ9R,UACjBD,EAAAA,EAAAA,KAACgS,EAAAA,EAAG,CAACV,KAAM,GAAGrR,UACZgB,EAAAA,EAAAA,MAACiN,EAAAA,EAAAA,KAAS,CAAC5I,KAAK,SAAS6E,MAAM,SAAS5J,MAAO,CAACgU,aAAc,SAAStU,SAAA,CACtEqP,EAAe,SAAS,YAAWtP,EAAAA,EAAAA,KAACwU,EAAAA,EAAM,CAACC,QAASnF,EAAc1N,QA/OxD,SAAC6S,GAC1B,IAAInU,EAASsK,EAAKwG,gBAAgB9Q,OAClCiP,EAAgBkF,GAChBjS,QAAQC,IAAInC,EACd,EA2OgHiB,UAAU,oBAMhHN,EAAAA,EAAAA,MAACiN,EAAAA,EAAAA,KAAS,CAAC3M,UAAS,gCAAkCtB,SAAA,EACpDD,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,CACLP,QAAS,kBAAM8I,GAAa,EAAM,EAClCnJ,UAAU,OAAMtB,SACjB,YAIDD,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,CAACE,KAAK,UAAUsS,SAAS,SAAQ1U,SAAC,mBAQvD,EC1qBMmb,GAAO,CACT,CACIzb,MAAO,gBACP6J,KAAM6R,EAAAA,GACNC,WAAYC,EAAAA,IAEhB,CACI5b,MAAO,mBACP6J,KAAMgS,EAAAA,GACNF,WAAYG,EAAAA,IAEhB,CACI9b,MAAO,sBACP6J,KAAMkS,EAAAA,GACNJ,WAAYK,EAAAA,IAEhB,CACIhc,MAAO,WACP6J,KAAM9H,EAAAA,GACN4Z,WAAYM,EAAAA,IAEhB,CACIjc,MAAO,WACP6J,KAAMqS,EAAAA,GACNP,WAAYQ,EAAAA,KAoSpB,OA/RA,SAA4Bpd,GAAcA,EAAZyF,aAAoI,IAAtHxF,EAAUD,EAAVC,WAAYkL,EAAanL,EAAbmL,cAAekS,EAAUrd,EAAVqd,WAAYC,EAAatd,EAAbsd,cAAeC,EAAgBvd,EAAhBud,iBAA+CC,GAAlBxd,EAAXyd,YAA2Bzd,EAAd0d,eAA6B1d,EAAbwd,eACvIvN,GAAQC,EAAAA,EAAAA,MAgERyN,EAAkB,YACpB3Z,EAAAA,EAAAA,GAAM,CACFC,OAAQ,OACRC,IAAK,iCAILC,KAAM,CACFS,aAAcqL,EAAMrN,GACpB+G,WAAY,EACZC,UAAW,IACX1E,OAAS,QAEdZ,MAAK,SAACC,GACDA,EAASJ,KAAKU,SACd2Y,EAAcjZ,EAASJ,KAAKA,KAAKA,MAErCL,QAAQC,IAAI,gCACZD,QAAQC,IAAIQ,EAASJ,KAAKA,KAAKA,KACnC,IAAGqC,OAAM,SAAC9B,GACNZ,QAAQC,IAAIW,EAChB,GACJ,EAEMkZ,EAAoB,YACtB5Z,EAAAA,EAAAA,GAAM,CACFC,OAAQ,OACRC,IAAK,6BAILC,KAAM,CACFS,aAAcqL,EAAMrN,GACpB+G,WAAY,EACZC,UAAW,IACX1E,OAAS,QAEdZ,MAAK,SAACC,GACL,GAAIA,EAASJ,KAAKU,QAAS,CACvB,IAEIgF,EAFMtF,EAASJ,KAAKA,KAAKA,KAEbW,KAAI,SAACL,EAAMM,GACvB,MAAO,CACHsG,MAAOtG,EAAI,EACXmF,IAAKnF,EACLsR,OAAQ5R,EAAK7B,GACbgP,SAAUnN,EAAKmC,KAOfsH,IAAK,CAAEC,MAAO1J,EAAK6N,YAAa1L,KAAMnC,EAAKmC,MAC3CiQ,aAAcpS,EAAK2F,MACnBC,QAAS5F,EAAK6F,MACdkD,QAAS/I,EAAK4N,UACdzQ,OAAQ6C,EAAK7C,OAErB,IACA4b,EAAc3T,EAClB,CACJ,IAAGrD,OAAM,SAAC9B,GACNZ,QAAQC,IAAIW,EAChB,GAEJ,EAEMmZ,EAAkB,YACpB7Z,EAAAA,EAAAA,GAAM,CACFC,OAAQ,OACRC,IAAK,iCAILC,KAAM,CACFS,aAAcqL,EAAMrN,GACpB+G,WAAY,EACZC,UAAW,IACX1E,OAAS,QAEdZ,MAAK,SAACC,GACDA,EAASJ,KAAKU,SACd2Y,EAAcjZ,EAASJ,KAAKA,KAAKA,KAEzC,IAAGqC,OAAM,SAAC9B,GACNZ,QAAQC,IAAIW,EAChB,GAEJ,EAEMY,EAAkB,YACpBtB,EAAAA,EAAAA,GAAM,CACFC,OAAQ,OACRC,IAAK,iCAILC,KAAM,CACFS,aAAcqL,EAAMrN,GACpB+G,WAAY,EACZC,UAAW,IACX1E,OAAS,QAEdZ,MAAK,SAACC,GACDA,EAASJ,KAAKU,SACd2Y,EAAcjZ,EAASJ,KAAKA,KAAKA,KAEzC,IAAGqC,OAAM,SAAC9B,GACNZ,QAAQC,IAAIW,EAChB,GAEJ,EAoBMoZ,EAAU,EACZxc,EAAAA,EAAAA,KAACyc,GAAoB,KACrBzc,EAAAA,EAAAA,KAAC6K,GAAQ,CAAClM,WAAYA,EAAY2E,aAAcqL,EAAMrN,MACtDtB,EAAAA,EAAAA,KAAC0c,GAAa,CAAC/d,WAAYA,EAAYC,QAAS+P,EAAMrN,MACtDtB,EAAAA,EAAAA,KAAC2c,EAAAA,EAAY,CAAChe,WAAYA,EAAYC,QAAS+P,EAAMrN,MACrDtB,EAAAA,EAAAA,KAAC4c,EAAAA,EAAQ,CAACje,WAAYA,EAAYC,QAAS+P,EAAMrN,MAG/Cub,GAAe7c,EAAAA,EAAAA,KAAA,OAAKuB,UAAU,WAKpC,OACIN,EAAAA,EAAAA,MAAC6b,EAAAA,EAAI,CACDC,UAAWf,EACXtW,KAAK,QACLC,SAhNiB,SAACiD,GACtBqT,EAAiBrT,GAEjBiB,EAAc,IACH,IAAPjB,IACAmT,EAAW,CAEP,CAAE5R,MAAO,KAAMvB,IAAK,MACpB,CAAEuB,MAAO,eAAgBvB,IAAK,QAC9B,CAAEuB,MAAO,kBAAmBvB,IAAK,WACjC,CAAEuB,MAAO,UAAWvB,IAAK,iBACzB,CAAEuB,MAAO,iBAAkBvB,IAAK,gBAChC,CAAEuB,MAAO,QAASvB,IAAK,eACvB,CAAEuB,MAAO,SAAUvB,IAAK,YAE5ByT,KAEO,IAAPzT,IACAmT,EAAW,CACP,CAAE5R,MAAO,SAAUvB,IAAK,SACxB,CAAEuB,MAAO,KAAMvB,IAAK,UACpB,CAAEuB,MAAO,iBAAkBvB,IAAK,YAChC,CAAEuB,MAAO,UAAWvB,IAAK,WACzB,CAAEuB,MAAO,iBAAkBvB,IAAK,gBAChC,CAAEuB,MAAO,iBAAkBvB,IAAK,kBAChC,CAAEuB,MAAO,SAAUvB,IAAK,YAE5B0T,KAEO,IAAP1T,IACAmT,EAAW,CAEP,CAAE5R,MAAO,KAAMvB,IAAK,MACpB,CAAEuB,MAAO,cAAevB,IAAK,kBAC7B,CAAEuB,MAAO,eAAgBvB,IAAK,gBAC9B,CAAEuB,MAAO,cAAevB,IAAK,eAC7B,CAAEuB,MAAO,kBAAmBvB,IAAK,SACjC,CAAEuB,MAAO,mBAAoBvB,IAAK,eAClC,CAAEuB,MAAO,eAAgBvB,IAAK,cAC9B,CAAEuB,MAAO,SAAUvB,IAAK,YAE5B2T,KAEO,IAAP3T,IACAmT,EAAW,CAEP,CAAE5R,MAAO,KAAMvB,IAAK,MACpB,CAAEuB,MAAO,cAAevB,IAAK,kBAC7B,CAAEuB,MAAO,eAAgBvB,IAAK,gBAC9B,CAAEuB,MAAO,cAAevB,IAAK,eAC7B,CAAEuB,MAAO,kBAAmBvB,IAAK,SACjC,CAAEuB,MAAO,mBAAoBvB,IAAK,eAClC,CAAEuB,MAAO,eAAgBvB,IAAK,cAC9B,CAAEuB,MAAO,SAAUvB,IAAK,YAE5B5E,IAER,EAwJQgZ,mBAAqBH,EAAa5c,SAAA,EAElCD,EAAAA,EAAAA,KAAC8c,EAAAA,EAAAA,QAAY,CACTG,KACIhc,EAAAA,EAAAA,MAAA,QAAMM,UAAU,wCAAuCtB,SAAA,EACnDD,EAAAA,EAAAA,KAACwB,EAAAA,EAAI,CACDC,UAA6B,MAAlBua,EAAwBZ,GAAK,GAAGE,WAAaF,GAAK,GAAG5R,OAEnE4R,GAAK,GAAGzb,SAEhBM,SAGAuc,EAAQ,IAFL,MAIRxc,EAAAA,EAAAA,KAAC8c,EAAAA,EAAAA,QAAY,CACTG,KACIhc,EAAAA,EAAAA,MAAA,QAAMM,UAAU,wCAAuCtB,SAAA,EACnDD,EAAAA,EAAAA,KAACwB,EAAAA,EAAI,CACDC,UAA6B,MAAlBua,EAAwBZ,GAAK,GAAGE,WAAaF,GAAK,GAAG5R,OAEnE4R,GAAK,GAAGzb,SAEhBM,SAGAuc,EAAQ,IAFL,MAIRxc,EAAAA,EAAAA,KAAC8c,EAAAA,EAAAA,QAAY,CACTG,KACIhc,EAAAA,EAAAA,MAAA,QAAMM,UAAU,wCAAuCtB,SAAA,EACnDD,EAAAA,EAAAA,KAACwB,EAAAA,EAAI,CACDC,UAA6B,MAAlBua,EAAwBZ,GAAK,GAAGE,WAAaF,GAAK,GAAG5R,OAEnE4R,GAAK,GAAGzb,SAEhBM,SAGAuc,EAAQ,IAFL,MAIRxc,EAAAA,EAAAA,KAAC8c,EAAAA,EAAAA,QAAY,CACTG,KACIhc,EAAAA,EAAAA,MAAA,QAAMM,UAAU,wCAAuCtB,SAAA,EACnDD,EAAAA,EAAAA,KAACwB,EAAAA,EAAI,CACDC,UAA6B,MAAlBua,EAAwBZ,GAAK,GAAGE,WAAaF,GAAK,GAAG5R,OAEnE4R,GAAK,GAAGzb,SAEhBM,SAGAuc,EAAQ,IAFL,MAIRxc,EAAAA,EAAAA,KAAC8c,EAAAA,EAAAA,QAAY,CACTG,KACIhc,EAAAA,EAAAA,MAAA,QAAMM,UAAU,wCAAuCtB,SAAA,EACnDD,EAAAA,EAAAA,KAACwB,EAAAA,EAAI,CACDC,UAA6B,MAAlBua,EAAwBZ,GAAK,GAAGE,WAAaF,GAAK,GAAG5R,OAEnE4R,GAAK,GAAGzb,SAEhBM,SAGAuc,EAAQ,IAFL,OAOpB,ECpOA,OAvFA,WACI,IAAM7N,GAAQC,EAAAA,EAAAA,MACR1D,GAAUC,EAAAA,EAAAA,MAChBtM,GAA0CC,EAAAA,EAAAA,UAAS,KAAIC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhDmd,EAAajd,EAAA,GAAEkd,EAAgBld,EAAA,GACtCI,GAAwCL,EAAAA,EAAAA,UAAS,CAAC,GAAEM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA7CgF,EAAY/E,EAAA,GAAE+P,EAAe/P,EAAA,GACpCoF,GAAoC1F,EAAAA,EAAAA,UAAS,IAAG2F,GAAAzF,EAAAA,EAAAA,GAAAwF,EAAA,GAAzC7F,EAAU8F,EAAA,GAAEoF,EAAapF,EAAA,GAChCE,GAAoC7F,EAAAA,EAAAA,UAAS,IAAG8F,GAAA5F,EAAAA,EAAAA,GAAA2F,EAAA,GAAzCuY,EAAUtY,EAAA,GAAEsX,EAAatX,EAAA,GAChCoC,GAA8BlI,EAAAA,EAAAA,UAAS,IAAGmI,GAAAjI,EAAAA,EAAAA,GAAAgI,EAAA,GAAnClE,EAAOmE,EAAA,GAAE8U,EAAU9U,EAAA,GAC1B4H,GAAsC/P,EAAAA,EAAAA,WAAS,GAAMgQ,GAAA9P,EAAAA,EAAAA,GAAA6P,EAAA,GAA9CsN,EAAWrN,EAAA,GAAEsN,EAActN,EAAA,GAiClC,OALAzL,EAAAA,EAAAA,YAAU,YAvBNX,EAAAA,EAAAA,GAAM,CACFC,OAAQ,OACRC,IAAK,uBACLC,KAAM,CACFvB,GAAGqN,EAAMrN,MAEd0B,MAAK,SAACC,GACLT,QAAQC,IAAIQ,EAASJ,MACjBI,EAASJ,KAAKU,QACd4L,EAAgBlM,EAASJ,KAAKA,MAE9BL,QAAQC,IAAIQ,EAEpB,GAYJ,GAAG,KAIChC,EAAAA,EAAAA,MAAA,OAAAhB,SAAA,EACIgB,EAAAA,EAAAA,MAAA,OAAKM,UAAU,iCAAgCtB,SAAA,EAC3CD,EAAAA,EAAAA,KAACgK,EAAAA,EACG,CACArK,MAAM,qBAEU,KAAlBqc,IAAuBhc,EAAAA,EAAAA,KAAA,OAAKuB,UAAU,sCAAqCtB,UACzED,EAAAA,EAAAA,KAAA,OAAKuB,UAAU,0DACfK,QAAS,WACLsJ,EAAQG,KAAK,mDAADhK,OAAoDsN,EAAMrN,IAC1E,EAAErB,UACMD,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,CAACE,KAAK,UAAUd,UAAU,sCAAqCtB,SAAE,sBAKhE,KAAlB+b,IAAuBhc,EAAAA,EAAAA,KAAA,OAAKuB,UAAU,sCAAqCtB,UACzEgB,EAAAA,EAAAA,MAAA,OAAKM,UAAU,0DAAyDtB,SAAA,EACpED,EAAAA,EAAAA,KAACiK,EAAAA,EAAS,CAACJ,cAAeA,KAE1B7J,EAAAA,EAAAA,KAACkK,EAAAA,QAAO,CAACrH,KAAMqa,EACfpa,QAASA,EACTsH,SAAQ,GAAA/I,OAlCJ,KAAjB2a,EAA6B,eACZ,KAAjBA,EAA6B,0BACZ,KAAjBA,EAA6B,eACZ,KAAjBA,EAA6B,oBAAhC,EA+B0C,QAAO/b,UAE7BgB,EAAAA,EAAAA,MAACkB,EAAAA,EAAM,CAACZ,UAAU,sCAAqCtB,SAAA,EACnDD,EAAAA,EAAAA,KAAA,OAAKuB,UAAU,OAAO8I,IAAKC,EAAAA,EAAYC,IAAI,eAAmB,uBAMlFvK,EAAAA,EAAAA,KAAA,OAAKuB,UAAU,SAAQtB,UACnBD,EAAAA,EAAAA,KAAC8R,EAAAA,EAAG,CAACqL,OAAQ,GAAGld,UACZD,EAAAA,EAAAA,KAACgS,EAAAA,EAAG,CAACV,KAAM,GAAGrR,UACVD,EAAAA,EAAAA,KAACod,GAAmB,CAACjZ,aAAcA,EAAcxF,WAAYA,EAAYkL,cAAeA,EAAekS,WAAYA,EAAYC,cAAeA,EAAeC,iBAAkBA,EAC/KG,eAAgBA,EAChBD,YAAaA,EACbD,cAAeA,YAMvC,E,2DCsDA,OA5IA,WAEI,IAAMhR,GAAUC,EAAAA,EAAAA,MAGhBtM,GAAoDC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5DqI,EAAkBnI,EAAA,GAAEoI,EAAqBpI,EAAA,GAU1C8M,EAAQ,CACVvG,KAAM,OACN+X,UAAU,EACVjQ,OAAQ,uBACR8E,SAAU,UACVvM,SAAQ,SAAC2X,GACL,IAAQhd,EAAWgd,EAAKC,KAAhBjd,OACO,cAAXA,GACAkC,QAAQC,IAAI6a,EAAKC,KAAMD,EAAK/O,UAEjB,SAAXjO,EACAkF,EAAAA,GAAAA,QAAgB,GAADnE,OAAIic,EAAKC,KAAKjY,KAAI,iCACf,UAAXhF,GACPkF,EAAAA,GAAAA,MAAc,GAADnE,OAAIic,EAAKC,KAAKjY,KAAI,wBAEvC,GAGJ,OACIrE,EAAAA,EAAAA,MAAA,OAAAhB,SAAA,EACID,EAAAA,EAAAA,KAACgK,EAAAA,EAAW,CACRR,KAAMkS,EAAAA,EACN/b,MAAM,qFAEVsB,EAAAA,EAAAA,MAACiN,EAAAA,EACG,CACAmD,SAAU,CACNC,KAAM,IAEVC,WAAY,CACRD,KAAM,IAEVE,OAAO,WAEPC,SA1CU,SAAC7L,GACnBuB,GAAsB,GACtBa,YAAW,WACPb,GAAsB,GACtB+D,EAAQG,KAAK,mBACjB,GAAG,IACP,EAoCoCpL,SAAA,EAGxBgB,EAAAA,EAAAA,MAAC6Q,EAAAA,EAAG,CAAA7R,SAAA,EACAD,EAAAA,EAAAA,KAACgS,EAAAA,EAAG,CAACzQ,UAAU,OAAO+P,KAAM,GAAGrR,UAC3BgB,EAAAA,EAAAA,MAAC4Q,EAAAA,EAAI,CAACtQ,UAAU,OAAMtB,SAAA,EAClBgB,EAAAA,EAAAA,MAAA,KAAGV,MAAO,CAAEC,MAAO,WAAae,UAAU,+DAA8DtB,SAAA,CAAC,KAACD,EAAAA,EAAAA,KAACwB,EAAAA,EAAI,CAACD,UAAU,OAAOE,UAAWqa,EAAAA,KAAsB,wBAClK7a,EAAAA,EAAAA,MAAC6Q,EAAAA,EAAG,CAACC,MAAM,SAAQ9R,SAAA,EACfgB,EAAAA,EAAAA,MAAC+Q,EAAAA,EAAG,CAACV,KAAM,GAAGrR,SAAA,EACVD,EAAAA,EAAAA,KAACkO,EAAAA,EAAAA,KAAS,CAAC5I,KAAK,aAAa6E,MAAM,aAAYlK,UAC3CD,EAAAA,EAAAA,KAACkE,EAAAA,EAAK,OAEVlE,EAAAA,EAAAA,KAACkO,EAAAA,EAAAA,KAAS,CAAC5I,KAAK,YAAY6E,MAAM,WAAUlK,UACxCD,EAAAA,EAAAA,KAACkE,EAAAA,EAAK,OAEVlE,EAAAA,EAAAA,KAACkO,EAAAA,EAAAA,KAAS,CAAC5I,KAAK,iBAAiB6E,MAAM,mBAAkBlK,UACrDgB,EAAAA,EAAAA,MAAC6M,EAAAA,EAAM,CAAA7N,SAAA,EACHD,EAAAA,EAAAA,KAAC8N,EAAAA,EAAAA,OAAa,CAAChI,MAAM,QAAO7F,SAAE,WAC9BD,EAAAA,EAAAA,KAAC8N,EAAAA,EAAAA,OAAa,CAAChI,MAAM,QAAO7F,SAAE,WAC9BD,EAAAA,EAAAA,KAAC8N,EAAAA,EAAAA,OAAa,CAAChI,MAAM,YAAW7F,SAAE,oBAG1CD,EAAAA,EAAAA,KAACkO,EAAAA,EAAAA,KAAS,CAAC5I,KAAK,uBAAuB6E,MAAM,wBAAuBlK,UAChED,EAAAA,EAAAA,KAACkE,EAAAA,EAAK,OAEVlE,EAAAA,EAAAA,KAACkO,EAAAA,EAAAA,KAAS,CAAC5I,KAAK,UAAU6E,MAAM,SAAQlK,UACpCD,EAAAA,EAAAA,KAACkE,EAAAA,EAAK,OAEVlE,EAAAA,EAAAA,KAACkO,EAAAA,EAAAA,KAAS,CAAC5I,KAAK,WAAW6E,MAAM,UAASlK,UACtCD,EAAAA,EAAAA,KAACkE,EAAAA,EAAK,UAGdjD,EAAAA,EAAAA,MAAC+Q,EAAAA,EAAG,CAACV,KAAM,GAAGrR,SAAA,EACVD,EAAAA,EAAAA,KAACkO,EAAAA,EAAAA,KAAS,CAAC5I,KAAK,kBAAkB6E,MAAM,qBAAoBlK,UACxDgB,EAAAA,EAAAA,MAAC6M,EAAAA,EAAM,CAAA7N,SAAA,EACHD,EAAAA,EAAAA,KAAC8N,EAAAA,EAAAA,OAAa,CAAChI,MAAM,QAAO7F,SAAE,WAC9BD,EAAAA,EAAAA,KAAC8N,EAAAA,EAAAA,OAAa,CAAChI,MAAM,QAAO7F,SAAE,WAC9BD,EAAAA,EAAAA,KAAC8N,EAAAA,EAAAA,OAAa,CAAChI,MAAM,YAAW7F,SAAE,oBAG1CD,EAAAA,EAAAA,KAACkO,EAAAA,EAAAA,KAAS,CAAC5I,KAAK,iBAAiB6E,MAAM,iBAAgBlK,UACnDD,EAAAA,EAAAA,KAACwd,GAAAA,EAAAA,YAAsB,CACnBzX,aAAc,CAAC0X,KAAM,aAAc,cAAeA,KAAM,aAAc,eACtEpd,OAAO,kBAGfL,EAAAA,EAAAA,KAACkO,EAAAA,EAAAA,KAAS,CAAC5I,KAAK,YAAY6E,MAAM,WAAUlK,UACxCD,EAAAA,EAAAA,KAACkE,EAAAA,EAAK,OAEVlE,EAAAA,EAAAA,KAACkO,EAAAA,EAAAA,KAAS,CAAC5I,KAAK,YAAY6E,MAAM,YAAWlK,UACzCD,EAAAA,EAAAA,KAACkE,EAAAA,EAAK,aAIlBlE,EAAAA,EAAAA,KAACkO,EAAAA,EAAAA,KAAS,CAAC5I,KAAK,WAAW6E,MAAM,UAASlK,UACtCD,EAAAA,EAAAA,KAACkE,EAAAA,EAAAA,SAAc,CAAC8B,KAAM,YAIlChG,EAAAA,EAAAA,KAACgS,EAAAA,EAAG,CAACV,KAAM,EAAErR,UACTD,EAAAA,EAAAA,KAAC6R,EAAAA,EAAI,CAACtQ,UAAU,OAAMtB,UAClBgB,EAAAA,EAAAA,MAACyc,GAAAA,SAAOha,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKmI,GAAK,IAAA5L,SAAA,EACdD,EAAAA,EAAAA,KAAA,KAAGuB,UAAU,uBAAsBtB,UAC/BD,EAAAA,EAAAA,KAAC2d,GAAAA,EAAa,OAElB3d,EAAAA,EAAAA,KAAA,KAAGuB,UAAU,eAActB,SAAC,4BAC5BD,EAAAA,EAAAA,KAAA,KAAGuB,UAAU,eAActB,SAAE,QAC7BD,EAAAA,EAAAA,KAAA,KAAGuB,UAAU,8BAA6BtB,SAAC,6BAM3DgB,EAAAA,EAAAA,MAACiN,EAAAA,EAAAA,KAAS,CAAC3M,UAAS,gCAAkCtB,SAAA,EAClDD,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,CAAAlC,SAAC,UACRD,EAAAA,EAAAA,KAACmC,EAAAA,EACG,CACAZ,UAAU,OAAMtB,SACnB,eAEDD,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,CAACE,KAAK,UAAUsS,SAAS,SAAQ1U,SAAC,aAE7CD,EAAAA,EAAAA,KAAC+B,EAAAA,EAAK,CAACE,UAAQ,EAACD,QAASkF,EAAoBhF,OAAQ,CAAC,MAAOmD,SAAU,WAAQ8B,GAAsB,EAAO,EAAElH,UAC1GD,EAAAA,EAAAA,KAACuJ,EAAAA,EAAa,CAACC,KAAMC,EAAAA,GAAc9J,MAAM,+BAA+B+J,KAAK,iDAMjG,E,UCzHQzF,IADWJ,EAAAA,EAAAA,OACEK,EAAAA,EAAAA,UACb0Z,GAAgBJ,GAAAA,EAAAA,YAoiBxB,OAniBA,WACE,IAAM7O,GAAQC,EAAAA,EAAAA,MAEd/P,IADgBsM,EAAAA,EAAAA,OACQrM,EAAAA,EAAAA,UAAS,KAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BgE,EAAI9D,EAAA,GAAE8e,EAAO9e,EAAA,GACpBI,GAAkCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAvC2e,EAAS1e,EAAA,GAAE2e,EAAY3e,EAAA,GAC9BoF,GAAuB1F,EAAAA,EAAAA,UAAS,IAAG2F,GAAAzF,EAAAA,EAAAA,GAAAwF,EAAA,GAA5BwZ,EAAIvZ,EAAA,GAACwZ,EAAOxZ,EAAA,GACnBE,GAAwC7F,EAAAA,EAAAA,UAAS,GAAE8F,GAAA5F,EAAAA,EAAAA,GAAA2F,EAAA,GAA5CuZ,EAAYtZ,EAAA,GAAEuZ,EAAevZ,EAAA,GACpCoC,GAAoDlI,EAAAA,EAAAA,WAAS,GAAMmI,GAAAjI,EAAAA,EAAAA,GAAAgI,EAAA,GAA5DE,EAAkBD,EAAA,GAAEE,EAAqBF,EAAA,GAChD4H,GAAgC/P,EAAAA,EAAAA,UAAS,IAAGgQ,GAAA9P,EAAAA,EAAAA,GAAA6P,EAAA,GAArCuP,EAAQtP,EAAA,GAAEN,EAAWM,EAAA,GAC5BG,GAAwCnQ,EAAAA,EAAAA,UAAS,IAAGoQ,GAAAlQ,EAAAA,EAAAA,GAAAiQ,EAAA,GACpDG,GADmBF,EAAA,GAAiBA,EAAA,IACIpQ,EAAAA,EAAAA,UAAS,KAAGuQ,GAAArQ,EAAAA,EAAAA,GAAAoQ,EAAA,GACpDnB,GADmBoB,EAAA,GAAiBA,EAAA,GACrBnB,EAAAA,EAAAA,WAARtD,GAAsB5L,EAAAA,EAAAA,GAAAiP,EAAA,GAAlB,GACXuB,GAAsC1Q,EAAAA,EAAAA,WAAS,GAAM2Q,IAAAzQ,EAAAA,EAAAA,GAAAwQ,EAAA,GAE/CjQ,IAFYkQ,GAAA,GAAgBA,GAAA,GAEtBjQ,aAAaC,QAAQ,UACjC+C,QAAQC,IAAIkM,EAAMrN,GAAI,OAwBtB+B,EAAAA,EAAAA,YAAU,WACRX,EAAAA,EAAAA,KAEI,iCACA,CACE2F,WAAY,EACZC,UAAW,IACXrC,SAAU,CAAC,SAAU,aAIvB,CACEnD,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD1B,OAAY9B,OAI9ByD,MAAK,SAACC,GACL,IAAIgC,EAAMhC,EAASJ,KAAKA,KAAKA,KAC7BL,QAAQC,IAAIwC,GAEZ,IAAIsD,EAAQtD,EAAIzB,KAAI,SAACL,EAAMM,GACzB,MAAO,CACLnC,GAAI6B,EAAK7B,GACT4K,QAAS/I,EAAKmC,KACd6G,eAAgBhJ,EAAKoI,QAAUpI,EAAKoI,QAAO,GAAAlK,OAAM8B,EAAKkJ,cAAa,gBAAAhL,OAAe8B,EAAKmJ,aAAY,iBAAAjL,OAAgB8B,EAAKoJ,YAAW,MAAAlL,OAAK8B,EAAKqJ,SAC7IjH,QAASpC,EAAKsJ,cACd5D,YAAiB,OAAJ1F,QAAI,IAAJA,OAAI,EAAJA,EAAM2F,MACnBC,QAAa,OAAJ5F,QAAI,IAAJA,OAAI,EAAJA,EAAM6F,MACf0D,WAAe,OAAJvJ,QAAI,IAAJA,OAAI,EAAJA,EAAMwJ,uBAAwB,EACzCC,IAAK,CAAEC,MAAW,OAAJ1J,QAAI,IAAJA,OAAI,EAAJA,EAAMyJ,IAAKtH,KAAMnC,EAAKmC,MACpCwH,YAAa3J,EAAK2J,YAClBC,MAAO5J,EAAK4J,MACZC,QAAS7J,EAAK6J,QACdC,eAAgB9J,EAAK8J,eACrBC,YAAa/J,EAAK+J,YAClBC,aAAchK,EAAKgK,aACnB7M,OAAQ6C,EAAK7C,OACb8M,OAAQ,GAEZ,IACA6Q,EAAQ1V,EACV,IACCrD,OAAM,SAACC,GACN3C,QAAQC,IAAI0C,EACd,GACJ,GAAG,IACH,IAKMkZ,GAAmB,eAAA3f,GAAA2I,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAM+V,GAAI,IAAAlL,EAAApN,EAAA,OAAAqC,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGY,OAF1CwK,EAAW,IAAIC,SAAU3K,EAAAC,KAAA,EAE7ByK,EAASG,OAAO,OAAO+K,EAAK,GAAG9K,eAAe9K,EAAAE,KAAA,GAC5BnF,EAAAA,EAAAA,GAAM,CACtBC,OAAQ,OACRC,IAAK,0BACLC,KAAMwP,EACNvP,QAAS,CACP,eAAe,sBACfC,cAAc,UAAD1B,OAAY9B,OAE3B,OARO,KAAH0F,EAAG0C,EAAA8P,MAUD5U,KAAKU,QAAQ,CAADoE,EAAAE,KAAA,QACQ,OAA1BrF,QAAQC,IAAIwC,EAAIpC,KAAKD,KAAK+E,EAAA2W,OAAA,SACnBrZ,EAAIpC,KAAKD,KAAG,OAAA+E,EAAAE,KAAA,iBAKF,OALEF,EAAAC,KAAA,GAAAD,EAAA4W,GAAA5W,EAAA,SAKrBnF,QAAQC,IAAGkF,EAAA4W,IAAQ5W,EAAA2W,OAAA,SACZ,MAAI,QACX,yBAAA3W,EAAAM,OAAA,GAAAT,EAAA,mBAEH,gBAzBwBU,GAAA,OAAAxJ,EAAAyJ,MAAA,KAAAC,UAAA,KA2BnBoW,GAAa,eAAApX,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAkX,EAAM7Y,GAAC,IAAAiH,EAAA6R,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAxW,EAAA,OAAAjB,EAAAA,EAAAA,KAAAI,MAAA,SAAAsX,GAAA,cAAAA,EAAApX,KAAAoX,EAAAnX,MAAA,cAAAmX,EAAAnX,KAAA,EACTwW,GAAoBD,GAAS,OAA3CvR,EAAKmS,EAAAvH,KACHiH,EAAqB,IAAfR,EACNS,EAAQT,EAA8B,IAAfA,EACvBU,EAAYze,IAAOyF,EAAEqZ,WAAW,IAAI5e,OAAO,cAC3Cwe,EAAU1e,IAAOyF,EAAEqZ,WAAW,IAAI5e,OAAO,cAC/CmC,QAAQC,IAAI,QAAQmD,GAKdkZ,EAAU3e,IAAOyF,EAAEsZ,MAAM7e,OAAO,cAChC0e,EAAa5e,IAAOyF,EAAEuZ,SAAS9e,OAAO,cAC5BwC,EAAKW,KAAI,SAACL,GACxB,MAAO,CACLyF,IAAKzF,EAAKyF,IACVtD,KAAMnC,EAAKmC,KACX8Z,SAAUjc,EAAKic,SACfC,MAAOlc,EAAKkc,MACZV,MAAOxb,EAAKic,SAAWjc,EAAKkc,MAEhC,IACM9W,EAAQ,CACZ6C,eAAgBuD,EAAMrN,GACtBge,sBAAuBV,EACvBW,oBAAqBV,EACrBK,KAAMJ,EACNU,SAAUT,EACVU,UAAWvB,EACX5d,OAAO,UACPoe,IAAKA,EAAIpL,WACToM,SAAU9Z,EAAE8Z,SACZf,MAAOA,EAAMrL,WACbqM,gBAAiB9S,EACjB+S,gBAAiBha,EAAEia,QAAQvM,WAC3BwM,WAAY,KAiCdpd,EAAAA,EAAAA,GAAM,CACJC,OAAQ,OACRC,IAAK,sBACLC,KAAM0F,EACNzF,QAAS,CAEPC,cAAc,UAAD1B,OAAY9B,OAE1ByD,MAAK,SAACC,GACPT,QAAQC,IAAIQ,EAASJ,MACjBI,EAASJ,KAAKU,SAChBf,QAAQC,IAAIQ,EAASJ,KAAKA,MAC1BsE,GAAsB,IAEtB3E,QAAQC,IAAIQ,EAEhB,IAAGiC,OAAM,SAAC9B,GACRoC,EAAAA,GAAAA,KAAapC,EAAIH,SAASJ,KAAK2C,SAC/BhD,QAAQC,IAAIW,EAAIH,SAClB,IAAE,yBAAA+b,EAAA/W,OAAA,GAAAwW,EAAA,KACH,gBAxFkBsB,GAAA,OAAA3Y,EAAAe,MAAA,KAAAC,UAAA,KA8Fb4X,GAAY,SAACzC,GAAI,OACvB,IAAIpJ,SAAQ,SAACC,EAASC,GACpB,IAAM4L,EAAS,IAAIC,WACnBD,EAAOE,cAAc5C,GACrB0C,EAAO3H,OAAS,kBAAMlE,EAAQ6L,EAAOnF,OAAQ,EAC7CmF,EAAOG,QAAU,SAACjb,GAAK,OAAKkP,EAAOlP,EAAO,CAC5C,GAAG,EAEGkb,GAAa,eAAAC,GAAAjZ,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAgZ,EAAOhD,GAAI,OAAAjW,EAAAA,EAAAA,KAAAI,MAAA,SAAA8Y,GAAA,cAAAA,EAAA5Y,KAAA4Y,EAAA3Y,MAAA,OACd,GAAjBrF,QAAQC,IAAI8a,GACPA,EAAK3a,KAAQ2a,EAAKkD,QAAO,CAAAD,EAAA3Y,KAAA,eAAA2Y,EAAA3Y,KAAA,EACLmY,GAAUzC,EAAK9K,eAAe,KAAD,EAAlD8K,EAAKkD,QAAOD,EAAA/I,KAAA,OAOhBjV,QAAQC,IAAI8a,EAAKkD,SACdlD,EAAKkD,SACSvK,OAAOpD,OACfoF,SAASwI,MAAM,0CAA4CnD,EAAKkD,QAAU,6BAClF,wBAAAD,EAAAvY,OAAA,GAAAsY,EAAA,KACJ,gBAfoBI,GAAA,OAAAL,EAAAnY,MAAA,KAAAC,UAAA,KA6DnB,OAZA/E,EAAAA,EAAAA,YAAU,WACR8a,EA7Pctb,EAAK+d,QACjB,SAACC,EAAavX,GAAO,OAAKuX,EAAcvX,EAAQ8V,SAAW9V,EAAQ+V,KAAK,GACxE,IA4PF7c,QAAQC,IAAIyb,EACd,GAAG,CAxPgB,SAACzH,GAClB,IAAMqK,GAAOvK,EAAAA,GAAAA,GAAO1T,GACdc,EAAQmd,EAAQC,WAAU,SAACjZ,GAAI,OAAK2O,EAAI7N,MAAQd,EAAKc,GAAG,IAC9D,GAAIjF,GAAS,EAAG,CACd,IAAMmE,EAAOgZ,EAAQnd,GACrBmd,EAAQE,OAAOrd,EAAO,GAACD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAOoE,GAAS2O,IACvCoH,EAAQiD,EACV,MACEA,EAAQzV,KAAKoL,GACboH,EAAQiD,EAEZ,KA+OAzd,EAAAA,EAAAA,YAAU,YA1BRX,EAAAA,EAAAA,GAAM,CACJC,OAAQ,OACRC,IAAK,wBACLE,QAAS,CACLC,cAAc,UAAD1B,OAAY9B,KAE7BsD,KAAM,CACFwF,WAAY,EACZC,UAAW,IACX1E,OAAS,QAEZZ,MAAK,SAACC,GACLT,QAAQC,IAAIQ,EAASJ,MACjBI,EAASJ,KAAKU,QAChBwa,EAAa9a,EAASJ,KAAKA,KAAKA,MAE9BL,QAAQC,IAAIQ,EAEpB,IAUA2H,EAAKc,eAAe,CAClBuV,UAAUC,EAAAA,GAAAA,WAAUvS,EAAMrN,KAE9B,GAAG,KAGDL,EAAAA,EAAAA,MAAA,OAAAhB,SAAA,EACED,EAAAA,EAAAA,KAACgK,EAAAA,EAAW,CACVR,KAAMkS,EAAAA,EACN/b,MAAM,qFAERsB,EAAAA,EAAAA,MAACiN,EAAAA,EAAI,CACHtD,KAAMA,EACNyG,SAAU,CACRC,KAAM,IAERC,WAAY,CACVD,KAAM,IAERE,OAAO,WAEPC,SAAU+M,GAAcve,SAAA,EAExBD,EAAAA,EAAAA,KAAC8R,EAAAA,EAAG,CAAA7R,UACFD,EAAAA,EAAAA,KAACgS,EAAAA,EAAG,CAACzQ,UAAU,OAAO+P,KAAM,GAAGrR,UAC7BgB,EAAAA,EAAAA,MAAC4Q,EAAAA,EAAI,CAACtQ,UAAU,OAAMtB,SAAA,EAQpBgB,EAAAA,EAAAA,MAAA,KACEV,MAAO,CAAEC,MAAO,WAChBe,UAAU,+DAA8DtB,SAAA,CAEvE,IAAI,yBAGPD,EAAAA,EAAAA,KAAC8R,EAAAA,EAAG,CAACC,MAAM,SAAQ9R,UACnBD,EAAAA,EAAAA,KAACgS,EAAAA,EAAG,CAACV,KAAM,GAAGrR,UACVD,EAAAA,EAAAA,KAACkO,EAAAA,EAAAA,KAAS,CAAC5I,KAAK,WAAW6E,MAAM,WAAUlK,UACzCD,EAAAA,EAAAA,KAAC8N,EAAAA,EAAM,CAACqN,UAAQ,EAAAlb,SACb6d,EAAUta,KAAI,SAACL,EAAMQ,GACpB,OACE3D,EAAAA,EAAAA,KAAC8N,EAAAA,EAAAA,OAAa,CAAahI,MAAO3C,EAAK7B,GAAGrB,SACvCkD,EAAKmC,MADY3B,EAIxB,aAKR1C,EAAAA,EAAAA,MAAC6Q,EAAAA,EAAG,CAACC,MAAM,SAAQ9R,SAAA,EACjBD,EAAAA,EAAAA,KAACgS,EAAAA,EAAG,CAACV,KAAM,GAAGrR,UACZD,EAAAA,EAAAA,KAACkO,EAAAA,EAAAA,KAAS,CAAC5I,KAAK,UAAU6E,MAAM,kBAAiBlK,UAC/CD,EAAAA,EAAAA,KAAC8N,EAAAA,EAAM,CAAA7N,SACJ+d,EAAKxa,KAAI,SAACL,EAAMQ,GACf,OACE3D,EAAAA,EAAAA,KAAC8N,EAAAA,EAAAA,OAAa,CAAahI,MAAO3C,EAAK7B,GAAGrB,SACvCkD,EAAK+I,SADYvI,EAIxB,WAIN3D,EAAAA,EAAAA,KAACgS,EAAAA,EAAG,CAACV,KAAM,GAAGrR,UACZD,EAAAA,EAAAA,KAACkO,EAAAA,EAAAA,KAAS,CAAC5I,KAAK,aAAa6E,MAAM,cAAalK,UAC9CD,EAAAA,EAAAA,KAAC4d,GAAW,YAIlB3c,EAAAA,EAAAA,MAAC6Q,EAAAA,EAAG,CAACC,MAAM,SAAQ9R,SAAA,EACjBD,EAAAA,EAAAA,KAACgS,EAAAA,EAAG,CAACV,KAAM,GAAGrR,UACZD,EAAAA,EAAAA,KAACkO,EAAAA,EAAAA,KAAS,CAAC5I,KAAK,SAAS6E,MAAM,SAAQlK,UACrCD,EAAAA,EAAAA,KAACkE,EAAAA,EAAK,SAGVlE,EAAAA,EAAAA,KAACgS,EAAAA,EAAG,CAACV,KAAM,GAAGrR,UACZD,EAAAA,EAAAA,KAACkO,EAAAA,EAAAA,KAAS,CAAC5I,KAAK,WAAW6E,MAAM,WAAUlK,UACzCD,EAAAA,EAAAA,KAACkE,EAAAA,EAAK,YAIZjD,EAAAA,EAAAA,MAAC6Q,EAAAA,EAAG,CAACC,MAAM,SAAQ9R,SAAA,EACjBD,EAAAA,EAAAA,KAACgS,EAAAA,EAAG,CAACV,KAAM,GAAGrR,UACZD,EAAAA,EAAAA,KAACkO,EAAAA,EAAAA,KAAS,CAAC5I,KAAK,MAAM6E,MAAM,UAASlK,UACnCD,EAAAA,EAAAA,KAACkE,EAAAA,EAAK,SAGVlE,EAAAA,EAAAA,KAACgS,EAAAA,EAAG,CAACV,KAAM,GAAGrR,UACZD,EAAAA,EAAAA,KAACkO,EAAAA,EAAAA,KAAS,CAAC5I,KAAK,QAAQ6E,MAAM,YAAWlK,UACvCD,EAAAA,EAAAA,KAACkE,EAAAA,EAAK,YAIZlE,EAAAA,EAAAA,KAAC8R,EAAAA,EAAG,CAACC,MAAM,SAAQ9R,UACjBD,EAAAA,EAAAA,KAACgS,EAAAA,EAAG,CAACV,KAAM,GAAGrR,UACZD,EAAAA,EAAAA,KAACkO,EAAAA,EAAAA,KAAS,CAAC5I,KAAK,WAAW6E,MAAM,WAAUlK,UACzCD,EAAAA,EAAAA,KAACwd,GAAAA,EAAU,CACTzX,aAAc5F,IAAO,IAAIghB,MAAQC,IAAI,EAAE,SACvC/gB,OAAQ,sBAKhBL,EAAAA,EAAAA,KAAC8R,EAAAA,EAAG,CAACC,MAAM,SAAQ9R,UACjBD,EAAAA,EAAAA,KAACgS,EAAAA,EAAG,CAACV,KAAM,GAAGrR,UACZD,EAAAA,EAAAA,KAACkO,EAAAA,EAAAA,KAAS,CAAC5I,KAAK,UAAU6E,MAAM,UAASlK,UACvCD,EAAAA,EAAAA,KAACiE,GAAQ,CAAC+B,KAAM,WAItBhG,EAAAA,EAAAA,KAAC8R,EAAAA,EAAG,CAACC,MAAM,SAAQ9R,UACjBD,EAAAA,EAAAA,KAACgS,EAAAA,EAAG,CAACV,KAAM,GAAGrR,UACZD,EAAAA,EAAAA,KAACkO,EAAAA,EAAAA,KAAS,CAAC5I,KAAK,UAAU6E,MAAM,iBAAkB5J,MAAO,CAACgU,aAAc,SAAStU,UAC/EgB,EAAAA,EAAAA,MAACyc,GAAAA,QAAO,CACJ/K,aAAc,WACd,OAAO,CACX,EACAT,SAAS,OACT3R,MAAO,CAAE8gB,UAAW,OAAQC,SAAU,OAAQC,UAAW,QAAUC,aAAc,QACjF9O,SAAU,EACVP,OAAO,OACPsP,UAAWpB,GACX1a,SApMS,SAAH+b,GAAmC,IAAnBtP,EAAWsP,EAArBnT,SAC5BC,EAAY4D,GACZ5P,QAAQC,IAAI2b,EACd,EAkMkB7P,SAAU6P,EACV7c,UAAU,aAAYtB,SAAA,EACtBD,EAAAA,EAAAA,KAAA,KAAGuB,UAAU,uBAAsBtB,UAC/BD,EAAAA,EAAAA,KAAC2d,GAAAA,EAAa,OAElB1c,EAAAA,EAAAA,MAAA,KAAGM,UAAU,gCAA+BtB,SAAA,CAAC,8BAA0BD,EAAAA,EAAAA,KAAA,QAAMuB,UAAU,cAAatB,SAAC,qCAwGjHgB,EAAAA,EAAAA,MAACiN,EAAAA,EAAAA,KAAS,CAAC3M,UAAS,gCAAkCtB,SAAA,EACpDD,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,CAAAlC,SAAC,UACRD,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,CACLP,QAAS,kBAAMgJ,EAAK8J,aAAa,EACjCnT,UAAU,OAAMtB,SACjB,eAIDD,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,CAACE,KAAK,UAAUsS,SAAS,SAAQ1U,SAAC,aAI3CD,EAAAA,EAAAA,KAAC+B,EAAAA,EAAK,CACJE,UAAQ,EACRD,QAASkF,EACThF,OAAQ,CAAC,MACTmD,SAAU,WACR8B,GAAsB,EACxB,EAAElH,UAEFD,EAAAA,EAAAA,KAACuJ,EAAAA,EAAa,CACZC,KAAMC,EAAAA,GACN9J,MAAM,8BACN+J,KAAK,gDAMjB,E,wBCniBQiY,GAAW9d,EAAAA,EAAAA,OAmWnB,OAlWA,WACE,IAAM8K,GAAQC,EAAAA,EAAAA,MAEdgT,GAAeC,EAAAA,GAAAA,MAARjX,GAAiB5L,EAAAA,EAAAA,GAAA4iB,EAAA,GAAb,GACX/iB,GAAoCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CijB,EAAU/iB,EAAA,GAAEgjB,EAAahjB,EAAA,GAChCI,GAAwBL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA7B0D,EAAIzD,EAAA,GAAEye,EAAOze,EAAA,GACpBoF,GAAwC1F,EAAAA,EAAAA,UAAS,GAAE2F,GAAAzF,EAAAA,EAAAA,GAAAwF,EAAA,GAA5C0Z,EAAYzZ,EAAA,GAAE0Z,EAAe1Z,EAAA,GACpCE,GAAoD7F,EAAAA,EAAAA,WAAS,GAAM8F,GAAA5F,EAAAA,EAAAA,GAAA2F,EAAA,GAA5DuC,EAAkBtC,EAAA,GAAEuC,EAAqBvC,EAAA,GAC1Cod,EAAiB,CAAC,aAAc,WAAY,aAAc,YAC1DziB,EAAMC,aAAaC,QAAQ,SACjC+C,QAAQC,IAAIkM,EAAMrN,GAAI,MAEtB,IASM2gB,GAAaC,EAAAA,EAAAA,cAAY,SAACzL,GAC9BoH,GAAQ,SAAAsE,GACN,IAAMrB,GAAOvK,EAAAA,GAAAA,GAAO4L,GACdxe,EAAQmd,EAAQC,WAAU,SAACjZ,GAAI,OAAK2O,EAAI7N,MAAQd,EAAKc,GAAG,IAC9D,GAAIjF,GAAS,EAAG,CACd,IAAMmE,EAAOgZ,EAAQnd,GAErB,OADAmd,EAAQE,OAAOrd,EAAO,GAACD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAOoE,GAAS2O,IAChCqK,CACT,CAEE,OADAA,EAAQzV,KAAKoL,GACNqK,CAEX,GACF,GAAG,CAACje,IAuBEqI,GAAUC,EAAAA,EAAAA,MAoGhB,OAlCA9H,EAAAA,EAAAA,YAAU,WACQ,MAAZye,IACApf,EAAAA,EAAAA,GAAM,CACFC,OAAQ,OACRC,IAAK,sBACLC,KAAM,CAAEvB,GAAIqN,EAAMrN,IAClBwB,QAAS,CAEPC,cAAc,UAAD1B,OAAY9B,MAG1ByD,MAAK,SAACC,GACL8e,EAAc9e,EAASJ,KAAKA,MAC5Bgb,EAAQ5a,EAASJ,KAAKA,KAAKid,WAAWtc,KAAI,SAACL,EAAKM,GAC9C,MAAO,CACLmF,IAAKnF,EACL6B,KAAMnC,EAAKmC,KACX8Z,SAAUjc,EAAKic,SACfC,MAAOlc,EAAKkc,MACZV,MAAOxb,EAAKic,SAAWjc,EAAKkc,MAEhC,KACAlB,EAAgBlb,EAASJ,KAAKA,KAAK4c,WACnCjd,QAAQC,IAAIQ,EAASJ,KAAKA,KAC5B,IACCG,MAAK,SAACI,GACLZ,QAAQC,IAAIW,EACd,IAGR+a,EA7IwB,WACxB,IAAMQ,EAAQ9b,EAAK+d,QACjB,SAACC,EAAavX,GAAO,OAAKuX,EAAcvX,EAAQ8V,SAAW9V,EAAQ+V,KAAK,GACxE,GAGF,OADA7c,QAAQC,IAAIkc,GACLA,CACT,CAsIkByD,IAChB5f,QAAQC,IAAII,EACd,GAAG,CAACof,KAGFhhB,EAAAA,EAAAA,MAAA,OAAAhB,SAAA,EACED,EAAAA,EAAAA,KAACgK,EAAAA,EAAW,CACVR,KAAMkS,EAAAA,EACN/b,MAAM,+EAERsB,EAAAA,EAAAA,MAACiN,EAAAA,EAAI,CACHtD,KAAMA,EACNyG,SAAU,CACRC,KAAM,IAERC,WAAY,CACVD,KAAM,IAERE,OAAO,WAEPC,SAlHgB,SAAC7L,GACrB,IAAM8Y,EAAqB,GAAfR,EACNS,EAAQT,EAA8B,IAAfA,EAC7B1b,QAAQC,IAAI,QAAQmD,GAKpB,IAAMkZ,EAAU3e,IAAOyF,EAAEsZ,MAAM7e,OAAO,cAChC0e,EAAa5e,IAAOyF,EAAEuZ,SAAS9e,OAAO,cAC5C8G,GAAsB,GACtB,IAAMkb,EAAUxf,EAAKW,KAAI,SAACL,GACxB,MAAO,CACLyF,IAAKzF,EAAKyF,IACVtD,KAAMnC,EAAKmC,KACX8Z,SAAUjc,EAAKic,SACfC,MAAOlc,EAAKkc,MACZV,MAAOxb,EAAKic,SAAWjc,EAAKkc,MAEhC,IACM9W,EAAQ,CACVjH,GAAGwgB,EAAWxgB,GAChB8J,eAAgBuD,EAAMrN,GACtB4d,KAAMJ,EACNU,SAAUT,EACVze,OAAO,UACPmf,UAAWvB,EACXQ,IAAKA,EAAIpL,WACToM,SAAU,EACVf,MAAOA,EAAMrL,WACbwM,WAAYuC,IAId3f,EAAAA,EAAAA,GAAM,CACJC,OAAQ,OACRC,IAAK,yBACLC,KAAM0F,EACNzF,QAAS,CAEPC,cAAc,UAAD1B,OAAY9B,MAE1ByD,MAAK,SAACC,GACPT,QAAQC,IAAIQ,EAASJ,MACjBI,EAASJ,KAAKU,QAChBf,QAAQC,IAAIQ,EAASJ,KAAKA,MAE1BL,QAAQC,IAAIQ,EAEhB,IAAGD,MAAK,SAACI,GACPZ,QAAQC,IAAIW,EACd,GACF,EA8D8BnD,SAAA,EAExBD,EAAAA,EAAAA,KAAC8R,EAAAA,EAAG,CAAA7R,UACFD,EAAAA,EAAAA,KAACgS,EAAAA,EAAG,CAACzQ,UAAU,OAAO+P,KAAM,GAAGrR,UAC7BgB,EAAAA,EAAAA,MAAC4Q,EAAAA,EAAI,CAACtQ,UAAU,OAAMtB,SAAA,EACpBgB,EAAAA,EAAAA,MAAA,KACEV,MAAO,CAAEC,MAAO,WAChBe,UAAU,+DAA8DtB,SAAA,CAEvE,KACDD,EAAAA,EAAAA,KAACwB,EAAAA,EAAI,CAACD,UAAU,OAAOE,UAAWqa,EAAAA,KAAsB,oBAE1D7a,EAAAA,EAAAA,MAAC6Q,EAAAA,EAAG,CAACC,MAAM,SAAQ9R,SAAA,EACjBD,EAAAA,EAAAA,KAACgS,EAAAA,EAAG,CAACV,KAAM,EAAErR,UACXD,EAAAA,EAAAA,KAACkO,EAAAA,EAAAA,KAAS,CAAC5I,KAAK,WAAW6E,MAAM,WAAUlK,UACzCD,EAAAA,EAAAA,KAACkE,EAAAA,EAAK,SAGVlE,EAAAA,EAAAA,KAACgS,EAAAA,EAAG,CAACV,KAAM,EAAErR,UACXD,EAAAA,EAAAA,KAACkO,EAAAA,EAAAA,KAAS,CAAC5I,KAAK,OAAO6E,MAAM,OAAMlK,UACjCD,EAAAA,EAAAA,KAACwd,GAAAA,EACC,CACAnd,OAAQ2hB,SAIdhiB,EAAAA,EAAAA,KAACgS,EAAAA,EAAG,CAACV,KAAM,EAAErR,UACXD,EAAAA,EAAAA,KAACkO,EAAAA,EAAAA,KAAS,CAAC5I,KAAK,WAAW6E,MAAM,WAAUlK,UACzCD,EAAAA,EAAAA,KAACwd,GAAAA,EACC,CACAnd,OAAQ2hB,YAKhBhiB,EAAAA,EAAAA,KAAC8R,EAAAA,EAAG,CAAA7R,UACFgB,EAAAA,EAAAA,MAAC+Q,EAAAA,EAAG,CAACV,KAAM,GAAGrR,SAAA,EACZgB,EAAAA,EAAAA,MAAC4C,EAAAA,EAAK,CAACC,WAAwB,MAAZge,GAAoBjf,EAAK5C,SAAA,EAC1CD,EAAAA,EAAAA,KAAC2hB,GAAM,CACLhiB,MAAM,OACNC,UAAU,OAEVC,OAAQ,SAACyiB,EAAMviB,GAAM,OACnBC,EAAAA,EAAAA,KAACkE,EAAAA,EAAK,CACJ4B,MAAOwc,EACP3c,SAAU,SAACC,GAAC,OACVqc,GAAUve,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAI3D,GAAM,IAAEuF,KAAMM,EAAEC,OAAOC,QAAQ,GAEjD,GAPA,SAUN9F,EAAAA,EAAAA,KAAC2hB,GAAM,CACLhiB,MAAM,WACNC,UAAU,WAEVC,OAAQ,SAACyiB,EAAMviB,GAAM,OACnBC,EAAAA,EAAAA,KAACuiB,GAAAA,EAAW,CACVzc,MAAOwc,EACP3c,SAAU,SAACG,GAAK,OACdmc,GAAUve,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAI3D,GAAM,IAAEqf,SAAUtZ,IAAQ,GAE5C,GAPA,aAUN9F,EAAAA,EAAAA,KAAC2hB,GAAM,CACLhiB,MAAM,QACNC,UAAU,QAEVC,OAAQ,SAACyiB,EAAMviB,GAAM,OACnBC,EAAAA,EAAAA,KAACuiB,GAAAA,EAAW,CACVzc,MAAOwc,EACP3c,SAAU,SAACG,GAAK,OACdmc,GAAUve,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAI3D,GAAM,IAAEsf,MAAOvZ,IAAQ,GAEzC,GAPA,UAUN9F,EAAAA,EAAAA,KAAC2hB,GAAM,CACLhiB,MAAM,QACNC,UAAU,QAEVC,OAAQ,SAACyiB,EAAMviB,GAAM,OACnBC,EAAAA,EAAAA,KAAA,QAAAC,SAAOF,EAAOqf,SAAWrf,EAAOsf,OAAa,GAF3C,UAKNrf,EAAAA,EAAAA,KAAC2hB,GAAM,CACLhiB,MAAM,SAENE,OAAQ,SAACyiB,EAAMviB,GAAM,OACnBC,EAAAA,EAAAA,KAAA,QAAAC,UACED,EAAAA,EAAAA,KAAA,KAAGwiB,KAAK,IAAI5gB,QAAS,kBAnNxB,SAACgH,GACpB,IAAMkY,EAAUje,EAAKK,QAAO,SAAC4E,GAAI,OAAKA,EAAKc,MAAQA,CAAG,IACtDiV,EAAQiD,EACV,CAgNmD2B,CAAa1iB,EAAO6I,IAAI,EAAC3I,SAAC,YAGhD,GANL,cAURD,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,CAACZ,UAAU,YAAYc,KAAK,UAAUT,QA7J9C,WACb,IAAMkf,EAAU,CACdlY,IAAK/F,EAAK0P,OAAS,EACnBjN,KAAM,GACN8Z,SAAU,EACVC,MAAO,GAETxB,EAAQ,GAADxc,QAAAkV,EAAAA,GAAAA,GAAK1T,GAAI,CAAEie,IACpB,EAqJ6E7gB,SAAC,kBAKlEgB,EAAAA,EAAAA,MAAC6Q,EAAAA,EAAG,CAACC,MAAM,SAAQ9R,SAAA,EACjBD,EAAAA,EAAAA,KAACgS,EAAAA,EAAG,CAACV,KAAM,GAAGrR,UAIZgB,EAAAA,EAAAA,MAAA,OAAKM,UAAU,sCAAqCtB,SAAA,EAClDD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,eACJD,EAAAA,EAAAA,KAAA,MAAAC,SAAiB,MAAZ6hB,GAAoB5D,UAG7Ble,EAAAA,EAAAA,KAACgS,EAAAA,EAAG,CAACV,KAAM,GAAGrR,UACZgB,EAAAA,EAAAA,MAAA,OAAKM,UAAU,sCAAqCtB,SAAA,EAClDD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,cACJD,EAAAA,EAAAA,KAACkO,EAAAA,EAAAA,KAAS,CAAC5I,KAAK,WAAW6E,MAAM,IAAGlK,UAClCD,EAAAA,EAAAA,KAACkE,EAAAA,EAAK,CAAC6B,aAA0B,MAAZ+b,GAAoBA,EAAWpC,SAASpM,qBAInEtT,EAAAA,EAAAA,KAACgS,EAAAA,EAAG,CAACV,KAAM,GAAGrR,UAIZgB,EAAAA,EAAAA,MAAA,OAAKM,UAAU,sCAAqCtB,SAAA,EAClDD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,YACJD,EAAAA,EAAAA,KAAA,MAAAC,SAAiB,MAAZ6hB,GAAmC,IAAf5D,UAG7Ble,EAAAA,EAAAA,KAACgS,EAAAA,EAAG,CAACV,KAAM,GAAGrR,UAIZgB,EAAAA,EAAAA,MAAA,OAAKM,UAAU,sCAAqCtB,SAAA,EAClDD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,WACJD,EAAAA,EAAAA,KAAA,MAAAC,SAAiB,MAAZ6hB,GAAoB5D,EAA8B,IAAfA,oBAQpDjd,EAAAA,EAAAA,MAACiN,EAAAA,EAAAA,KAAS,CAAC3M,UAAS,gCAAkCtB,SAAA,EACpDD,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,CAACP,QAASsJ,EAAQyG,OAAO1R,SAAC,UACjCD,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,CACLP,QAAS,WAAOgJ,EAAK8J,cAAemJ,EAAQ,CAAC,CAC3CjV,IAAK,EACLtD,KAAM,GACN8Z,SAAU,GACVC,MAAO,GACPV,MAAO,+BACN,EACHpd,UAAU,OAAMtB,SACjB,eAIDD,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,CAACE,KAAK,UAAUsS,SAAS,SAAQ1U,SAAC,aAI3CD,EAAAA,EAAAA,KAAC+B,EAAAA,EAAK,CACJE,UAAQ,EACRD,QAASkF,EACThF,OAAQ,CAAC,MACTmD,SAAU,WACR8B,GAAsB,EACxB,EAAElH,UAEFD,EAAAA,EAAAA,KAACuJ,EAAAA,EAAa,CACZC,KAAMC,EAAAA,GACN9J,MAAM,+BACN+J,KAAK,2DAMjB,E,8CChYA,I,kBAAuB,2BAAvB,GAA6D,+BAA7D,GAA0G,iCAA1G,GAAgO,8BAAhO,GAAuQ,4BCiE/PiY,IAlCgB9L,GAAAA,EAAAA,MAAAA,GAAAA,EAAAA,KAkCLhS,EAAAA,EAAAA,QAsVnB,GAhVgB,WACd,IAAM8K,GAAQC,EAAAA,EAAAA,MACRrP,EAAMC,aAAaC,QAAQ,SACjCZ,GAA8BC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnC6jB,EAAO3jB,EAAA,GAAE4jB,EAAU5jB,EAAA,GAEpBmM,GAAUC,EAAAA,EAAAA,MA0ChB,OAzBA9H,EAAAA,EAAAA,YAAU,WACR,IAAMR,EAAO,CAAEvB,GAAIqN,EAAMrN,KACzBoB,EAAAA,EAAAA,GAAM,CACJC,OAAQ,OACRC,IAAK,sBACLC,KAAMA,EACNC,QAAS,CAEPC,cAAc,UAAD1B,OAAY9B,MAG1ByD,MAAK,SAACC,GACLT,QAAQC,IAAI,MAAOQ,EAASJ,MACxBI,EAASJ,KAAKU,QAChBof,EAAW1f,EAASJ,KAAKA,MAEzBL,QAAQC,IAAIQ,EAEhB,IACCD,MAAK,SAACI,GACLZ,QAAQC,IAAIW,EACd,GACJ,GAAG,IACHZ,QAAQC,IAAIigB,IAGVzhB,EAAAA,EAAAA,MAAC2hB,EAAAA,SAAc,CAAA3iB,SAAA,EAEbD,EAAAA,EAAAA,KAACgK,EAAAA,EAAW,CACV6Y,IAAKC,EAAAA,GACLnjB,MAAM,2EAGRsB,EAAAA,EAAAA,MAAC4Q,EAAAA,EAAI,CAACvQ,GAAG,QAAOrB,SAAA,EACdD,EAAAA,EAAAA,KAAC6R,EAAAA,EAAI,CAACtQ,UAAWwhB,GAAa9iB,UAC5BD,EAAAA,EAAAA,KAAA,OAAKuB,UAAU,YAAWtB,UACxBD,EAAAA,EAAAA,KAAA,OAAKqK,IAAK2Y,GAAMzY,IAAI,cAGxBvK,EAAAA,EAAAA,KAAC6R,EAAAA,EAAI,CAACtQ,UAAWwhB,GAAoB9iB,UACnCgB,EAAAA,EAAAA,MAAA,OAAKM,UAAU,iCAAgCtB,SAAA,EAC7CgB,EAAAA,EAAAA,MAAA,OAAKV,MAAO,CAAE0iB,SAAU,SAAW1hB,UAAU,GAAEtB,SAAA,EAC7CD,EAAAA,EAAAA,KAAA,KACEuB,UAAS,GAAAF,OAAK0hB,GAAiB,wCAAuC9iB,SACvE,kBAGDD,EAAAA,EAAAA,KAAA,KACEuB,UAAS,GAAAF,OAAK0hB,GAAiB,iCAAgC9iB,SAChE,0BAGDD,EAAAA,EAAAA,KAAA,KAAGuB,UAAU,WAAUtB,SAAC,2BACxBgB,EAAAA,EAAAA,MAAA,KAAGM,UAAU,WAAUtB,SAAA,CAAC,qDAC6B,QAErDD,EAAAA,EAAAA,KAAA,KAAGuB,UAAU,MAAKtB,SAAC,6BAErBgB,EAAAA,EAAAA,MAAA,OAAKM,UAAU,kBAAiBtB,SAAA,EAC9BD,EAAAA,EAAAA,KAAA,KACEuB,UAAS,GAAAF,OAAK0hB,GAAiB,wCAAuC9iB,SACvE,sBAGDD,EAAAA,EAAAA,KAAA,KACEuB,UAAS,GAAAF,OAAK0hB,GAAiB,iCAAgC9iB,SAChE,qBAGDD,EAAAA,EAAAA,KAAA,KAAGuB,UAAU,WAAUtB,SAAC,YACxBD,EAAAA,EAAAA,KAAA,KAAGuB,UAAU,WAAUtB,SAAC,6BACxBD,EAAAA,EAAAA,KAAA,KAAGuB,UAAU,MAAKtB,SAAC,6BAKzBD,EAAAA,EAAAA,KAAA,OAAAC,UA6GEgB,EAAAA,EAAAA,MAAC4C,EAAAA,EAAK,CAACC,WAAY4e,EAAQ5C,WAAW7f,SAAA,EAOpCD,EAAAA,EAAAA,KAAC2hB,GAAM,CACLhiB,MAAM,OACNC,UAAU,OAEVC,OAAQ,SAACyiB,EAAMviB,GAAM,OAAKC,EAAAA,EAAAA,KAAA,KAAAC,SAAIqiB,GAAS,GADnC,SAGNtiB,EAAAA,EAAAA,KAAC2hB,GAAM,CACLhiB,MAAM,WACNC,UAAU,WAEVC,OAAQ,SAACyiB,EAAMviB,GAAM,OAAKC,EAAAA,EAAAA,KAAA,KAAAC,SAAIqiB,GAAS,GADnC,aAGNtiB,EAAAA,EAAAA,KAAC2hB,GAAM,CACLhiB,MAAM,QACNC,UAAU,QAEVC,OAAQ,SAACyiB,EAAMviB,GAAM,OAAKC,EAAAA,EAAAA,KAAA,KAAAC,SAAIqiB,GAAS,GADnC,UAGNtiB,EAAAA,EAAAA,KAAC2hB,GAAM,CACLhiB,MAAM,QACNC,UAAU,QAEVC,OAAQ,SAACyiB,EAAMviB,GAAM,OAAKC,EAAAA,EAAAA,KAAA,KAAAC,SAAIqiB,GAAS,GADnC,eAKVtiB,EAAAA,EAAAA,KAACkjB,GAAAA,EAAO,KACRljB,EAAAA,EAAAA,KAAA,OAAKuB,UAAU,6BAA4BtB,UACzCgB,EAAAA,EAAAA,MAAC6Q,EAAAA,EAAG,CACFvR,MAAO,CAAEwL,MAAO,OAChBxK,UAAU,gCAA+BtB,SAAA,EA2BzCD,EAAAA,EAAAA,KAACgS,EAAAA,EAAG,CAACV,KAAM,GAAGrR,UACZgB,EAAAA,EAAAA,MAACkiB,GAAAA,GAAI,CAAAljB,SAAA,EACHgB,EAAAA,EAAAA,MAACkiB,GAAAA,GAAAA,KAAS,CAAC5hB,UAAU,qDAAoDtB,SAAA,EACvED,EAAAA,EAAAA,KAAA,KAAGO,MAAO,CAAEC,MAAO,WAAae,UAAU,MAAKtB,SAAC,iBAGhDD,EAAAA,EAAAA,KAAA,KACEuB,UAAS,iCAAAF,OAAmC0hB,GAAiB,qBAAoB9iB,SAEhFyiB,EAAQjD,gBAGbxe,EAAAA,EAAAA,MAACkiB,GAAAA,GAAAA,KAAS,CAAC5hB,UAAU,qDAAoDtB,SAAA,EACvED,EAAAA,EAAAA,KAAA,KAAGO,MAAO,CAAEC,MAAO,WAAae,UAAU,MAAKtB,SAAC,gBAGhDD,EAAAA,EAAAA,KAAA,KACEuB,UAAS,iCAAAF,OAAmC0hB,GAAiB,qBAAoB9iB,SAEhFyiB,EAAQhD,eAGbze,EAAAA,EAAAA,MAACkiB,GAAAA,GAAAA,KAAS,CAAC5hB,UAAU,qDAAoDtB,SAAA,EACvED,EAAAA,EAAAA,KAAA,KAAGO,MAAO,CAAEC,MAAO,WAAae,UAAU,MAAKtB,SAAC,cAGhDD,EAAAA,EAAAA,KAAA,KACEuB,UAAS,iCAAAF,OAAmC0hB,GAAiB,qBAAoB9iB,SAEhFyiB,EAAQhE,eAKjB1e,EAAAA,EAAAA,KAACkjB,GAAAA,EAAO,KACRjiB,EAAAA,EAAAA,MAAA,KACEM,UAAS,GAAAF,OAAK0hB,GAAiB,oCAAmC9iB,SAAA,CACnE,eACcyiB,EAAQ/D,kBAM7B1d,EAAAA,EAAAA,MAAA,OAAKM,UAAS,8BAAAF,OAAgC0hB,IAAiB9iB,SAAA,EAC7DD,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,CAACP,QAASsJ,EAAQyG,OAAO1R,SACM,YAItCD,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,CACLE,KAAK,UACLd,UAAWwhB,GACXnhB,QAAS,YA1TjB,SAAkBwhB,GAChB,IAAIC,EAAgBnL,SAASoL,eAAeF,GAASG,UACjDC,EAAmBtL,SAASuL,KAAKF,UAErCrL,SAASuL,KAAKF,UACZ,2CAA6CF,EAAgB,UAE/DnN,OAAOwN,QAEPxL,SAASuL,KAAKF,UAAYC,CAC5B,CAiTUG,CAAS,QACX,EAAE1jB,SAEmC,kBAM/C,E,gDCMA,OA3YA,WAEE,IAAApB,GAAoCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCF,EAAUI,EAAA,GAAE8K,EAAa9K,EAAA,GAChCI,GAAsCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA3CoO,EAAWnO,EAAA,GAAEoO,EAAcpO,EAAA,GAC5BG,EAAMC,aAAaC,QAAQ,SACjC+E,GAA8B1F,EAAAA,EAAAA,UAAS,CAAC,QAAO2F,GAAAzF,EAAAA,EAAAA,GAAAwF,EAAA,GAAxC8E,EAAO7E,EAAA,GAAEmf,EAAUnf,EAAA,GAC1BE,GAA0C7F,EAAAA,EAAAA,UAAS,IAAG8F,GAAA5F,EAAAA,EAAAA,GAAA2F,EAAA,GAA/C8I,EAAa7I,EAAA,GAAE8I,EAAgB9I,EAAA,GACtCoC,GAA8ClI,EAAAA,EAAAA,WAAS,GAAMmI,GAAAjI,EAAAA,EAAAA,GAAAgI,EAAA,GAAtD3H,EAAe4H,EAAA,GAAE3H,EAAkB2H,EAAA,GAC1C4H,GAAgC/P,EAAAA,EAAAA,UAAS,IAAGgQ,GAAA9P,EAAAA,EAAAA,GAAA6P,EAAA,GAArC+F,EAAQ9F,EAAA,GAAE+F,EAAW/F,EAAA,GAC5BG,GAA8CnQ,EAAAA,EAAAA,UAAS,IAAGoQ,GAAAlQ,EAAAA,EAAAA,GAAAiQ,EAAA,GAC1DG,GADsBF,EAAA,GAAoBA,EAAA,IAClBpQ,EAAAA,EAAAA,UAAS,IAAEuQ,GAAArQ,EAAAA,EAAAA,GAAAoQ,EAAA,GAA5B9I,EAAI+I,EAAA,GAAE9I,EAAO8I,EAAA,GACpBG,GAA0B1Q,EAAAA,EAAAA,UAAS,GAAE2Q,GAAAzQ,EAAAA,EAAAA,GAAAwQ,EAAA,GAA9BhJ,EAAKiJ,EAAA,GAAEhJ,GAAQgJ,EAAA,GACtBM,IAAgDjR,EAAAA,EAAAA,WAAS,GAAMkR,IAAAhR,EAAAA,EAAAA,GAAA+Q,GAAA,GAGzDrQ,IAHiBsQ,GAAA,GAAqBA,GAAA,IAC5B7E,EAAAA,EAAAA,MAEA,CACd,CACExL,MAAO,QACPC,UAAW,MACXC,OAAQ,SAACiI,GACP,OACE9H,EAAAA,EAAAA,KAAA,OAAKuB,UAAU,4BAA2BtB,UACvC6H,EAAO,GAGd,GAEF,CACEnI,MAAO,UACPC,UAAW,SACXC,OAAQ,SAACC,EAAEC,GACT,OACEkB,EAAAA,EAAAA,MAAA,OAAKM,UAAU,4BAA2BtB,SAAA,CAAC,IACxCF,EAAOgV,SAGd,GAEF,CACEpV,MAAO,GACPC,UAAW,MACXC,OAAQ,SAACiI,GACP,IAAQ+E,EAAgB/E,EAAhB+E,MAAgB/E,EAATxC,KACf,OACEtF,EAAAA,EAAAA,KAAA,OAAKuB,UAAU,4BAA2BtB,UACzCD,EAAAA,EAAAA,KAAC6jB,GAAAA,EAAM,CAACxZ,IAAKwC,KAGlB,GAEF,CACElN,MAAO,YACPC,UAAW,YAEb,CACED,MAAO,gBACPC,UAAW,aAEb,CACED,MAAO,SAEPE,OAAQ,SAACC,EAAEC,GACT,OACEC,EAAAA,EAAAA,KAAA,OAAKuB,UAAU,4BAA2BtB,UACzCD,EAAAA,EAAAA,KAACwB,EAAAA,EAAI,CAACC,UAA6B,IAAlB1B,EAAO+Q,OAAeoE,EAAAA,GAAUC,EAAAA,MAGtD,GAEF,CACExV,MAAO,cACPC,UAAW,eAGb,CACED,MAAO,gBACPC,UAAW,gBAEb,CACED,MAAO,WACPC,UAAW,WAEb,CACED,MAAO,YACPC,UAAW,UACXC,OAAQ,SAACiI,GACP,IACoBgc,EADhBC,EAAM,GAAEC,GAAAC,EAAAA,GAAAA,GACInc,GAAI,IAApB,IAAAkc,EAAAE,MAAAJ,EAAAE,EAAAG,KAAAC,MAAsB,CAAC,IAAfvhB,EAAIihB,EAAAhe,MACPie,EAAIxR,OAAS,IAAGwR,GAAO,MAC1BA,GAAO,GAAGlhB,CACZ,CAAC,OAAAO,GAAA4gB,EAAApe,EAAAxC,EAAA,SAAA4gB,EAAAK,GAAA,CACD,OACErkB,EAAAA,EAAAA,KAAA,OAAAC,SAAM8jB,GAEV,GAEF,CACEpkB,MAAO,SACPC,UAAW,SACXC,OAAQ,SAACC,EAAEC,GACT,MAAmB,WAAhBA,EAAOO,QAA0BN,EAAAA,EAAAA,KAAA,QAAMO,MAAO,CAACC,MAAO,UAAWC,gBAAiB,UAAWC,QAAS,UAAWC,aAAa,MAAOC,WAAW,MAAOC,SAAU,QAAQZ,SAAC,YACjKD,EAAAA,EAAAA,KAAA,QAAMO,MAAO,CAACC,MAAO,UAAWC,gBAAiB,UAAWC,QAAS,UAAWC,aAAa,MAAOC,WAAW,MAAOC,SAAU,QAAQZ,SAAC,YACvJ,GAEF,CACEN,MAAO,SACPE,OAAQ,SAACC,EAAEC,GACT,OACEC,EAAAA,EAAAA,KAAAc,EAAAA,SAAA,CAAAb,UACED,EAAAA,EAAAA,KAACe,EAAAA,EAAgB,CACfC,MACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAAAjB,SAAA,EACHD,EAAAA,EAAAA,KAACkB,EAAAA,EAAAA,KAAS,CAAAjB,UACRgB,EAAAA,EAAAA,MAACE,EAAAA,GAAI,CACHC,GAAE,iEAAAC,OAAmEtB,EAAOgV,QAC5ExT,UAAU,4BAA2BtB,SAAA,EAErCD,EAAAA,EAAAA,KAACwB,EAAAA,EAAI,CAACD,UAAU,OAAOE,UAAWE,EAAAA,KAAY,aAIlD3B,EAAAA,EAAAA,KAACkB,EAAAA,EAAAA,KAAS,CACRU,QAAS,WACPC,IACF,EAAE5B,UAEFgB,EAAAA,EAAAA,MAAA,QAAMM,UAAU,4BAA2BtB,SAAA,EACzCD,EAAAA,EAAAA,KAACwB,EAAAA,EAAI,CAACD,UAAU,OAAOE,UAAWK,EAAAA,KAAc,eAKpD9B,EAAAA,EAAAA,KAAC+B,EAAAA,EAAK,CACJC,QAAS3C,EAETgG,SAAUjD,GACVH,UAAQ,EACRC,OAAQ,EACNlC,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,CACL5B,MAAO,CAAEC,MAAO,WAChBoB,QAASQ,GACTb,UAAU,mBAAkBtB,SAC7B,gBAGDD,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,CACLE,KAAK,UACLd,UAAU,mBACVK,QAAS,kBAAIU,GAASvC,EAAOuB,GAAG,EAACrB,SAClC,kBAGDA,UAEFD,EAAAA,EAAAA,KAAA,OACEO,MAAO,CAAEC,MAAO,WAChBe,UAAU,kCAAiCtB,SAC5C,gEASf,KAIEmC,GAAe,WACnB9C,GAAmB,EACrB,EACMgD,GAAW,SAAChB,GAChBhC,GAAmB,GACnBoD,EAAAA,EAAAA,KAEI,gCACA,CACEpB,GAAIA,GAEN,CACEwB,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD1B,OAAY9B,MAI9ByD,MAAK,SAACC,GACKA,EAASJ,KACZU,SACL+gB,IAEJ,IACCpf,OAAM,SAACC,GACN3C,QAAQC,IAAI0C,EACd,GACJ,EAQMmf,GAAW,WACf5hB,EAAAA,EAAAA,KAEI,6BACA,CACE2F,WAAY/B,EACZgC,UAAW,GACX1E,OAAQjF,GAA0B,KAClC2E,YAAamK,EAAc,IAAM,MAEnC,CACE3K,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD1B,OAAY9B,MAI9ByD,MAAK,SAACC,GACL,IAAIgC,EAAMhC,EAASJ,KAAKA,KAAKA,KAC7BL,QAAQC,IAAIwC,GACZ,IAAIsD,EAAQtD,EAAIzB,KAAI,SAACL,EAAMM,GACzB,MAAO,CACLmF,IAAKnF,EACLsR,OAAQ5R,EAAK7B,GACbgP,SAAUnN,EAAKmC,KACfwL,OAAwB,SAAhB3N,EAAK2N,OAAoB,EAAI,EACrCF,YACuB,UAArBzN,EAAKyN,aAA0B5Q,EAAAA,EAAAA,KAACoV,GAAAA,GAAE,CAACzV,MAAM,KAAK4B,UAAU,gBACjC,cAArB4B,EAAKyN,aAA8B5Q,EAAAA,EAAAA,KAACqV,GAAAA,GAAE,CAAC1V,MAAM,KAAK4B,UAAU,iBAC5DvB,EAAAA,EAAAA,KAACsV,GAAAA,GAAE,CAAC3V,MAAM,KAAK4B,UAAU,gBAE7BqL,IAAK,CAAEC,MAAO1J,EAAK6N,YAAa1L,KAAMnC,EAAKmC,MAC3CiQ,aAAcpS,EAAK2F,MACnBC,QAAS5F,EAAK6F,MACdkD,QAAS/I,EAAK4N,UACdzQ,OAAQ6C,EAAK7C,OACbikB,UAAWphB,EAAKsJ,cAChB+X,SAAUrhB,EAAKshB,aAEnB,IAEA5P,EAAYtM,EACd,IACCrD,OAAM,SAACC,GACN3C,QAAQC,IAAI0C,EACd,GACJ,EAEMtD,GAAkB,WACtBvC,GAAmB,EACrB,EAEMolB,GAAM,eAAAhmB,GAAA2I,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAvE,EAAA,OAAAqE,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEYnF,EAAAA,EAAAA,KACrB,6BACA,CACE2F,WAAY,EACZC,UAAW,IACX1E,OAAQjF,GAA0B,KAClCgmB,YAAa,OAEf,CACE7hB,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD1B,OAAY9B,MAG7B,KAAD,EAC+B,GAf1B0D,EAAQ0E,EAAA8P,KAedjV,QAAQC,IAAIQ,EAASJ,KAAKD,MACtBK,EAASJ,KAAKvC,OAAO,CAADqH,EAAAE,KAAA,eAAAF,EAAA2W,OAAA,SACfrb,EAASJ,KAAKD,KAAG,OAAA+E,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAA4W,GAAA5W,EAAA,SAG1BnF,QAAQC,IAAGkF,EAAA4W,IAAQ,yBAAA5W,EAAAM,OAAA,GAAAT,EAAA,kBAEtB,kBAxBW,OAAA9I,EAAAyJ,MAAA,KAAAC,UAAA,KAoDc,SAAAwc,KASzB,OATyBA,IAAAvd,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAA1B,SAAAkX,IAAA,IAAAoG,EAAA,OAAAvd,EAAAA,EAAAA,KAAAI,MAAA,SAAAsX,GAAA,cAAAA,EAAApX,KAAAoX,EAAAnX,MAAA,cAAAmX,EAAApX,KAAA,EAAAoX,EAAAnX,KAAA,EAEyB6c,KAAS,KAAD,GAAvBG,EAAM7F,EAAAvH,OAEVvB,OAAOpD,KAAK+R,GACb7F,EAAAnX,KAAA,gBAAAmX,EAAApX,KAAA,EAAAoX,EAAAT,GAAAS,EAAA,SAEDxc,QAAQ2C,MAAM,yBAAwB6Z,EAAAT,IAAS,yBAAAS,EAAA/W,OAAA,GAAAwW,EAAA,mBAElDtW,MAAA,KAAAC,UAAA,EAWD/E,EAAAA,EAAAA,YAAU,WA7CRX,EAAAA,EAAAA,KAEI,wBACA,CACE2F,WAAY,EACZC,UAAW,IACXrC,SAAU,CAAC,SAAU,YACrBrC,OAAS,MAEX,CACEd,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD1B,OAAY9B,MAI9ByD,MAAK,SAACC,GACL,IAAIgC,EAAMhC,EAASJ,KAAKA,KAAKA,KAC7B2K,EAAevI,EACjB,IACCC,OAAM,SAACC,GACN3C,QAAQC,IAAI0C,EACd,GAyBJ,GAAG,KAEH9B,EAAAA,EAAAA,YAAU,WACRihB,IACF,GAAG,CAAChe,KAEJjD,EAAAA,EAAAA,YAAU,WACRihB,IACF,GAAG,CAAC7W,KAEJpK,EAAAA,EAAAA,YAAU,WACRihB,IACF,GAAG,CAAC3lB,IAGJ,IAAMmmB,IACJ7jB,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACU,QA3BkB,SAACgE,GACzBge,EAAW,CAAChe,EAAEgD,MACF,OAAThD,EAAEgD,KAAyB,cAAThD,EAAEgD,IACrB8E,EAAiB,EAAE9H,EAAEgD,MAErB8E,EAAiB,GAErB,EAoBoCqX,aAAczb,EAAQrJ,SAAA,EACtDD,EAAAA,EAAAA,KAACkB,EAAAA,EAAAA,KAAS,CAAAjB,SAAa,OAAP,QAChBgB,EAAAA,EAAAA,MAACC,EAAAA,EAAAA,QAAY,CAACvB,MAAM,UAASM,SAAA,EAC3BD,EAAAA,EAAAA,KAACkB,EAAAA,EAAAA,KAAS,CAAAjB,SAAoB,OAAd,cACfsN,EAAY/J,KAAI,SAACsE,GAChB,OAAO9H,EAAAA,EAAAA,KAACkB,EAAAA,EAAAA,KAAS,CAAAjB,SAAgB6H,EAAKxC,MAAfwC,EAAKxG,GAC9B,UAKN,OACEL,EAAAA,EAAAA,MAAAH,EAAAA,SAAA,CAAAb,SAAA,EACED,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAACgK,EAAAA,EAAW,CACVR,KAAMkS,EAAAA,EACN/b,MAAM,4CAGVK,EAAAA,EAAAA,KAAA,OAAKuB,UAAU,sCAAqCtB,UAClDgB,EAAAA,EAAAA,MAAA,OAAKM,UAAU,qDAAoDtB,SAAA,EACjED,EAAAA,EAAAA,KAACiK,EAAAA,EAAS,CAACJ,cAAeA,KAC1B7J,EAAAA,EAAAA,KAACglB,GAAAA,EAAQ,CAACC,QAASH,GAAYI,QAAS,CAAC,SAASjlB,UAChDgB,EAAAA,EAAAA,MAACkB,EAAAA,EAAM,CAACZ,UAAU,iCAAgCtB,SAAA,EAChDD,EAAAA,EAAAA,KAAA,OAAKuB,UAAU,OAAO8I,IAAK8a,GAAAA,EAAY5a,IAAI,eAAmB,gBAKlEtJ,EAAAA,EAAAA,MAACkB,EAAAA,EAAM,CAACP,QArEf,WAEyB,OAAAgjB,GAAAzc,MAAC,KAADC,UAAA,EAmEY7G,UAAU,iCAAgCtB,SAAA,EACtED,EAAAA,EAAAA,KAAA,OAAKuB,UAAU,OAAO8I,IAAKC,EAAAA,EAAYC,IAAI,eAAmB,kBAIpEvK,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAAC6D,EAAAA,EAAK,CACJqF,OAAQ,CACNC,EAAG,MAELzJ,QAASA,GACToE,WAAY8Q,EACZjP,SA9La,SAAC0D,GAChB7C,GAAS6C,EAAWC,UACtB/C,EAAQ8C,EAAWC,SACnB7C,GAAS4C,EAAWC,SAExB,QA8LF,EChZM0W,GAAY,SAACzC,GAAI,OACrB,IAAIpJ,SAAQ,SAACC,EAASC,GACpB,IAAM4L,EAAS,IAAIC,WACnBD,EAAOE,cAAc5C,GACrB0C,EAAO3H,OAAS,kBAAMlE,EAAQ6L,EAAOnF,OAAQ,EAC7CmF,EAAOG,QAAU,SAACjb,GAAK,OAAKkP,EAAOlP,EAAO,CAC5C,GAAG,EAsUL,OApUA,SAAsB0G,GACpB,IAAAoC,EAAeC,EAAAA,EAAAA,UAARtD,GAAsB5L,EAAAA,EAAAA,GAAAiP,EAAA,GAAlB,GACXpP,GAAsCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9CsP,EAAWpP,EAAA,GAAEqP,EAAcrP,EAAA,GAC5BmM,GAAUC,EAAAA,EAAAA,MAChBhM,GAAwCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA7CkP,EAAYjP,EAAA,GAAEgmB,EAAehmB,EAAA,GACpCoF,GAAwC1F,EAAAA,EAAAA,UAAS,IAAG2F,GAAAzF,EAAAA,EAAAA,GAAAwF,EAAA,GAA7C8J,EAAY7J,EAAA,GAAE4gB,EAAe5gB,EAAA,GACpCE,GAAgC7F,EAAAA,EAAAA,UAAS,IAAG8F,GAAA5F,EAAAA,EAAAA,GAAA2F,EAAA,GAArC4J,EAAQ3J,EAAA,GAAE4J,EAAW5J,EAAA,GAC5BoC,GAAsClI,EAAAA,EAAAA,UAAS,IAAGmI,GAAAjI,EAAAA,EAAAA,GAAAgI,EAAA,GAA3C+H,EAAW9H,EAAA,GAAE+H,EAAc/H,EAAA,GAClC4H,GAAwC/P,EAAAA,EAAAA,WAAS,GAAMgQ,GAAA9P,EAAAA,EAAAA,GAAA6P,EAAA,GAAhDS,EAAYR,EAAA,GAAES,EAAeT,EAAA,GAC9BvP,EAAMC,aAAaC,QAAQ,SAE3B4gB,EAAa,eAAA3hB,GAAA2I,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAO+V,GAAI,OAAAjW,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACd,GAAjBrF,QAAQC,IAAI8a,GACPA,EAAK3a,KAAQ2a,EAAKkD,QAAO,CAAA9Y,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EACPmY,GAAUzC,EAAK9K,eAAe,KAAD,EAAlD8K,EAAKkD,QAAO9Y,EAAA8P,KAAA,OAEd2N,EAAgB7H,EAAK3a,KAAO2a,EAAKkD,SAEjCrS,GAAe,GACfiX,EACE9H,EAAKjY,MAAQiY,EAAK3a,IAAI0iB,UAAU/H,EAAK3a,IAAI2iB,YAAY,KAAO,IAC5D,wBAAA5d,EAAAM,OAAA,GAAAT,EAAA,KACH,gBAXkBU,GAAA,OAAAxJ,EAAAyJ,MAAA,KAAAC,UAAA,KAyCbwH,GACJ3O,EAAAA,EAAAA,MAAA,OAAAhB,SAAA,EACED,EAAAA,EAAAA,KAAC6P,EAAAA,EAAY,KACb7P,EAAAA,EAAAA,KAAA,OACEO,MAAO,CACLuP,UAAW,EACX/D,MAAO,SACP9L,SACH,sBAoKL,OA5CAoD,EAAAA,EAAAA,YAAU,WACJwI,EAAMvK,IACRsJ,EAAKc,eAAe,CAClBpL,QAAQ,GAGd,GAAG,KAEH+C,EAAAA,EAAAA,YAAU,WACLwI,EAAMvK,IACPoB,EAAAA,EAAAA,KAEE,uBACA,CACEpB,GAAIuK,EAAMvK,IAEZ,CACEwB,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD1B,OAAY9B,MAI9ByD,MAAK,SAACC,GACL,IAAIgC,EAAMhC,EAASJ,KAAKA,KACxBL,QAAQC,IAAIwC,GACV2F,EAAKc,eAAe,CAClB8Z,WAAYvgB,EAAI3D,GAChB0H,MAAO/D,EAAI+D,MACX1D,KAAML,EAAIK,KACVwD,MAAO7D,EAAI6D,MACXxI,OAAuB,WAAf2E,EAAI3E,OACZ0Q,YAAgB,OAAH/L,QAAG,IAAHA,OAAG,EAAHA,EAAK+L,cAEjB/L,EAAI+L,aAAaxC,EAAY,CAAC,CAAC5L,IAAIqC,EAAI+L,eAC1CzB,EAA+B,WAAftK,EAAI3E,OAExB,IACC4E,OAAM,SAACC,GACN3C,QAAQC,IAAI0C,EACd,GAEJ,GAAG,CAAC0G,EAAMvK,MAGRL,EAAAA,EAAAA,MAAA,OAAAhB,SAAA,EACEgB,EAAAA,EAAAA,MAACiN,EAAAA,EAAI,CACHtD,KAAMA,EACNyG,SAAU,CACRC,KAAM,IAERC,WAAY,CACVD,KAAM,IAERE,OAAO,WAEPC,SA1KgB,SAAC7L,GAErBpD,QAAQC,IAAImD,EAAEtF,QACVuL,EAAMvK,GACRoB,EAAAA,EAAAA,KAEI,0BACA,CACEpB,GAAIuK,EAAMvK,GACVgE,KAAMM,EAAEN,KACR0L,YAAajC,EACb/F,MAAOpD,EAAEoD,MACTF,MAAO4I,OAAO9L,EAAEkD,OAChBxI,OAAQgP,EAAe,SAAW,YAEpC,CACExM,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD1B,OAAY9B,MAI9ByD,MAAK,SAACC,GACDA,EAASJ,KAAKU,SAIlBsI,EAAM4Z,SACN5Z,EAAM6Z,OAAO7Z,EAAMvK,IACnBuK,EAAM4Z,SACNjjB,QAAQC,IAAIoJ,EAAMvK,KANhBkE,EAAAA,GAAAA,KAAavC,EAASJ,KAAK+O,IAO/B,IACC1M,OAAM,SAACC,GACN3C,QAAQC,IAAI0C,EACd,IAGA0G,EAAMvK,GACRoB,EAAAA,EAAAA,KAEI,uBACA,CACEpB,GAAIuK,EAAMvK,GACVgE,KAAMM,EAAEN,KACR0L,YAAajC,EACb/F,MAAOpD,EAAEoD,MACTF,MAAO4I,OAAO9L,EAAEkD,OAChBxI,OAAQgP,EAAe,SAAS,YAElC,CACExM,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD1B,OAAY9B,MAI9ByD,MAAK,SAACC,GACDA,EAASJ,KAAKU,SAIlBsI,EAAM4Z,SACN5Z,EAAM6Z,OAAOziB,EAASJ,KAAKvB,KAJzBkE,EAAAA,GAAAA,KAAavC,EAASJ,KAAK+O,IAK/B,IACC1M,OAAM,SAACC,GACN3C,QAAQC,IAAI0C,EACd,IAEFzC,EAAAA,EAAAA,KAEI,uBACA,CACE4C,KAAMM,EAAEN,KACR0L,YAAajC,EACb/F,MAAOpD,EAAEoD,MACTF,MAAO4I,OAAO9L,EAAEkD,OAChBxI,OAAQgP,EAAe,SAAW,YAEpC,CACExM,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD1B,OAAY9B,MAI9ByD,MAAK,SAACC,GACLT,QAAQC,IAAIQ,GACRA,EAASJ,KAAKU,SAIlBsI,EAAM4Z,SACN5Z,EAAM6Z,OAAOziB,EAASJ,KAAKvB,KAJzBkE,EAAAA,GAAAA,KAAavC,EAASJ,KAAK+O,IAK/B,IACC1M,OAAM,SAACC,GACN3C,QAAQC,IAAI0C,EACd,GAGN,EAuE8BlF,SAAA,EAExBgB,EAAAA,EAAAA,MAAC4Q,EAAAA,EAAI,CAACtQ,UAAU,OAAMtB,SAAA,EACpBgB,EAAAA,EAAAA,MAAC6Q,EAAAA,EAAG,CAACC,MAAM,SAAQ9R,SAAA,EACjBgB,EAAAA,EAAAA,MAAC+Q,EAAAA,EAAG,CAACV,KAAM,GAAGrR,SAAA,EACZD,EAAAA,EAAAA,KAACkO,EAAAA,EAAAA,KAAS,CAAC5I,KAAK,cAAarF,UAC3BD,EAAAA,EAAAA,KAACiS,EAAAA,EACC,CACAC,SAAS,eACT3D,SAAUA,EACVkT,UAAWpB,EACX1a,SAhOK,SAAHyB,GAAmC,IAAnBgL,EAAWhL,EAArBmH,SACtBC,EAAY4D,GACZ5P,QAAQC,IAAI2P,GACZ,IAAMC,EAAW,IAAIC,SAClBF,EAAY,GAAGxP,IAChBoM,EAAeoD,EAAY,GAAGxP,MAGhCyP,EAASG,OAAO,OAAQJ,EAAY,GAAGK,gBACvC/P,EAAAA,EAAAA,GAAM,CACJC,OAAQ,OACRC,IAAK,0BACLC,KAAMwP,EACNvP,QAAS,CACP,eAAe,sBACfC,cAAc,UAAD1B,OAAY9B,MAG1ByD,MAAK,SAAUC,GACdT,QAAQC,IAAIQ,GACRA,EAASJ,KAAKU,SAChByL,EAAe/L,EAASJ,KAAKD,IAGjC,IACCsC,OAAM,SAAUC,GACf3C,QAAQC,IAAI0C,EACd,IACJ,EAqMgBwN,aAAc,WACZ,OAAO,CACT,EAAE1S,SAEDsO,EAASgE,QAAU,EAAI,KAAO3C,OAInC5P,EAAAA,EAAAA,KAACkO,EAAAA,EAAAA,KAAS,CAAC5I,KAAK,aAAa6E,MAAM,cAAalK,UAC9CD,EAAAA,EAAAA,KAACkE,EAAAA,EAAK,CAACiX,UAAQ,OAEjBnb,EAAAA,EAAAA,KAACkO,EAAAA,EAAAA,KAAS,CAAC5I,KAAK,QAAQ6E,MAAM,WAAW2J,MAAO,CAAC,CAAEC,UAAU,EAAM1R,KAAM,QAASmD,QAAS,sCAAuCvF,UAChID,EAAAA,EAAAA,KAACkE,EAAAA,EAAK,UAGVjD,EAAAA,EAAAA,MAAC+Q,EAAAA,EAAG,CAACV,KAAM,GAAGrR,SAAA,EACZD,EAAAA,EAAAA,KAACkO,EAAAA,EAAAA,KAAS,CAAC5I,KAAK,OAAO6E,MAAM,eAAe2J,MAAO,CAAC,CAAEC,UAAU,EAAMvO,QAAS,+BAAgCvF,UAC7GD,EAAAA,EAAAA,KAACkE,EAAAA,EAAK,OAERlE,EAAAA,EAAAA,KAACkO,EAAAA,EAAAA,KAAS,CAAC5I,KAAK,QAAQ6E,MAAM,eAAe2J,MAAO,CAAC,CAAEC,UAAU,EAAMvO,QAAS,yCAChF,CACEA,QAAS,0CACTwO,UAAW,SAAClU,EAAGgG,GACb,MAAI,WAAWmO,KAAKnO,GACXqO,QAAQC,UAERD,QAAQE,OAAO,oBAE1B,IACCpU,UACDD,EAAAA,EAAAA,KAACkE,EAAAA,EAAK,CAAC3D,MAAO,CAAEwL,MAAO,QAAUuI,UAAW,aAIlDtU,EAAAA,EAAAA,KAAC8R,EAAAA,EAAG,CAACC,MAAM,SAAQ9R,UACjBD,EAAAA,EAAAA,KAACgS,EAAAA,EAAG,CAACV,KAAM,GAAGrR,UACZgB,EAAAA,EAAAA,MAACiN,EAAAA,EAAAA,KAAS,CAAC5I,KAAK,SAAS6E,MAAM,SAAS5J,MAAO,CAACgU,aAAc,SAAStU,SAAA,CACpEqP,EAAe,SAAS,YAAWtP,EAAAA,EAAAA,KAACwU,EAAAA,EAAM,CAACC,QAASnF,EAAc1N,QA/GtD,SAAC6S,GAC1B,IAAInU,EAASsK,EAAKwG,gBAAgB9Q,OAClCiP,EAAgBkF,GAChBjS,QAAQC,IAAInC,EACd,EA2G8GiB,UAAU,oBAKlHN,EAAAA,EAAAA,MAACiN,EAAAA,EAAAA,KAAS,CAAC3M,UAAS,gCAAkCtB,SAAA,EACpDD,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,CAACP,QAASsJ,EAAQyG,OAAO1R,SAAC,UACjCD,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,CACLP,QAAS,kBAAMgJ,EAAK8J,aAAa,EACjCnT,UAAU,OAAMtB,SACjB,eAIDD,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,CAACE,KAAK,UAAUsS,SAAS,SAAQ1U,SAAC,gBAK7CD,EAAAA,EAAAA,KAAC+B,EAAAA,EAAK,CACJC,QAASmM,EACTxO,MAAO2O,EACPpM,OAAQ,KACRmD,SA1Se,WAAH,OAAS+I,GAAe,EAAO,EA0SpBnO,UAGvBD,EAAAA,EAAAA,KAAA,OACAuB,UAAU,QACRgJ,IAAI,UACJhK,MAAO,CACLwL,MAAO,QAET1B,IAAKgE,QAKf,ECgWA,OAxqBA,SAAwBxC,GACtB,IAAAhN,GAAwCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/Cua,EAAYra,EAAA,GAAEuO,EAAevO,EAAA,GACpCI,GAAsBL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA7BwmB,EAAGvmB,EAAA,GAAEwmB,EAAMxmB,EAAA,GAClBoF,GAAkC1F,EAAAA,EAAAA,UAAS,MAAK2F,GAAAzF,EAAAA,EAAAA,GAAAwF,EAAA,GAAzCqhB,EAASphB,EAAA,GAAEqhB,EAAYrhB,EAAA,GAI9BE,GAAsC7F,EAAAA,EAAAA,UAAS,MAAK8F,GAAA5F,EAAAA,EAAAA,GAAA2F,EAAA,GACpDqC,GADkBpC,EAAA,GAAgBA,EAAA,IACE9F,EAAAA,EAAAA,UAAS,OAAKmI,GAAAjI,EAAAA,EAAAA,GAAAgI,EAAA,GAClD6H,GADiB5H,EAAA,GAAeA,EAAA,IACMnI,EAAAA,EAAAA,UAAS,OAAKgQ,GAAA9P,EAAAA,EAAAA,GAAA6P,EAAA,GACpDI,GADkBH,EAAA,GAAgBA,EAAA,IACMhQ,EAAAA,EAAAA,WAAS,IAAMoQ,GAAAlQ,EAAAA,EAAAA,GAAAiQ,EAAA,GAAhDK,EAAYJ,EAAA,GAAEK,EAAeL,EAAA,GACpCE,GAAgCtQ,EAAAA,EAAAA,UAAS,IAAGuQ,GAAArQ,EAAAA,EAAAA,GAAAoQ,EAAA,GAArCvE,EAAQwE,EAAA,GAAEiK,EAAWjK,EAAA,GAC5BG,GAA4C1Q,EAAAA,EAAAA,UAAS,IAAG2Q,GAAAzQ,EAAAA,EAAAA,GAAAwQ,EAAA,GAAjD1E,EAAc2E,EAAA,GAAE8J,EAAiB9J,EAAA,GAExCxB,EAAeC,EAAAA,EAAAA,UAARtD,GAAsB5L,EAAAA,EAAAA,GAAAiP,EAAA,GAAlB,GACL/C,GAAUC,EAAAA,EAAAA,MACVvH,GAAS6V,EAAAA,EAAAA,MAAc7V,OACvBiK,EAAU,IAAI6L,gBAAgB9V,GAAQ+V,IAAI,WAE1Cpa,EAAMC,aAAaC,QAAQ,SAgD3BsmB,EAAU,WACd,IAAIngB,EAAIgF,EAAKob,iBAEb,GADAxjB,QAAQC,IAAI2W,EAAcvN,EAAMvK,GAAIuM,GAChCuL,GAAgBvL,EAkDlB,OAjDArL,QAAQC,IAAI,eACZC,EAAAA,EAAAA,KAEI,mCAaA,CACEpB,GAAI8X,GAA8BvL,EAClCzC,eAAgBya,EAChBvgB,KAAMM,EAAEN,KACRgH,aAAc,GACdD,cAAe,GACfmO,aAAc,GACdpO,YAAa,GACbG,YAAa,GACbC,QAAS,GACTjB,QAAS3F,EAAE2F,QACXjL,OAAQgP,EAAe,SAAS,YAElC,CACExM,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD1B,OAAY9B,MAI9ByD,MAAK,SAACC,GACLT,QAAQC,IAAIQ,GACZ2iB,GAAOD,GACPrY,EAAgB,MAChB1C,EAAK8J,cACD7G,GAEF3C,EAAQyG,QAEZ,IACCzM,OAAM,SAACC,GACN3C,QAAQC,IAAI0C,EACd,IAGJ,GAAI0G,EAAMvK,GAAI,CACZ,IAAM2kB,EAASpa,EAAMvK,GACrBkB,QAAQC,IAAIwjB,GACZvjB,EAAAA,EAAAA,KAEI,gCACA,CACE0I,eAAgB6a,EAChB3gB,KAAMM,EAAEN,KACRgH,aAAc1G,EAAE0G,aAChBD,cAAezG,EAAEyG,cACjBmO,aAAc5U,EAAE4U,aAChBpO,YAAaxG,EAAEwG,YACfG,YAAa3G,EAAE2G,YACfC,QAAS5G,EAAE4G,QACXlM,OAAQgP,EAAe,SAAS,YAElC,CACExM,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD1B,OAAY9B,MAI9ByD,MAAK,SAACC,GACLT,QAAQC,IAAIQ,GACZ2iB,GAAOD,GACP/a,EAAK8J,aACP,IACCxP,OAAM,SAACC,GACN3C,QAAQC,IAAI0C,EACd,GACJ,MACEzC,EAAAA,EAAAA,KAEI,gCACA,CACE0I,eAAgBS,EAAMqa,IACtB5gB,KAAMM,EAAEN,KACRgH,aAAc1G,EAAE0G,aAChBD,cAAezG,EAAEyG,cACjBmO,aAAc5U,EAAE4U,aAChBpO,YAAaxG,EAAEwG,YACfG,YAAa3G,EAAE2G,YACfC,QAAS5G,EAAE4G,QACXlM,OAAQgP,EAAe,SAAS,YAElC,CACExM,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD1B,OAAY9B,MAI9ByD,MAAK,SAACC,GACLT,QAAQC,IAAIQ,GACZ2iB,GAAOD,GACP/a,EAAK8J,aACP,IACCxP,OAAM,SAACC,GACN3C,QAAQC,IAAI0C,EACd,GAIN,GAMA9B,EAAAA,EAAAA,YAAU,WAmCJwK,EACFnL,EAAAA,EAAAA,KAEI,gCACA,CACEpB,GAAIuM,GAEN,CACE/K,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD1B,OAAY9B,MAI9ByD,MAAK,SAACC,GACL,IAAM2C,EAAI3C,EAASJ,KAAKA,KACxBL,QAAQC,IAAI,IAAKmD,GACjBkgB,EAAalgB,EAAEwF,gBAWf5I,QAAQC,IAAImD,EAAE2F,SACFT,EAAe/C,MAAK,SAAC5E,GAAI,OAAKA,EAAKsI,mBAAqB7F,EAAE2F,OAAO,IAC7E/I,QAAQC,IAAIqI,GACZF,EAAKc,eAAe,CAClBpG,KAAMM,EAAEN,KACRiG,QAAS3F,EAAE2F,QACXI,WAAY/F,EAAE2F,UAEhBgE,EAA6B,WAAb3J,EAAEtF,OAEpB,IACC4E,OAAM,SAACC,GACN3C,QAAQC,IAAI0C,EACd,IAGJzC,EAAAA,EAAAA,KAEI,gCACA,CACEpB,GAAI8X,GAEN,CACEtW,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD1B,OAAY9B,MAI9ByD,MAAK,SAACC,GACL,IAAM2C,EAAI3C,EAASJ,KAAKA,KAYZiI,EAAe/C,MAAK,SAAC5E,GAAI,OAAKA,EAAKsI,kBAAoB7F,EAAE2F,OAAO,IAC5EX,EAAKc,eAAe,CAClBpG,KAAMM,EAAEN,KACRiG,QAAS3F,EAAE2F,QACXI,WAAY/F,EAAE2F,UAEhBgE,EAA6B,WAAb3J,EAAEtF,OACpB,IACC4E,OAAM,SAACC,GACN3C,QAAQC,IAAI0C,EACd,GAEJ,GAAG,CAACiU,IAEJ,IAAArJ,IAA0BjR,EAAAA,EAAAA,UAAS,IAAGkR,IAAAhR,EAAAA,EAAAA,GAAA+Q,GAAA,GAA/BjK,GAAKkK,GAAA,GACZmW,IADsBnW,GAAA,IACoBlR,EAAAA,EAAAA,UAAS,KAAGsnB,IAAApnB,EAAAA,EAAAA,GAAAmnB,GAAA,GACtDE,IADoBD,GAAA,GAAkBA,GAAA,IACRtnB,EAAAA,EAAAA,UAAS,KAAGwnB,IAAAtnB,EAAAA,EAAAA,GAAAqnB,GAAA,GAA1BE,IAAFD,GAAA,GAAYA,GAAA,IAwJ1B,OA5FAjjB,EAAAA,EAAAA,YAAU,WAtDY,IAACif,IAuDRxc,GAtDbpD,EAAAA,EAAAA,KAEI,mBACA,CACE8jB,SAAUlE,GAEZ,CACExf,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD1B,OAAY9B,MAI9ByD,MAAK,SAACC,GAEL,GAAIA,EAASJ,KAAKU,QAAS,CACzB,IAAIuX,EAAS7X,EAASJ,KAAK4jB,QAC3B3L,EAASA,EAAO5X,QAAO,SAAA4E,GAAI,OAAIA,EAAK4e,QAAyC,OAA9B5e,EAAK4e,OAAQC,aAAsB,IAClFJ,GAAWzL,EACb,CACF,IACC5V,OAAM,SAACC,GACN3C,QAAQC,IAAI0C,EACd,IAgCH3C,QAAQC,IAAIqD,GACb,GAAG,CAACA,MAwEJzC,EAAAA,EAAAA,YAAU,WACRb,QAAQC,IAAIoJ,EAAMqa,KAClB1jB,QAAQC,IAAIoJ,EAAMvK,IAClBwkB,GAAcja,EAAMqa,KACjBra,EAAMvK,IAAIwkB,GAAcja,EAAMvK,IAzEjCoB,EAAAA,EAAAA,KAEI,gCACA,CACEkB,OAAQ,IAEV,CACEd,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD1B,OAAY9B,MAI9ByD,MAAK,SAACC,GAEL,GAAIA,EAASJ,KAAKU,QAAS,CACzB,IAAIuX,EAAS7X,EAASJ,KAAKkY,gBAE3BxB,EAAkBuB,GAClBtY,QAAQC,IAAIqI,EAMd,CACF,IACC5F,OAAM,SAACC,GACN3C,QAAQC,IAAI0C,EACd,IAIFzC,EAAAA,EAAAA,KAEI,uBACA,CACEkB,OAAQ,IAEV,CACEd,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD1B,OAAY9B,MAI9ByD,MAAK,SAACC,GACL,GAAIA,EAASJ,KAAKU,QAAS,CACzB,IAAIuX,EAAS7X,EAASJ,KAAKmY,YAC3BF,EAASA,EAAO5X,QAAO,SAAA4E,GAAI,OAAwB,MAApBA,EAAKmT,WAAmB,IACvD3B,EAAYwB,EACd,CACF,IACC5V,OAAM,SAACC,GACN3C,QAAQC,IAAI0C,EACd,GA0BJ,GAAG,KAMDlE,EAAAA,EAAAA,MAAA,OAAAhB,SAAA,EAgHEgB,EAAAA,EAAAA,MAACiN,EAAAA,EAAI,CACHtD,KAAMA,EACNyG,SAAU,CACRC,KAAM,IAERC,WAAY,CACVD,KAAM,IAERE,OAAO,WAEPC,SAvjBgB,SAAC7L,GACrBiG,EAAM4Z,SAEN/iB,EAAAA,EAAAA,KAEI,gCAYA,CACE0I,eAAgBya,EAChBvgB,KAAMM,EAAEN,KACRgH,aAAc,GACdD,cAAe,GACfmO,aAAc,GACdpO,YAAa,GACbG,YAAa,GACbC,QAAS,GACTjB,QAAS3F,EAAE2F,QACXjL,OAAQgP,EAAe,SAAS,YAElC,CACExM,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD1B,OAAY9B,MAI9ByD,MAAK,SAACC,GACLT,QAAQC,IAAIQ,GACZ2H,EAAK8J,aACP,IACCxP,OAAM,SAACC,GACN3C,QAAQC,IAAI0C,EACd,GACJ,EA4gB8BlF,SAAA,EAExBgB,EAAAA,EAAAA,MAAC4Q,EAAAA,EAAI,CAACtQ,UAAU,OAAMtB,SAAA,EACpBD,EAAAA,EAAAA,KAAA,KAAGuB,UAAU,qCAAoCtB,SAAC,sBAClDgB,EAAAA,EAAAA,MAAC6Q,EAAAA,EAAG,CAACC,MAAM,SAAQ9R,SAAA,EACjBD,EAAAA,EAAAA,KAACgS,EAAAA,EAAG,CAACV,KAAM,GAAGrR,UACZD,EAAAA,EAAAA,KAACkO,EAAAA,EAAAA,KAAS,CAAC5I,KAAK,OAAO6E,MAAM,WAAW2J,MAAO,CAAC,CAAEC,UAAU,EAAMvO,QAAS,gCAAiCvF,UAC5GD,EAAAA,EAAAA,KAAC8N,EAAAA,EAAM,CAAC8Y,SA9JO,SAACzN,GAC1B,IAAI7N,EAAaT,EAAS9C,MAAK,SAACnC,GAAC,OAAKA,EAAEN,MAAQ6T,CAAK,IACrD,GAAG7N,EAAY,CACb,IAAIE,EAAWV,EAAe/C,MAAK,SAAAnC,GAAC,OAAIA,EAAEtE,IAAMgK,EAAW2P,WAAW,IACxErQ,EAAKc,eAAe,CAClBC,WAAYH,EAASI,cACrBL,QAASC,EAASC,kBAEpB,CACF,EAqJiDxL,SAChC4K,EAASrH,KAAI,SAACL,EAAMQ,GACnB,OACE3D,EAAAA,EAAAA,KAAC8N,EAAAA,EAAAA,OAAa,CAAiBhI,MAAO3C,EAAKmC,KAAKrF,SAC7CkD,EAAKmC,MADYnC,EAAKmC,KAI7B,WAINtF,EAAAA,EAAAA,KAACgS,EAAAA,EAAG,CAACV,KAAM,GAAGrR,UACZD,EAAAA,EAAAA,KAACkO,EAAAA,EAAAA,KAAS,CAAC5I,KAAK,aAAa6E,MAAM,sBAAqBlK,UACxDD,EAAAA,EAAAA,KAAC8N,EAAAA,EAAM,CAACqN,UAAU,EAAKlb,SAClB6K,EAAetH,KAAI,SAACL,EAAMQ,GACzB,OACE3D,EAAAA,EAAAA,KAAC8N,EAAAA,EAAAA,OAAa,CAAahI,MAAO3C,EAAKsI,iBAAiBxL,SACrDkD,EAAKyI,eADYjI,EAIxB,cAKR3D,EAAAA,EAAAA,KAAC8R,EAAAA,EAAG,CAACC,MAAM,SAAQ9R,UACjBD,EAAAA,EAAAA,KAACgS,EAAAA,EAAG,CAACV,KAAM,GAAGrR,UACdD,EAAAA,EAAAA,KAACkO,EAAAA,EAAAA,KAAS,CAAC5I,KAAK,UAAU6E,MAAM,mBAAkBlK,UAC9CD,EAAAA,EAAAA,KAACkE,EAAAA,EAAK,CAACiX,UAAQ,WAIrBnb,EAAAA,EAAAA,KAAC8R,EAAAA,EAAG,CAACC,MAAM,SAAQ9R,UACjBD,EAAAA,EAAAA,KAACgS,EAAAA,EAAG,CAACV,KAAM,GAAGrR,UACZgB,EAAAA,EAAAA,MAACiN,EAAAA,EAAAA,KAAS,CAAC5I,KAAK,SAAS6E,MAAM,SAAS5J,MAAO,CAACgU,aAAc,SAAStU,SAAA,CACtEqP,EAAe,SAAS,YAAWtP,EAAAA,EAAAA,KAACwU,EAAAA,EAAM,CAACC,QAASnF,EAAc1N,QAxQpD,SAAC6S,GAC1B,IAAInU,EAASsK,EAAKwG,gBAAgB9Q,OAClCiP,EAAgBkF,GAChBjS,QAAQC,IAAInC,EACd,EAoQ4GiB,UAAU,oBAK9GsM,IAAW7N,EAAAA,EAAAA,KAAC6R,EAAAA,EAAI,CAACtQ,UAAU,OAAMtB,UACjCgB,EAAAA,EAAAA,MAACkB,EAAAA,EAAM,CACLsT,OAAK,EACLpT,KAAK,SACLd,UAAU,6DACVK,QAASmkB,EAAQ9lB,SAAA,EAEjBD,EAAAA,EAAAA,KAACwB,EAAAA,EAAI,CAACC,UAAWiU,EAAAA,MACjB1V,EAAAA,EAAAA,KAAC2V,GAAAA,EAAK,CAACC,MAAO,EAAGrU,UAAU,OAAOslB,MAAI,EAACtmB,MAAO,CAAEC,MAAO,WAAYP,SAAC,2BAKxEgB,EAAAA,EAAAA,MAACiN,EAAAA,EAAAA,KAAS,CAAC3M,UAAS,gCAAkCtB,SAAA,CAClD4N,GACF7N,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,CAACP,QA9cH,WACXsJ,EAAQyG,QACV,EA4c8B1R,SAAC,UADXD,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,CAACP,QAASiK,EAAMib,MAAM7mB,SAAC,UAE1CD,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,CACLP,QAAS,kBAAMgJ,EAAK8J,aAAa,EACjCnT,UAAU,OAAMtB,SACjB,cAIC4N,GAGA7N,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,CAACP,QAASmkB,EAAS1jB,KAAK,UAAUsS,SAAS,SAAQ1U,SAAC,UAHjDD,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,CAACE,KAAK,UAAUsS,SAAS,SAAQ1U,SAAC,gBAUvD4N,IAAW7N,EAAAA,EAAAA,KAAA,OAAAC,SACV4L,EAAMvK,IAAKtB,EAAAA,EAAAA,KAACgO,EAAY,CAAC1M,GAAIuK,EAAMvK,GAAIqkB,IAAKA,EAAKrY,gBAAiBA,KACjEtN,EAAAA,EAAAA,KAACgO,EAAY,CAAC1M,GAAIuK,EAAMqa,IAAKP,IAAKA,EAAKrY,gBAAiBA,QAOlE,ECjqBIzK,GAAO,GAqTX,OAnSA,SAAuBgJ,GACrB,IAAAhN,GAAgCC,EAAAA,EAAAA,UAAS+D,IAAK9D,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvC+V,EAAQ7V,EAAA,GAAE8V,EAAW9V,EAAA,GACtBQ,EAAMC,aAAaC,QAAQ,SACjCN,GAA8CL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAtDE,EAAeD,EAAA,GAAEE,EAAkBF,EAAA,GAEpCgD,EAAe,WACnB9C,GAAmB,EACrB,EA4BMI,EAAU,CACd,CACEC,MAAO,QACPC,UAAW,MACXC,OAAQ,SAACiI,GACP,OACE9H,EAAAA,EAAAA,KAAA,OAAKuB,UAAU,4BAA2BtB,UACvC6H,EAAO,GAGd,GAEF,CACEnI,MAAO,UACPC,UAAW,UAEb,CACED,MAAO,GACPC,UAAW,MACXC,OAAQ,SAACiI,GACP,IAAQ+E,EAAgB/E,EAAhB+E,MAAgB/E,EAATxC,KACf,OACEtF,EAAAA,EAAAA,KAAA,OAAKuB,UAAU,4BAA2BtB,UACzCD,EAAAA,EAAAA,KAAC6jB,GAAAA,EAAM,CAACxZ,IAAKwC,KAIlB,GAEF,CACElN,MAAO,YACPC,UAAW,YAEb,CACED,MAAO,SACPC,UAAW,UAEb,CACED,MAAO,cACPC,UAAW,eAGb,CACED,MAAO,gBACPC,UAAW,gBAEb,CACED,MAAO,WACPC,UAAW,WAEb,CACED,MAAO,YACPC,UAAW,UACXC,OAAQ,SAACiI,GACPtF,QAAQC,IAAIqF,GACZ,IACoBgc,EADhBC,EAAM,GAAEC,GAAAC,EAAAA,GAAAA,GACInc,GAAI,IAApB,IAAAkc,EAAAE,MAAAJ,EAAAE,EAAAG,KAAAC,MAAsB,CAAC,IAAfvhB,EAAIihB,EAAAhe,MACPie,EAAIxR,OAAS,IAAGwR,GAAO,MAC1BA,GAAO,GAAGlhB,CACZ,CAAC,OAAAO,GAAA4gB,EAAApe,EAAAxC,EAAA,SAAA4gB,EAAAK,GAAA,CACD,OACErkB,EAAAA,EAAAA,KAAA,OAAAC,SAAM8jB,GAEV,GAEF,CACEpkB,MAAO,SACPC,UAAW,UAEb,CACED,MAAO,SAEPE,OAAQ,SAACC,EAAEC,GACT,OACEC,EAAAA,EAAAA,KAAAc,EAAAA,SAAA,CAAAb,UACED,EAAAA,EAAAA,KAACe,EAAAA,EAAgB,CACfC,MACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAAAjB,SAAA,EACHD,EAAAA,EAAAA,KAACkB,EAAAA,EAAAA,KAAS,CAAAjB,UACRgB,EAAAA,EAAAA,MAACE,EAAAA,GAAI,CACHC,GAAE,iEAAAC,OAAmEtB,EAAOgV,QAC5ExT,UAAU,4BAA2BtB,SAAA,EAErCD,EAAAA,EAAAA,KAACwB,EAAAA,EAAI,CAACD,UAAU,OAAOE,UAAWE,EAAAA,KAAY,aAIlD3B,EAAAA,EAAAA,KAACkB,EAAAA,EAAAA,KAAS,CACRU,QAAS,WA3FzBtC,GAAmB,EA6FH,EAAEW,UAEFgB,EAAAA,EAAAA,MAAA,QAAMM,UAAU,4BAA2BtB,SAAA,EACzCD,EAAAA,EAAAA,KAACwB,EAAAA,EAAI,CAACD,UAAU,OAAOE,UAAWK,EAAAA,KAAc,eAKpD9B,EAAAA,EAAAA,KAAC+B,EAAAA,EAAK,CACJC,QAAS3C,EACTgG,SAAUjD,EACVH,UAAQ,EACRC,OAAQ,EACNlC,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,CAEL5B,MAAO,CAAEC,MAAO,WAChBoB,QAASQ,EACTb,UAAU,mBAAkBtB,SAC7B,cAJM,WAOPD,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,CAELE,KAAK,UACLd,UAAU,mBACVK,QAAS,kBA7IboT,EA6I0BjV,EAAOuB,GA5IjDkB,QAAQC,IAAIuS,GACZ1V,GAAmB,QACnBoD,EAAAA,EAAAA,KAEI,gCACA,CACEpB,GAAI0T,IAGPhS,MAAK,SAACC,GACL,IAAIgC,EAAMhC,EAASJ,KACnBL,QAAQC,IAAIwC,GACTA,EAAI1B,SACL+gB,GAEJ,IACCpf,OAAM,SAACC,GACN3C,QAAQC,IAAI0C,EACd,IAnBa,IAAC6P,CA6IoC,EAAC/U,SAClC,gBAJM,YAOPA,UAEFD,EAAAA,EAAAA,KAAA,OACEO,MAAO,CAAEC,MAAO,WAChBe,UAAU,kCAAiCtB,SAC5C,gEASf,IAIJuE,GAA8C1F,EAAAA,EAAAA,UAAS,IAAG2F,GAAAzF,EAAAA,EAAAA,GAAAwF,EAAA,GAC1DG,GADsBF,EAAA,GAAoBA,EAAA,IAClB3F,EAAAA,EAAAA,UAAS,IAAE8F,GAAA5F,EAAAA,EAAAA,GAAA2F,EAAA,GAA5B2B,EAAI1B,EAAA,GAAE2B,EAAO3B,EAAA,GACpBoC,GAA0BlI,EAAAA,EAAAA,UAAS,GAAEmI,GAAAjI,EAAAA,EAAAA,GAAAgI,EAAA,GAA9BR,EAAKS,EAAA,GAAER,EAAQQ,EAAA,GACtB4H,GAAgD/P,EAAAA,EAAAA,WAAS,GAAMgQ,GAAA9P,EAAAA,EAAAA,GAAA6P,EAAA,GAAxDoB,EAAgBnB,EAAA,GAAEoB,EAAmBpB,EAAA,GACtC5D,GAAUC,EAAAA,EAAAA,MACV8W,EAAU,eAAAvjB,GAAA2I,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,OAAAF,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACjBqI,GAAoB,GACpBlI,YAAW,WACTkI,GAAoB,GACpBhF,EAAQG,KAAK,6CACf,GAAG,KAAM,wBAAA1D,EAAAM,OAAA,GAAAT,EAAA,KACV,kBANe,OAAA9I,EAAAyJ,MAAA,KAAAC,UAAA,KAwBVkc,EAAW,WACf5hB,EAAAA,EAAAA,KAEI,6BACA,CACE2F,WAAY/B,EACZgC,UAAW,GACXhF,YAAauI,EAAMvK,IAGrB,CACEwB,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD1B,OAAY9B,MAI9ByD,MAAK,SAACC,GACL,IAAIgC,EAAMhC,EAASJ,KAAKA,KAAKA,KAEzB0F,EAAQtD,EAAIzB,KAAI,SAACL,EAAMM,GACzB,MAAO,CACLmF,IAAKnF,EACLsR,OAAQ5R,EAAK7B,GACbgP,SAAUnN,EAAKmC,KACfwL,QAAQ9Q,EAAAA,EAAAA,KAACwB,EAAAA,EAAI,CAACC,UAA2B,SAAhB0B,EAAK2N,OAAoBoE,EAAAA,GAAUC,EAAAA,KAC5DvE,YACuB,UAArBzN,EAAKyN,aAA0B5Q,EAAAA,EAAAA,KAACoV,GAAAA,GAAE,CAACzV,MAAM,KAAK4B,UAAU,gBACjC,cAArB4B,EAAKyN,aAA8B5Q,EAAAA,EAAAA,KAACqV,GAAAA,GAAE,CAAC1V,MAAM,KAAK4B,UAAU,iBAC5DvB,EAAAA,EAAAA,KAACsV,GAAAA,GAAE,CAAC3V,MAAM,KAAK4B,UAAU,gBAE7BqL,IAAK,CAAEC,MAAO1J,EAAK6N,YAAa1L,KAAMnC,EAAKmC,MAC3CiQ,aAAcpS,EAAK2F,MACnBC,QAAS5F,EAAK6F,MACdkD,QAAS/I,EAAK4N,UACdzQ,OAAQ6C,EAAK7C,OAEjB,IACAkC,QAAQC,IAAIwC,GACZ4P,EAAYD,EAASvT,OAAOkH,GAC9B,IACCrD,OAAM,SAACC,GACN3C,QAAQC,IAAI0C,EACd,GACJ,EAMA,OAJA9B,EAAAA,EAAAA,YAAU,WACRihB,GACF,GAAG,CAAChe,KAGFrF,EAAAA,EAAAA,MAAAH,EAAAA,SAAA,CAAAb,SAAA,EACED,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAAC6D,EAAAA,EAAK,CACJqF,OAAQ,CACNC,EAAG,MAGLzJ,QAASA,EACToE,WAAY8Q,EACZjP,SAnEa,SAAC0D,GAChB7C,GAAS6C,EAAWC,UACtB/C,EAAQ8C,EAAWC,SACnB7C,EAAS4C,EAAWC,SAExB,OAkEIrI,EAAAA,EAAAA,MAAA,OAAKM,UAAS,gDAAkDtB,SAAA,EAC9DD,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,CAACZ,UAAU,OAAOK,QAASiK,EAAMib,MAAM7mB,SAAC,UAE/CD,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,CAACE,KAAK,UAAUsS,SAAS,SAAS/S,QAASqgB,EAAWhiB,SAAC,aAKhED,EAAAA,EAAAA,KAAC+B,EAAAA,EAAK,CACJE,UAAQ,EACRD,QAASiO,EACT/N,OAAQ,CAAC,MACTmD,SAAU,WACR6K,GAAoB,EACtB,EAAEjQ,UAEFD,EAAAA,EAAAA,KAACuJ,EAAAA,EAAa,CACZC,KAAMC,EAAAA,GACN9J,MAAM,+BACN+J,KAAK,yCAKf,EC7SM0R,GAAO,CACX,CACEzb,MAAO,gBACP6J,KAAM6R,EAAAA,GACNC,WAAYC,EAAAA,IAEd,CACE5b,MAAO,mBACP6J,KAAMgS,EAAAA,GACNF,WAAYG,EAAAA,IAEd,CACE9b,MAAO,iBACP6J,KAAMkS,EAAAA,GACNJ,WAAYI,EAAAA,KAiIhB,OA7HA,WACE,IAAM/M,GAAQC,EAAAA,EAAAA,MACd/P,GAAsBC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BqnB,EAAGnnB,EAAA,GAAE2mB,EAAM3mB,EAAA,GAElBI,GAA0CL,EAAAA,EAAAA,UAAS,KAAIM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAhD6c,EAAa5c,EAAA,GAAE6c,EAAgB7c,EAAA,GAKhC2nB,EAAc,YACb/K,EAAgB,GAGnBC,IAFgBD,EAAgB,GAER1I,WAE5B,EACM0T,EAAa,YACZhL,GAAiB,GAGpBC,IAFgBD,EAAgB,GAER1I,WAE5B,EAEMkJ,EAAU,EACdxc,EAAAA,EAAAA,KAACinB,GAAY,CAACxB,OAAQsB,EAAarB,OAAQA,EAAQpkB,GAAIqN,EAAMrN,MAC7DtB,EAAAA,EAAAA,KAACknB,GAAc,CAACJ,MAAOE,EAAYvB,OAAQsB,EAAab,IAAKA,EAAK5kB,GAAIqN,EAAMrN,MAC5EtB,EAAAA,EAAAA,KAAC0c,GAAa,CAACoK,MAAOE,EAAYvB,OAAQsB,EAAab,IAAKA,EAAK5kB,GAAIqN,EAAMrN,MAGvEub,GACJ7c,EAAAA,EAAAA,KAACmB,EAAAA,GAAI,CAACC,GAAE,oEAAAC,OAAsEsN,EAAMrN,IAAKrB,UACvFgB,EAAAA,EAAAA,MAACkB,EAAAA,EAAM,CAACZ,UAAU,4BAA4Bc,KAAK,UAAUqD,KAAK,QAAOzF,SAAA,EACvED,EAAAA,EAAAA,KAAA,OAAKuB,UAAU,OAAO8I,IAAKG,EAAAA,EAAUD,IAAI,aAAiB,eAMhE/F,GAA8C1F,EAAAA,EAAAA,WAAS,GAAM2F,GAAAzF,EAAAA,EAAAA,GAAAwF,EAAA,GAAtD2iB,EAAe1iB,EAAA,GAAE2iB,EAAkB3iB,EAAA,GACpC+G,GAAWiO,EAAAA,EAAAA,MAejB,OAbApW,EAAAA,EAAAA,YAAU,WACHmI,EAAS5H,QACVpB,QAAQC,IAAI+I,EAAS5H,QACnBpB,QAAQC,IAAI,WACZ2kB,GAAmB,GACnBnL,EAAiB,OAEjBzZ,QAAQC,IAAI,mBACZ2kB,GAAmB,GAE3B,GAAG,CAAC5b,EAAS5H,UAIX3C,EAAAA,EAAAA,MAAAH,EAAAA,SAAA,CAAAb,SAAA,EACED,EAAAA,EAAAA,KAACgK,EAAAA,EAAW,CACVrK,MAAQwnB,EAAgF,kDAA9D,4DAC1BtE,IAAKnH,EAAAA,MAGPza,EAAAA,EAAAA,MAAC6b,EAAAA,EAAI,CACHC,UAAWf,EACXtW,KAAK,QACLC,SA5DmB,SAACiD,GACxBqT,EAAiBrT,EACnB,EA2DMoU,mBAAqC,GAAjBhB,GAAsBa,EAAa5c,SAAA,EAErDknB,IAAmBnnB,EAAAA,EAAAA,KAAC8c,EAAAA,EAAAA,QAAY,CAChCG,KACEhc,EAAAA,EAAAA,MAAA,QAAMM,UAAU,wCAAuCtB,SAAA,EACrDD,EAAAA,EAAAA,KAACwB,EAAAA,EAAI,CACHC,UACoB,MAAlBua,EAAwBZ,GAAK,GAAGE,WAAaF,GAAK,GAAG5R,OAGxD4R,GAAK,GAAGzb,SAEZM,SAIAuc,EAAQ,IAHL,MAKNxc,EAAAA,EAAAA,KAAC8c,EAAAA,EAAAA,QAAY,CACXG,KACEhc,EAAAA,EAAAA,MAAA,QAAMM,UAAU,wCAAuCtB,SAAA,EACrDD,EAAAA,EAAAA,KAACwB,EAAAA,EAAI,CACHC,UACoB,MAAlBua,EAAwBZ,GAAK,GAAGE,WAAaF,GAAK,GAAG5R,OAGxD4R,GAAK,GAAGzb,SAEZM,SAIAuc,EAAQ,IAHL,MAKJ2K,IAAmBnnB,EAAAA,EAAAA,KAAC8c,EAAAA,EAAAA,QAAY,CAChCG,KACEhc,EAAAA,EAAAA,MAAA,QACEM,UAAS,yCAAAF,OACW,MAAlB2a,EAAwB,aAAe,IACtC/b,SAAA,EAEHD,EAAAA,EAAAA,KAACwB,EAAAA,EAAI,CACHC,UACoB,MAAlBua,EAAwBZ,GAAK,GAAGE,WAAaF,GAAK,GAAG5R,OAGxD4R,GAAK,GAAGzb,SAEZM,SAIAuc,EAAQ,IAHL,UAQd,ECuFA,GA3PgB,CACZ,YACA,WACA,QACA,aACA,UACA,oBACA,cACA,UACA,iBACA,UACA,SACA,WACA,aACA,sBACA,YACA,UACA,QACA,YACA,UACA,aACA,UACA,UACA,WACA,UACA,UACA,SACA,QACA,UACA,SACA,mCACA,mCACA,yBACA,WACA,gBACA,SACA,iCACA,WACA,eACA,UACA,aACA,WACA,WACA,SACA,iBACA,2BACA,OACA,QACA,QACA,mBACA,0BACA,WACA,UACA,yCACA,QACA,eACA,aACA,UACA,OACA,aACA,SACA,UACA,mBACA,UACA,WACA,WACA,qBACA,UACA,QACA,cACA,oBACA,UACA,UACA,WACA,WACA,8BACA,gBACA,OACA,UACA,SACA,gBACA,mBACA,8BACA,QACA,SACA,UACA,UACA,QACA,YACA,SACA,YACA,UACA,aACA,OACA,YACA,WACA,SACA,gBACA,SACA,QACA,oCACA,WACA,WACA,YACA,UACA,UACA,YACA,6BACA,OACA,UACA,cACA,SACA,QACA,UACA,QACA,SACA,SACA,aACA,QACA,WACA,8CACA,0BACA,SACA,aACA,mCACA,SACA,UACA,UACA,UACA,QACA,gBACA,YACA,aACA,QACA,aACA,SACA,WACA,OACA,QACA,mBACA,aACA,aACA,YACA,UACA,SACA,mCACA,4BACA,SACA,WACA,aACA,aACA,UACA,aACA,UACA,QACA,QACA,cACA,gBACA,cACA,YACA,QACA,UACA,OACA,iBACA,2BACA,SACA,OACA,WACA,QACA,sBACA,SACA,mBACA,WACA,OACA,cACA,WACA,SACA,WACA,cACA,QACA,8BACA,UACA,qBACA,SACA,aACA,sBACA,+CACA,wBACA,cACA,6BACA,4BACA,mCACA,QACA,aACA,wBACA,eACA,UACA,SACA,aACA,eACA,4BACA,WACA,WACA,kBACA,UACA,eACA,+CACA,cACA,QACA,YACA,QACA,WACA,yBACA,SACA,cACA,uBACA,SACA,aACA,+BACA,WACA,cACA,OACA,UACA,QACA,sBACA,UACA,SACA,eACA,2BACA,SACA,SACA,UACA,uBACA,uDACA,uCACA,2BACA,UACA,aACA,UACA,qCACA,WACA,2BACA,wBACA,oBACA,iBACA,QACA,SACA,WACA,oBCnOIkB,GAAYzL,EAAAA,EAAAA,QA+gBpB,OA7gBA,SAA2BpG,GACzB,IAAM8C,GAAQC,EAAAA,EAAAA,MACRc,IAAUwG,OAAO1K,SAASgX,KAAMhP,SAAS,QAK/CvF,EAAeC,EAAAA,EAAAA,UAARtD,GAAsB5L,EAAAA,EAAAA,GAAAiP,EAAA,GAAlB,GACXpP,GAAsCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9CsP,EAAWpP,EAAA,GAAEqP,EAAcrP,EAAA,GAC5BmM,GAAUC,EAAAA,EAAAA,MAChBhM,GAAwCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA7CkP,EAAYjP,EAAA,GACnBoF,GADoCpF,EAAA,IACIN,EAAAA,EAAAA,UAAS,KAAG2F,GAAAzF,EAAAA,EAAAA,GAAAwF,EAAA,GAA7C8J,EAAY7J,EAAA,GACnBE,GADoCF,EAAA,IACJ3F,EAAAA,EAAAA,UAAS,KAAG8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","sources":["views/app-views/CustomerManagement/CustomerAccounts/InvoiceTable.js","views/app-views/CustomerManagement/CustomerAccounts/Payments.js","views/app-views/CustomerManagement/CustomerAccounts/Action.js","views/app-views/CustomerManagement/CustomerAccounts/CustomerTable.js","views/app-views/CustomerManagement/CustomerAccounts/CustomerAccounts.js","views/app-views/CustomerManagement/JobSites/ActionForJobSiteOnly.js","views/app-views/CustomerManagement/JobSites/JobSiteTable.js","views/app-views/CustomerManagement/JobSites/JobSites.js","views/app-views/CustomerManagement/AddNewUser/index.js","views/app-views/CustomerManagement/CustomerAccounts/CustomerUsersTable.js","views/app-views/CustomerManagement/CustomerAccounts/CustomerBasicDetails.js","views/app-views/CustomerManagement/CustomerAccounts/JobSiteTable.js","views/app-views/CustomerManagement/CustomerAccounts/LocationSearch.js","views/app-views/CustomerManagement/CustomerAccounts/JobSites.js","views/app-views/CustomerManagement/CustomerAccounts/CustomerDetailRight.js","views/app-views/CustomerManagement/CustomerAccounts/CustomerDetails.js","views/app-views/CustomerManagement/CustomerAccounts/AddNewPayments.js","views/app-views/CustomerManagement/CustomerAccounts/AddNewInvoice.js","views/app-views/CustomerManagement/CustomerAccounts/EditInvoice.js","webpack://emilus/./src/views/app-views/ItemsAndServices/Invoices/SendInvoice/SendInvoice.module.css?b7e9","views/app-views/CustomerManagement/CustomerAccounts/Invoice.js","views/app-views/CustomerManagement/CustomerUsersAll/CustomerUsersAll.js","views/app-views/CustomerManagement/ViewCustomer/BasicDetails.js","views/app-views/CustomerManagement/ViewCustomer/JobSiteDetails.js","views/app-views/CustomerManagement/ViewCustomer/CustomerUsers.js","views/app-views/CustomerManagement/ViewCustomer/index.js","views/app-views/CustomerManagement/AddUpdateCustomer/country.js","views/app-views/CustomerManagement/AddUpdateCustomer/index.js","views/app-views/CustomerManagement/CustomerManagement.js"],"sourcesContent":["import { Table } from \"antd\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Icon from \"@ant-design/icons\";\r\nimport { InvoiceIcon } from \"views/app-views/UserManagement/SvgIcons\";\r\nimport { VisibilityIcon, DeleteIcon, EditIcon } from \"assets/svg/ActionsSvg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport EllipsisDropdown from \"components/shared-components/EllipsisDropdown/index\";\r\nimport { Menu } from \"antd\";\r\nimport { Button, Modal } from \"antd\";\r\nimport moment from \"moment\";\r\n\r\nfunction InvoiceTable({ searchText, custId }) {\r\n  const [invoiceData, setInvoiceData] = useState([]);\r\n  const [openDeleteModal, setOpenDeleteModal] = useState(false);\r\n\r\n  const tok = localStorage.getItem(\"token\");\r\n\r\n  const columns = [\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"id\",\r\n    },\r\n    {\r\n      title: \"Contract ID\",\r\n      dataIndex: \"tc_contract_id\",\r\n    },\r\n    {\r\n      title: \"Jobsite Name\",\r\n      dataIndex: \"jobsite_name\",\r\n    },\r\n    {\r\n      title: \"Total Tasks\",\r\n      dataIndex: \"total_tasks\",\r\n    },\r\n    {\r\n      title: \"Net Amount (S$)\",\r\n      dataIndex: \"total\",\r\n    },\r\n    {\r\n      title: \"Paid amount (S$)\",\r\n      dataIndex: \"amount_paid\",\r\n      render: (_, record) =>{\r\n        return <div>{record.amount_paid || 0}</div>\r\n      }\r\n    },\r\n    {\r\n      title: \"Invoice Date\",\r\n      dataIndex: \"created_at\",\r\n      render: (_, record) =>{\r\n        return <div>{moment(record.created_at).format(\"DD-MM-YYYY\")}</div>\r\n      }\r\n    },\r\n    {\r\n      title: \"Status\",\r\n      dataIndex: \"status\",\r\n      render: (_,record) => {\r\n        if(record.status==='Paid' || record.status==='PAID') return <span style={{color: \"#00AB6F\", backgroundColor: \"#EDFFF9\", padding: '4px 8px', borderRadius:'6px', fontWeight:'600', fontSize: '14px'}}>Paid</span>\r\n        else if(record.status==='Overdue' || record.status==='OVERDUE') return <span style={{color: '#F53434', backgroundColor: '#FFF2F2', padding: '4px 8px', borderRadius:'6px', fontWeight:'600', fontSize: '14px'}}>Overdue</span>\r\n        else return <span style={{color: '#FFC700', backgroundColor: '#FFC7001A', padding: '4px 8px', borderRadius:'6px', fontWeight:'600', fontSize: '14px'}}>Pending</span>\r\n      }\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      // dataIndex:'Action',\r\n      render: (_, record) => {\r\n        return (\r\n          <>\r\n            <EllipsisDropdown\r\n              menu={\r\n                <Menu>\r\n                  <Menu.Item>\r\n                    <Link\r\n                      to={`/app/contract-management/quotations/view-invoice/${record.id}`}\r\n                      className=\"d-flex align-items-center\"\r\n                    >\r\n                      <Icon component={InvoiceIcon} />\r\n                      View Invoice\r\n                    </Link>\r\n                  </Menu.Item>\r\n                  <Menu.Item>\r\n                    <Link\r\n                      to={`/app/contract-management/quotations/edit-invoice/${record.id}`}\r\n                      className=\"d-flex align-items-center\"\r\n                    >\r\n                      <Icon className=\"mr-2\" component={EditIcon} />\r\n                      Edit\r\n                    </Link>\r\n                  </Menu.Item>\r\n                  <Menu.Item\r\n                    onClick={() => {\r\n                      ShowDeleteModal();\r\n                    }}\r\n                  >\r\n                    <span className=\"d-flex align-items-center\">\r\n                      <Icon className=\"mr-2\" component={DeleteIcon} />\r\n                      Delete\r\n                    </span>\r\n                  </Menu.Item>\r\n\r\n                  <Modal\r\n                    visible={openDeleteModal}\r\n                    // onOk={handleOk}\r\n                    // onCancel={handleCancel}\r\n                    centered\r\n                    footer={[\r\n                      <Button\r\n                        style={{ color: \"#000B23\" }}\r\n                        onClick={handleCancel}\r\n                        className=\"font-weight-bold\"\r\n                      >\r\n                        No, Cancel\r\n                      </Button>,\r\n                      <Button\r\n                        type=\"primary\"\r\n                        className=\"font-weight-bold\"\r\n                        onClick={()=>handleOk(record.id)}\r\n                      >\r\n                        Yes, Confirm\r\n                      </Button>,\r\n                    ]}\r\n                  >\r\n                    <div\r\n                      style={{ color: \"#000B23\" }}\r\n                      className=\"font-weight-bolder font-size-md\"\r\n                    >\r\n                      Are Sure you want to delete this invoice?\r\n                    </div>\r\n                  </Modal>\r\n                </Menu>\r\n              }\r\n            />\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const handleCancel = () => {\r\n    setOpenDeleteModal(false);\r\n  };\r\n\r\n  const handleOk = (id) => {\r\n    deleteInvoice(id);\r\n    setOpenDeleteModal(false);\r\n  };\r\n\r\n  const ShowDeleteModal = () => {\r\n    setOpenDeleteModal(true);\r\n  };\r\n\r\n  const deleteInvoice = (id) => {\r\n    console.log(\"Invoice deleted\", id);\r\n    axios({\r\n      method: \"post\",\r\n      url: \"/api/tc/delete-invoice\",\r\n      data: { id: id },\r\n      headers: {\r\n        // \"Content-Type\": \"multipart/form-data; boundary=-- --WebKitFormBoundary7MA4YWxkTrZu0gW\",\r\n        Authorization: `Bearer ${tok}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setInvoiceData(\r\n          invoiceData.filter((elem) => {\r\n            return elem.id !== id;\r\n          })\r\n        );\r\n      })\r\n      .then((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const data = { customer_id: custId };\r\n    axios({\r\n      method: \"post\",\r\n      url: \"/api/tc/get-invoices\",\r\n      data: data\r\n    })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        if (response.data.success) {\r\n          setInvoiceData(\r\n            response.data.data.data.map((elem, ind) => {\r\n              return {\r\n                ...elem,\r\n                index: ind + 1,\r\n              };\r\n            })\r\n          );\r\n        } else {\r\n          console.log(response);\r\n        }\r\n      })\r\n      .then((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const data = { \r\n      customer_id: custId,\r\n      search: searchText\r\n     };\r\n    axios({\r\n      method: \"post\",\r\n      url: \"/api/tc/get-invoices\",\r\n      data: data\r\n    })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        if (response.data.success) {\r\n          setInvoiceData(\r\n            response.data.data.data.map((elem, ind) => {\r\n              return {\r\n                ...elem,\r\n                index: ind + 1,\r\n              };\r\n            })\r\n          );\r\n        } else {\r\n          console.log(response);\r\n        }\r\n      })\r\n      .then((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [searchText]);\r\n\r\n  return (\r\n    <div>\r\n      <Table\r\n        // scroll={{ x: 1300 }}\r\n        columns={columns}\r\n        dataSource={invoiceData}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InvoiceTable;\r\n","import { Table } from 'antd'\r\nimport React, { useState, useEffect } from 'react'\r\nimport Icon from \"@ant-design/icons\";\r\nimport { InvoiceIcon } from 'views/app-views/UserManagement/SvgIcons';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios'\r\nimport moment from 'moment'\r\n\r\n\r\n\r\nlet data = []\r\n\r\nfunction Payments({searchText, custId}) {\r\n\r\n    const [paymentsData, setPaymentsData] = useState(data)\r\n\r\n    const columns=[\r\n        {\r\n            title:'ID',\r\n            dataIndex:'id',\r\n        },\r\n        {\r\n            title:'Contract ID',\r\n            dataIndex:'id',\r\n        },\r\n        {\r\n            title:'Jobsite Name',\r\n            dataIndex:'jobSite',\r\n        },\r\n        {\r\n            title:'Total Tasks',\r\n            dataIndex:'tasks',\r\n        },\r\n        {\r\n            title:'Net Amount(S$)',\r\n            dataIndex:'netAmount',\r\n        },\r\n        {\r\n            title:'Paid Amount(S$)',\r\n            dataIndex:'paid',\r\n            render: (_, record) =>{\r\n                return <div>{record.amount_paid || 0}</div>\r\n              }\r\n        },\r\n        {\r\n            title:'Payment Date',\r\n            dataIndex:'created_at',\r\n            render: (_, record) =>{\r\n                return <div>{moment(record.created_at).format(\"DD-MM-YYYY\")}</div>\r\n            }\r\n        },\r\n        {\r\n            title:'Status',\r\n            dataIndex:'status',\r\n            render: (_,record) => {\r\n                if(record.status==='Paid' || record.status==='PAID') return <span style={{color: \"#00AB6F\", backgroundColor: \"#EDFFF9\", padding: '4px 8px', borderRadius:'6px', fontWeight:'600', fontSize: '14px'}}>Paid</span>\r\n                else if(record.status==='Overdue' || record.status==='OVERDUE') return <span style={{color: '#F53434', backgroundColor: '#FFF2F2', padding: '4px 8px', borderRadius:'6px', fontWeight:'600', fontSize: '14px'}}>Overdue</span>\r\n                else return <span style={{color: '#FFC700', backgroundColor: '#FFC7001A', padding: '4px 8px', borderRadius:'6px', fontWeight:'600', fontSize: '14px'}}>Pending</span>\r\n              }\r\n        },\r\n        // {\r\n        //     title:'Action',\r\n        //     render : (_,record) =>{\r\n        //         return <Link to='/app/customer-management/customer-accounts/customer-details/123/invoice'>\r\n        //                     <Icon component={InvoiceIcon}/>\r\n        //                 </Link>\r\n        //     } \r\n        // },\r\n    ]\r\n\r\n    useEffect(() => {\r\n        const data = { customer_id: custId };\r\n        axios({\r\n          method: \"post\",\r\n          url: \"/api/tc/get-payment\",\r\n          data: data\r\n        })\r\n          .then((response) => {\r\n            console.log(response.data);\r\n            if (response.data.success) {\r\n              setPaymentsData(\r\n                response.data.data.data.map((elem, ind) => {\r\n                  return {\r\n                    ...elem,\r\n                    index: ind + 1,\r\n                  };\r\n                })\r\n              );\r\n            } else {\r\n              console.log(response);\r\n            }\r\n          })\r\n          .then((err) => {\r\n            console.log(err);\r\n          });\r\n      }, []);\r\n\r\n    useEffect(() => {\r\n        const data = { \r\n            customer_id: custId,\r\n            search: searchText\r\n         };\r\n        axios({\r\n          method: \"post\",\r\n          url: \"/api/tc/get-payment\",\r\n          data: data\r\n        })\r\n          .then((response) => {\r\n            console.log(response.data);\r\n            if (response.data.success) {\r\n              setPaymentsData(\r\n                response.data.data.data.map((elem, ind) => {\r\n                  return {\r\n                    ...elem,\r\n                    index: ind + 1,\r\n                  };\r\n                })\r\n              );\r\n            } else {\r\n              console.log(response);\r\n            }\r\n          })\r\n          .then((err) => {\r\n            console.log(err);\r\n          });\r\n      }, [searchText]);\r\n\r\n    return (\r\n    <div>\r\n        <Table\r\n        // scroll={\r\n        //     {x:1300}\r\n        // }\r\n        columns={columns} dataSource={paymentsData} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Payments","import React from \"react\";\r\nimport { Button, Modal, Radio, Input, message } from \"antd\";\r\nimport Icon from \"@ant-design/icons\"\r\nimport { VisibilityIcon, DeleteIcon, EditIcon, AccountStatus } from \"assets/svg/ActionsSvg\";\r\nimport EllipsisDropdown from \"components/shared-components/EllipsisDropdown/index\";\r\nimport { Menu } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios'\r\nimport SuccessSubmit from \"views/app-views/UserManagement/AddNewStaffV2/AsiignShift/SuccessSubmit\";\r\nimport { Successfully } from \"configs/svgIcons\";\r\n// import EllipsisDropdown from 'components/shared-components/EllipsisDropdown'\r\n\r\nconst {TextArea} = Input\r\n\r\nfunction Action({ id, customerData, onDelete, getCustomers }) {\r\n    const [openDeleteModal, setOpenDeleteModal] = useState(false);\r\n    const [openStatusModal, setOpenStatusModal] = useState(false);\r\n    const [status, setStatus] = useState(\"Approved\");\r\n    const [remark, setRemark] = useState(false);\r\n    const tok = localStorage.getItem('token')\r\n    \r\n    const ShowDeleteModal = () => {\r\n        setOpenDeleteModal(true);\r\n       \r\n    };\r\n    const ShowAccountStatusModal = () => {\r\n        setOpenStatusModal(true);\r\n    };\r\n    const handleOk = () => {\r\n        onDelete(id)\r\n        // setOpenDeleteModal(true)\r\n        // setTimeout(() => {\r\n        //     setOpenDeleteModal(false);\r\n        // }, 3000);\r\n\r\n        axios\r\n        .post(\r\n          \"/api/tc/delete-customer\",\r\n          {\r\n            id: id\r\n          },\r\n          {\r\n            headers: {\r\n              \"content-type\": \"application/json\",\r\n              Authorization: `Bearer ${tok}`\r\n            },\r\n          }\r\n        )\r\n        .then((response) => {\r\n          let res = response.data;\r\n          console.log(res);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n        \r\n    };\r\n    const handleCancel = () => {\r\n        // setOpenDeleteModal(false);\r\n        setOpenStatusModal(false);\r\n    };\r\n    const handleStatusOk = () => {\r\n        console.log(customerData)\r\n        axios\r\n        .post(\r\n          \"/api/tc/update-customer\",\r\n          {\r\n            ...customerData,\r\n            id: id,\r\n            name: customerData.company,\r\n            status: status\r\n          },\r\n          {\r\n            headers: {\r\n              \"content-type\": \"application/json\",\r\n              Authorization: `Bearer ${tok}`\r\n            },\r\n          }\r\n        )\r\n        .then((response) => {\r\n          let res = response.data;\r\n          console.log(res);\r\n          message.success('Account status updated successfully');\r\n          setOpenStatusModal(false);\r\n          getCustomers();\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n            message.error('Something went wrong! please try again later');\r\n            setOpenStatusModal(false);\r\n        });\r\n        \r\n    };\r\n    const handleStatusCancel = () => {\r\n        setStatus(false)\r\n        setRemark('')\r\n        setOpenStatusModal(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <EllipsisDropdown\r\n                menu={\r\n                    <Menu>\r\n                        <Menu.Item >\r\n                            <Link to={`/app/customer-management/customer-accounts/customer-details/${id}`} className=\"d-flex align-items-center\">\r\n                                <Icon className=\"mr-2\" component={VisibilityIcon} />\r\n                                View Details\r\n                            </Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item >\r\n                            <Link to={`/app/customer-management/customer-accounts/edit/${id}`} className=\"d-flex align-items-center\">\r\n                                <Icon className=\"mr-2\" component={EditIcon} />\r\n                                Edit Details\r\n                            </Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item onClick={ShowDeleteModal}>\r\n                            <span className=\"d-flex align-items-center\">\r\n                                <Icon className=\"mr-2\" component={DeleteIcon} />\r\n                                Delete\r\n                            </span>\r\n                        </Menu.Item>\r\n                        <Menu.Item onClick={ShowAccountStatusModal}>\r\n                            <span className=\"d-flex align-items-center\">\r\n                                <Icon className=\"mr-1\" component={AccountStatus} />\r\n                                Account Status\r\n                            </span>\r\n                        </Menu.Item>\r\n                    </Menu>\r\n                }\r\n            />\r\n            <Modal\r\n                visible={openDeleteModal}\r\n                // onOk={handleOk}\r\n                // onCancel={handleCancel}\r\n                centered\r\n                footer={[\r\n                    <Button style={{ color: '#000B23' }} onClick={handleCancel} className='font-weight-bold'>No, Cancel</Button>,\r\n                    <Button style={{ backgroundColor: '#F78DA7', color: '#F5F5F5' }} className='font-weight-bold' onClick={handleOk}>Yes, Confirm</Button>\r\n                ]}\r\n            >\r\n                <div style={{ color: '#000B23' }} className=\"font-weight-bolder font-size-md\">Are you sure you want to delete?</div>\r\n                <p style={{ color: '#72849A' }} className=\"font-weight-normal font-size-sm\">Customer name will be deleted from the system.</p>\r\n            </Modal>\r\n            <Modal\r\n                visible={openStatusModal}\r\n                centered\r\n                maskClosable\r\n                onCancel={handleCancel}\r\n                title={'Account Status'}\r\n                footer={[\r\n                    <Button key={'submit'} style={{ color: '#F5F5F5' }} type=\"primary\" className='font-weight-bold' onClick={handleStatusOk}>Save</Button>,\r\n                    <Button key={'cancel'} style={{ color: '#000B23' }} onClick={handleStatusCancel} className='font-weight-bold'>Cancel</Button>,\r\n                ]}\r\n            >   \r\n                <div>\r\n                    <Radio.Group\r\n                        size=\"small\" \r\n                        onChange={(e) => setStatus(e.target.value)}\r\n                        defaultValue={\"Approved\"}\r\n                    >\r\n                        <Radio value=\"Approved\"> Approve </Radio>\r\n                        <Radio value=\"Rejected\"> Reject </Radio>\r\n                    </Radio.Group>\r\n                </div>\r\n\r\n                <div>\r\n                    <h4 className=\"mb-2 mt-4\">Remarks</h4>\r\n                    <TextArea rows={4} onChange={(e) => setRemark(e.target.value)} value={remark} />\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Action","import { Avatar, Modal, Space, Table } from \"antd\";\r\nimport React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Action from \"./Action\";\r\nimport SuccessSubmit from \"views/app-views/UserManagement/AddNewStaffV2/AsiignShift/SuccessSubmit\";\r\nimport { Successfully } from \"configs/svgIcons\";\r\nimport axios from \"axios\";\r\nimport avatar from \"assets/Avatar2.png\";\r\n\r\nfunction CustomerTable({ searchText, statuses }) {\r\n  const [customerAccountData, setCustomerAccountData] = useState([]);\r\n  const [customerDeletedData, setCustomeDeletedData] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [cpage, setCpage] = useState(0);\r\n  const tok = localStorage.getItem('token');\r\n  \r\n  const columns = [\r\n    {\r\n      title: \"Sr. No.\",\r\n      dataIndex: \"srNo\",\r\n    },\r\n    {\r\n      title: \"Customer ID\",\r\n      dataIndex: \"id\"\r\n    },\r\n    {\r\n      title: \"Customer Company\",\r\n      dataIndex: \"company\",\r\n      sorter: (a, b) => a.company.localeCompare(b.company)\r\n    },\r\n    {\r\n      title: \"Contact Number\",\r\n      dataIndex: \"phoneNumber\",\r\n    },\r\n    {\r\n      title: \"Email Id\",\r\n      dataIndex: \"emailId\",\r\n    },\r\n    {\r\n      title: \"Created By\",\r\n      dataIndex: \"created_by\",\r\n    },\r\n    {\r\n      title: \"Status\",\r\n      dataIndex: \"status\",\r\n      render: (_,record) => {\r\n        if(record.status==='Approved' || record.status==='APPROVED') return <span style={{color: \"#00AB6F\", backgroundColor: \"#EDFFF9\", padding: '4px 8px', borderRadius:'6px', fontWeight:'600', fontSize: '14px'}}>Active</span>\r\n        else if(record.status==='Rejected' || record.status==='REJECTED') return <span style={{color: '#F53434', backgroundColor: '#FFF2F2', padding: '4px 8px', borderRadius:'6px', fontWeight:'600', fontSize: '14px'}}>Rejected</span>\r\n        else if(record.status==='Inactive' || record.status==='INACTIVE') return <span style={{color: '#F53434', backgroundColor: '#FFF2F2', padding: '4px 8px', borderRadius:'6px', fontWeight:'600', fontSize: '14px'}}>Inactive</span>\r\n        else return <span style={{color: '#FFC700', backgroundColor: '#FFC7001A', padding: '4px 8px', borderRadius:'6px', fontWeight:'600', fontSize: '14px'}}>Pending Approval</span>\r\n      }\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      dataIndex: \"\",\r\n      render: (_, record) => {\r\n        return (\r\n          <Action\r\n            id={record.id}\r\n            customerData={record}\r\n            onDelete={deleteHandler}\r\n            getCustomers={getCustomers}\r\n          />\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  // const [selectedRowKeys, setSelectedRowKeys] = useState([]);\r\n  const [showDeletedSuccess, setShowDeletedSuccess] = useState(false);\r\n\r\n  const deleteHandler = async (id) => {\r\n    try {\r\n      // setIsLoading(true);\r\n      // const res = await axios.delete(\r\n      //   process.env.REACT_APP_BACKEND_URL + `/users/delete-user/${id}`\r\n      // );\r\n      // if (!res.data.success) {\r\n      //   throw new Error(res.data.data);\r\n      // }\r\n\r\n      setCustomerAccountData((prev) => prev.filter((item) => item.id !== id));\r\n      let deletedData = customerAccountData.find(item => item.id === id);\r\n      setCustomeDeletedData(deletedData);\r\n      setShowDeletedSuccess(true);\r\n      setTimeout(() => {\r\n        setShowDeletedSuccess(false);\r\n      }, 3000);\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  };\r\n\r\n  // const selectChangeHandler = (newSelectedRowKeys) => {\r\n  //   console.log(\"selectedRowKeys changed: \", newSelectedRowKeys);\r\n  //   setSelectedRowKeys(newSelectedRowKeys);\r\n  // };\r\n\r\n  // const rowSelection = {\r\n  //   selectedRowKeys,\r\n  //   onChange: selectChangeHandler,\r\n  // };\r\n\r\n  const handlechange = (pagination) => {\r\n    if (cpage <= pagination.current) {\r\n      setPage(pagination.current);\r\n      // setsetPage(pagination.current);\r\n      setCpage(pagination.current);\r\n    }\r\n  };\r\n\r\n  const getCustomers = () => {\r\n    axios\r\n      .post(\r\n        \"/api/tc/get-customers\",\r\n        {\r\n          page_index: 1,\r\n          page_size: 15,\r\n          // statuses: [\"ACTIVE\", \"INACTIVE\"],\r\n          search : searchText ? searchText : null,\r\n        },\r\n        {\r\n          headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${tok}`\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        let res = response.data.data.data;\r\n        console.log(res);\r\n\r\n        let fdata = res.map((elem, index) => {\r\n          let other_details = {};\r\n          if(elem.other_details) {\r\n            other_details = JSON.parse(elem.other_details);\r\n          }\r\n          return {\r\n            srNo: index+1,\r\n            key: index+1,\r\n            id: elem.id,\r\n            company: elem.name || '',\r\n            phoneNumber: elem.phone || '',\r\n            emailId: elem.email || '',\r\n            status: elem.status || 'Pending Approval',\r\n            created_by: other_details.created_by || '',\r\n            other_details: elem.other_details\r\n          };\r\n        });\r\n\r\n        setCustomerAccountData(fdata);\r\n        console.log(fdata)\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n}\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .post(\r\n        \"/api/tc/get-customers\",\r\n        {\r\n          page_index: 1,\r\n          page_size: 15,\r\n          // statuses: [\"ACTIVE\", \"INACTIVE\"],\r\n          search : searchText ? searchText : null,\r\n        },\r\n        {\r\n          headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${tok}`\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        let res = response.data.data.data;\r\n        console.log(res);\r\n\r\n        let fdata = res.map((elem, index) => {\r\n          let other_details = {};\r\n          if(elem.other_details) {\r\n            other_details = JSON.parse(elem.other_details);\r\n          }\r\n          return {\r\n            srNo: index+1,\r\n            key: index+1,\r\n            id: elem.id,\r\n            company: elem.name || '',\r\n            phoneNumber: elem.phone || '',\r\n            emailId: elem.email || '',\r\n            status: elem.status || 'Pending Approval',\r\n            created_by: other_details.created_by || '',\r\n            other_details: elem.other_details\r\n          };\r\n        });\r\n\r\n        setCustomerAccountData(fdata);\r\n        console.log(fdata)\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, [searchText]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .post(\r\n        \"/api/tc/get-customers\",\r\n        {\r\n          page_index: 1,\r\n          page_size: 15,\r\n          statuses: statuses || [\"ACTIVE\", \"INACTIVE\"],\r\n          search : searchText ? searchText : null,\r\n        },\r\n        {\r\n          headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${tok}`\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        let res = response.data.data.data;\r\n        console.log(res);\r\n\r\n        let fdata = res.map((elem, index) => {\r\n          let other_details = {};\r\n          if(elem.other_details) {\r\n            other_details = JSON.parse(elem.other_details);\r\n          }\r\n          return {\r\n            srNo: index+1,\r\n            key: index+1,\r\n            id: elem.id,\r\n            company: elem.name || '',\r\n            phoneNumber: elem.phone || '',\r\n            emailId: elem.email || '',\r\n            status: elem.status || 'Pending Approval',\r\n            created_by: other_details.created_by || '',\r\n            other_details: elem.other_details\r\n          };\r\n        });\r\n        setCustomerAccountData(fdata);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, [statuses]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .post(\r\n        \"/api/tc/get-customers\",\r\n        {\r\n          page_index: page,\r\n          page_size: 15,\r\n          // statuses: [\"ACTIVE\", \"INACTIVE\", \"PENDING APPROVAL\"],\r\n          searchText : searchText ? searchText : null,\r\n        },\r\n        {\r\n          headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${tok}`\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        let res = response.data.data.data;\r\n        console.log(res);\r\n\r\n        let fdata = res.map((elem, index) => {\r\n          let other_details = {};\r\n          if(elem.other_details) {\r\n            other_details = JSON.parse(elem.other_details);\r\n          }\r\n          return {\r\n            srNo: index+1,\r\n            key: index+1,\r\n            id: elem.id,\r\n            company: elem.name || '',\r\n            phoneNumber: elem.phone || '',\r\n            emailId: elem.email || '',\r\n            status: elem.status || 'Pending Approval',\r\n            created_by: other_details.created_by || '',\r\n            other_details: elem.other_details\r\n          };\r\n        });\r\n        // setCustomerAccountData(customerAccountData.concat(fdata));\r\n        setCustomerAccountData(fdata);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, [page]);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Table\r\n          scroll={{\r\n            x:1200\r\n          }}\r\n          pageSize={'15'}\r\n          // rowSelection={rowSelection}\r\n          // loading={isLoading}\r\n          columns={columns}\r\n          dataSource={customerAccountData}\r\n          onChange={handlechange}\r\n        />\r\n      </div>\r\n      <Modal\r\n        centered\r\n        visible={showDeletedSuccess}\r\n        footer={[null]}\r\n        onCancel={() => {\r\n          setShowDeletedSuccess(false);\r\n        }}\r\n      >\r\n        <SuccessSubmit\r\n          icon={Successfully}\r\n          title=\"Customer Deleted Successfully!\"\r\n          desc={`Customer name ${customerDeletedData.company} has been deleted.`}\r\n        />\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CustomerTable;\r\n","import { Button, Dropdown, Menu, Space } from 'antd'\r\nimport React, { useState, useEffect } from 'react'\r\nimport SearchBox from 'components/shared-components/SearchBox';\r\nimport { Link } from 'react-router-dom';\r\nimport exportIcon from \"assets/svg/exportIcon.svg\";\r\nimport plusIcon from \"assets/svg/plus.svg\";\r\nimport PageHeading from 'components/shared-components/PageHeading/PageHeading';\r\nimport CustomerTable from './CustomerTable';\r\nimport axios from 'axios';\r\nimport { CSVLink } from \"react-csv\";\r\n// import UserManagementIcon from \"assets/svg/usermManagementPage.svg\";\r\n// import filterIcon from \"assets/svg/filterIcon.svg\";\r\n// import Filter from 'views/app-views/UserManagement/UserList/Filter';\r\n\r\n\r\nfunction CustomerAccounts() {\r\n  const [allCustomerAccountData, setAllCustomerAccountData] = useState([]);\r\n  const [searchText, setSearchText] = useState('')\r\n  const [page, setPage] = useState(1)\r\n  const [statusFilter, setStatusFilter] = useState([])\r\n  const [current, setCurrent] = useState(['All'])\r\n  // const tok = localStorage.getItem('token')\r\n  const headers = [\r\n    { label: \"Sr. No\", key: \"sr_no\" },\r\n    { label: \"Customer ID\", key: \"id\" },\r\n    { label: \"Customer Company\", key: \"company\" },\r\n    { label: \"Contact Number\", key: \"phoneNumber\" },\r\n    { label: \"Email ID\", key: \"emailId\" },\r\n    { label: \"Created By\", key: \"created_by\" },\r\n    { label: \"Status\", key: \"status\" }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    axios\r\n    .post(\r\n      \"/api/tc/get-customers\",\r\n      {\r\n        page_index: 1,\r\n        page_size: 100000,\r\n        search : null,\r\n      },\r\n    )\r\n    .then((response) => {\r\n      let res = response.data.data.data;\r\n\r\n      let fdata = res.map((elem, index) => {\r\n        let other_details = {};\r\n        if(elem.other_details) {\r\n          other_details = JSON.parse(elem.other_details);\r\n        }\r\n        return {\r\n          sr_no: index+1,\r\n          key: index+1,\r\n          id: elem.id,\r\n          company: elem.name || '',\r\n          phoneNumber: elem.phone || '',\r\n          emailId: elem.email || '',\r\n          status: elem.status || 'Pending Approval',\r\n          created_by: other_details.created_by || '',\r\n        };\r\n      });\r\n\r\n      setAllCustomerAccountData(fdata);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n  }, []);\r\n  \r\n\r\n  // async function downloadPDF() {\r\n  //   try {\r\n  //     const pdfUrl = await getPdf();\r\n  //     if (pdfUrl) {\r\n  //       window.open(pdfUrl);\r\n  //     }\r\n  //   } catch (error) {\r\n  //     console.error(\"Error downloading PDF:\", error);\r\n  //   }\r\n  // }\r\n  \r\n  // const handleClick = () => {}\r\n\r\n  const handleFilterClick = (e) => {\r\n    setCurrent([e.key])\r\n    if(e.key === 'ACTIVE') {\r\n      setStatusFilter(['ACTIVE'])\r\n    }else if(e.key === 'INACTIVE') {\r\n      setStatusFilter(['INACTIVE'])\r\n    } else {\r\n      setStatusFilter([])\r\n    }\r\n  }\r\n\r\n  const menuFilter = (\r\n    <Menu onClick={handleFilterClick} selectedKeys={current}>\r\n      <Menu.Item key={'All'}>All</Menu.Item>\r\n      <Menu.SubMenu title=\"Status\">\r\n        <Menu.Item key={'AllStatus'}>All</Menu.Item>\r\n        <Menu.Item key={'ACTIVE'}>ACTIVE</Menu.Item>\r\n        <Menu.Item key={'INACTIVE'}>INACTIVE</Menu.Item>\r\n      </Menu.SubMenu>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div className='d-flex justify-content-between'>\r\n        <PageHeading\r\n          // icon={UserManagementIcon}\r\n          title=\"Customer Accounts\"\r\n        />\r\n        <div className=\"d-flex justify-content-between mb-3\">\r\n          <div className=\" d-flex align-items-center justify-content-between mr-2\">\r\n            <SearchBox setSearchText={setSearchText} />\r\n\r\n            <CSVLink data={allCustomerAccountData} \r\n              headers={headers} \r\n              filename={\"All-Customers.csv\"}\r\n            >\r\n              <Button className=\"d-flex align-items-center ml-2 mr-2\" >\r\n                <img className=\"mr-2\" src={exportIcon} alt=\"exportIcon\"></img>Export\r\n              </Button>\r\n            </CSVLink>\r\n\r\n            <Link to=\"/app/customer-management/customer-accounts/add-new\">\r\n              <Button\r\n                className=\"d-flex align-items-center\"\r\n                type=\"primary\"\r\n                size=\"medium\"\r\n              >\r\n                <img className=\"mr-2\" src={plusIcon} alt=\"plusIcon\"></img>\r\n                Add New\r\n              </Button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <CustomerTable setPage={setPage} searchText={searchText} \r\n        statuses={statusFilter} />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CustomerAccounts","import React from \"react\";\r\n// import EllipsisDropdown from 'components/shared-components/EllipsisDropdown'\r\nimport { Button, message, Modal } from \"antd\";\r\nimport Icon from \"@ant-design/icons\"\r\nimport EllipsisDropdown from \"components/shared-components/EllipsisDropdown/index\";\r\nimport { Menu } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport { Link,useHistory } from \"react-router-dom\";\r\nimport { VisibilityIcon, DeleteIcon, EditIcon } from \"assets/svg/ActionsSvg\";\r\n// import SuccessSubmit from \"views/app-views/UserManagement/AddNewStaffV2/AsiignShift/SuccessSubmit\";\r\n// import { Successfully } from \"configs/svgIcons\";\r\nimport axios from 'axios'\r\n\r\nfunction ActionForJobSiteOnly({ id, customer_id, setShowModal, viewDetails, record, form, JobSites, shiftLocations, onDelete, onEdit, idFromProp, getJobSites }) {\r\n    console.log(customer_id)\r\n    const history = useHistory();\r\n\r\n    const tok = localStorage.getItem('token')  \r\n\r\n    const [openDeleteModal, setOpenDeleteModal] = useState(false);\r\n    \r\n    const ShowDeleteModal = () => {\r\n        setOpenDeleteModal(true);\r\n    };\r\n    const handleOk = () => {\r\n        axios\r\n        .post(\r\n          \"/api/tc/delete-customer-job-site\",\r\n          {\r\n            id: id\r\n          },\r\n          {\r\n            headers: {\r\n              \"content-type\": \"application/json\",\r\n              Authorization:`Bearer ${tok}`\r\n            },\r\n          }\r\n        )\r\n        .then((response) => {\r\n          let res = response.data;\r\n          console.log(res);\r\n          if(res.success) {\r\n            message.success(\"Jobsite deleted successfully\")\r\n          } else {\r\n            if(res.message) message.error(res.message)\r\n            else message.error(\"Jobsite cannot be deleted\")\r\n          }\r\n          setOpenDeleteModal(false);\r\n          getJobSites();\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n        \r\n    };\r\n    const handleCancel = () => {\r\n        setOpenDeleteModal(false);\r\n        \r\n    };\r\n\r\n    const changeOnEdit = () =>{\r\n        console.log(record)\r\n        onEdit(id)\r\n\r\n        if(!viewDetails) {\r\n            let jobsiteObj = JobSites.find((e) => e.address === record.address)\r\n            if(jobsiteObj) {\r\n                let location = shiftLocations.find(e => e.location_address === jobsiteObj.address)\r\n                if(location) {\r\n                    form.setFieldsValue({\r\n                        shift_name: location.location_name,\r\n                        address: location.location_address\r\n                    })\r\n                }\r\n            }\r\n            form.setFieldsValue({\r\n                ...record\r\n            })\r\n            setShowModal(true)\r\n        }\r\n        else {\r\n            console.log(record.tc_customer_id)\r\n            history.push(`/app/customer-management/customer-accounts/customer-details/${customer_id}`)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <EllipsisDropdown\r\n                menu={\r\n                    <Menu>\r\n                        <Menu.Item onClick={ShowDeleteModal}>\r\n                            <span className=\"d-flex align-items-center\">\r\n                                <Icon className=\"mr-2\" component={DeleteIcon} /> Delete\r\n                            </span>\r\n                        </Menu.Item>\r\n                        <Menu.Item onClick={changeOnEdit}>\r\n                            <span className=\"d-flex align-items-center\">\r\n                                <Icon className=\"mr-2\" component={EditIcon} /> Edit \r\n                            </span>\r\n                        </Menu.Item>\r\n\r\n                    </Menu>\r\n                }\r\n            />\r\n            <Modal\r\n                visible={openDeleteModal}\r\n                centered\r\n                onCancel={handleCancel}\r\n                footer={[\r\n                    <Button style={{ color: '#000B23' }} onClick={handleCancel} className='font-weight-bold'>No, cancel</Button>,\r\n                    <Button style={{ color: '#F5F5F5' }} type=\"primary\" className='font-weight-bold' onClick={handleOk}>Yes, Confirm</Button>\r\n                ]}\r\n            >\r\n                <div style={{ color: '#000B23' }} className=\"font-weight-bolder font-size-md\">Sure you want to delete?</div>\r\n                <p style={{ color: '#72849A' }} className=\"font-weight-normal font-size-sm\">Job site ID #{id} will be deleted.</p>\r\n            </Modal>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ActionForJobSiteOnly","import { Modal, Space, Table } from \"antd\";\r\nimport React from \"react\";\r\nimport { useState, useEffect, useMemo } from \"react\";\r\nimport avatar from \"assets/Avatar2.png\";\r\nimport ActionForJobSiteOnly from \"./ActionForJobSiteOnly\";\r\nimport SuccessSubmit from \"views/app-views/UserManagement/AddNewStaffV2/AsiignShift/SuccessSubmit\";\r\nimport { Successfully } from \"configs/svgIcons\";\r\nimport axios from \"axios\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nfunction JobSiteTable(props) {\r\n  const history = useHistory();\r\n  const [customerAccountData, setCustomerAccountData] = useState([]);\r\n  const [allJobSiteData, setAllJobSiteData] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [cpage, setCpage] = useState(0)\r\n  const tok = localStorage.getItem('token')\r\n  console.log(props)\r\n  // const relDat = useMemo(() => {\r\n  //   axios\r\n  //     .post(\r\n  //       \"/api/tc/get-customer-job-sites\",\r\n  //       {\r\n  //         page_index: page,\r\n  //         page_size: 15,\r\n  //         // statuses: [\"ACTIVE\", \"INACTIVE\"],\r\n  //         customer_id: props.id ? props.id : null,\r\n  //       },\r\n  //       {\r\n  //         headers: {\r\n  //           \"content-type\": \"application/json\",\r\n  //           Authorization: `Bearer ${tok}`\r\n  //         },\r\n  //       }\r\n  //     )\r\n  //     .then((response) => {\r\n  //       let res = response.data.data.data;\r\n  //       console.log(res);\r\n\r\n  //       let fdata = res.map((elem, ind) => {\r\n  //         return {\r\n  //           // key: ind,\r\n  //           id: elem.id,\r\n  //           jobSite: elem.name,\r\n  //           jobSiteAddress: elem.address ? elem.address : `${elem.street_number}, block no. ${elem.block_number} postal code ${elem.postal_code}, ${elem.country}`,\r\n  //           company: elem.customer_name,\r\n  //           phoneNumber: elem?.phone,\r\n  //           emailId: elem?.email,\r\n  //           noOfUsers: 2,\r\n  //           img: { image: elem?.img, name: \"John Smith\" },\r\n  //           staffAssign: elem.staffAssign,\r\n  //           tasks: elem.tasks,\r\n  //           revenue: elem.revenue,\r\n  //           outstandingAmt: elem.outstandingAmt,\r\n  //           status: elem.status,\r\n  //           action: \"\",\r\n  //           tc_customer_id: elem.tc_customer_id\r\n  //         };\r\n  //       });\r\n  //       setCustomerAccountData(fdata);\r\n  //       console.log(fdata);\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       console.log(error);\r\n  //     });\r\n  // }, [props.tog])\r\n\r\n  const columns = [\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"id\",\r\n    },\r\n    {\r\n      title: \"Job Site\",\r\n      dataIndex: \"jobSite\",\r\n    },\r\n    {\r\n      title: \"Job Site Address\",\r\n      dataIndex: \"jobSiteAddress\",\r\n      width: 200,\r\n    },\r\n    // {\r\n    //   title: \"\",\r\n    //   dataIndex: \"img\",\r\n    //   render: (item) => {\r\n    //     const { image, name } = item;\r\n    //     return (\r\n    //       <Space size={40}>\r\n    //         <img src={image} />\r\n    //         {/* {name} */}\r\n    //       </Space>\r\n    //     );\r\n    //   },\r\n    // },\r\n    {\r\n      title: \"Company\",\r\n      dataIndex: \"company\",\r\n    },\r\n    // {\r\n    //   title: \"No Of Users\",\r\n    //   dataIndex: \"noOfUsers\",\r\n    //   width: 120,\r\n    // },\r\n    {\r\n      title: \"Staff Assign\",\r\n      dataIndex: \"total_staffs\",\r\n      width: 120,\r\n    },\r\n    {\r\n      title: \"Tasks\",\r\n      dataIndex: \"total_tasks\",\r\n    },\r\n    // {\r\n    //   title: \"Revenue\",\r\n    //   dataIndex: \"revenue\",\r\n    // },\r\n    // {\r\n    //   title: \"Outstanding Amt\",\r\n    //   dataIndex: \"outstandingAmt\",\r\n    //   width: 150,\r\n    // },\r\n    {\r\n      title: \"Status\",\r\n      dataIndex: \"status\",\r\n      render: (_,record) => {\r\n        if(record.status==='ACTIVE') return <span style={{color: \"#00AB6F\", backgroundColor: \"#EDFFF9\", padding: '4px 8px', borderRadius:'6px', fontWeight:'600', fontSize: '14px'}}>Active</span>\r\n        else return <span style={{color: '#F53434', backgroundColor: '#FFF2F2', padding: '4px 8px', borderRadius:'6px', fontWeight:'600', fontSize: '14px'}}>Inactive</span>\r\n    }\r\n    },\r\n\r\n    {\r\n      title: \"Action\",\r\n      dataIndex: \"action\",\r\n      render: (_, record) => {\r\n        return (\r\n          <ActionForJobSiteOnly\r\n            record ={record}\r\n            id={record.id}\r\n            customer_id={record.tc_customer_id}\r\n            onEdit={editHandler}\r\n            onDelete={deleteHandler}\r\n            idFromProp={props.id}\r\n            // editUser={editUser}\r\n            setShowModal={props.setShowModal}\r\n            viewDetails={props.setShowModal ? false : true}\r\n          />\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const editHandler = (id) => {\r\n    // props.setEditjobfield(id);\r\n    // history.push(`/app/customer-management/customer-accounts/customer-details/${customer_id}`)\r\n    console.log(\"edithand\");\r\n  }\r\n\r\n  const handlechange = (pagination) => {\r\n    if (cpage <= pagination.current) {\r\n      setPage(pagination.current)\r\n      setCpage(pagination.current)\r\n    }\r\n  }\r\n\r\n  const getJobSites = () => {\r\n    axios({\r\n        method: 'post',\r\n        url: \"/api/tc/get-customer-job-sites\",\r\n        data: {\r\n            page_index: 1,\r\n            page_size: 100000,\r\n            search : '',\r\n            customer_id: null\r\n        }\r\n    }).then((response) => {\r\n        console.log(response.data.data.data)\r\n        if (response.data.success) {\r\n          setAllJobSiteData(response.data.data.data)\r\n        }\r\n    }).catch((err) => {\r\n        console.log(err)\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .post(\r\n        \"/api/tc/get-customer-job-sites\",\r\n        {\r\n          page_index: page,\r\n          page_size: 15,\r\n          statuses: [\"ACTIVE\", \"INACTIVE\"],\r\n          customer_id: props.id ? props.id : null,\r\n          search : props.searchText? props.searchText : null,\r\n        },\r\n        {\r\n          headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${tok}`\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        let res = response.data.data.data;\r\n        console.log(res);\r\n\r\n        let fdata = res.map((elem, ind) => {\r\n          return {\r\n            id: elem.id,\r\n            jobSite: elem.name,\r\n            jobSiteAddress: elem.address ? elem.address : `${elem.unit_number} ${elem.street_number}, ${elem.block_number} ${elem.postal_code}, ${elem.country}`,\r\n            company: elem.customer_name,\r\n            phoneNumber: elem?.phone,\r\n            emailId: elem?.email,\r\n            noOfUsers: elem?.total_customer_users || 0,\r\n            img: { image: elem?.img, name: elem.name },\r\n            staffAssign: elem.staffAssign,\r\n            tasks: elem.tasks,\r\n            revenue: elem.revenue,\r\n            outstandingAmt: elem.outstandingAmt,\r\n            total_tasks: elem.total_tasks,\r\n            total_staffs: elem.total_staffs,\r\n            status: elem.status,\r\n            action: \"\",\r\n            tc_customer_id: elem.tc_customer_id\r\n          };\r\n        });\r\n        setCustomerAccountData(customerAccountData.concat(fdata));\r\n        // props.setEditjobfield(fdata[0].id);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, [page]);\r\n\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .post(\r\n        \"/api/tc/get-customer-job-sites\",\r\n        {\r\n          page_index: 1,\r\n          page_size: 15,\r\n          // statuses: [\"ACTIVE\", \"INACTIVE\"],\r\n          customer_id: props.id ? props.id : null,\r\n          search : props.searchText? props.searchText : null,\r\n        },\r\n        {\r\n          headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${tok}`\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        let res = response.data.data.data;\r\n        console.log(res);\r\n\r\n        let fdata = res.map((elem, ind) => {\r\n          return {\r\n            id: elem.id,\r\n            jobSite: elem.name,\r\n            jobSiteAddress: elem.address ? elem.address : `${elem.street_number}, block no. ${elem.block_number} postal code ${elem.postal_code}, ${elem.country}`,\r\n            company: elem.customer_name,\r\n            phoneNumber: elem?.phone,\r\n            emailId: elem?.email,\r\n            noOfUsers: elem?.total_customer_users || 0,\r\n            img: { image: elem?.img, name: \"John Smith\" },\r\n            staffAssign: elem.staffAssign,\r\n            tasks: elem.tasks,\r\n            revenue: elem.revenue,\r\n            outstandingAmt: elem.outstanding,\r\n            total_tasks: elem.total_tasks,\r\n            total_staffs: elem.total_staffs,\r\n            status: elem.status,\r\n            action: \"\",\r\n            tc_customer_id: elem.tc_customer_id\r\n          };\r\n        });\r\n        setCustomerAccountData(fdata);\r\n        props.setEditjobfield(fdata[0].id);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, [props.id]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .post(\r\n        \"/api/tc/get-customer-job-sites\",\r\n        {\r\n          page_index: 1,\r\n          page_size: 15,\r\n          // statuses: [\"ACTIVE\", \"INACTIVE\"],\r\n          customer_id: props.id ? props.id : null,\r\n          search : props.searchText? props.searchText : null\r\n        },\r\n        {\r\n          headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${tok}`\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        let res = response.data.data.data;\r\n        console.log(res);\r\n\r\n        let fdata = res.map((elem, ind) => {\r\n          return {\r\n            id: elem.id,\r\n            jobSite: elem.name,\r\n            jobSiteAddress: elem.address ? elem.address : `${elem.street_number}, block no. ${elem.block_number} postal code ${elem.postal_code}, ${elem.country}`,\r\n            company: elem.customer_name,\r\n            phoneNumber: elem?.phone,\r\n            emailId: elem?.email,\r\n            noOfUsers: elem?.total_customer_users || 0,\r\n            img: { image: elem?.img, name: \"John Smith\" },\r\n            staffAssign: elem.staffAssign,\r\n            tasks: elem.tasks,\r\n            revenue: elem.revenue,\r\n            outstandingAmt: elem.outstanding,\r\n            total_tasks: elem.total_tasks,\r\n            total_staffs: elem.total_staffs,\r\n            status: elem.status,\r\n            action: \"\",\r\n            tc_customer_id: elem.tc_customer_id\r\n          };\r\n        });\r\n        setCustomerAccountData(fdata);\r\n        props.setEditjobfield(fdata[0].id);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, [props.searchText]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .post(\r\n        \"/api/tc/get-customer-job-sites\",\r\n        {\r\n          page_index: 1,\r\n          page_size: 15,\r\n          // statuses: [\"ACTIVE\", \"INACTIVE\"],\r\n          customer_id: props.customer_id ? props.customer_id : null,\r\n          search : props.searchText? props.searchText : null\r\n        },\r\n        {\r\n          headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${tok}`\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        let res = response.data.data.data;\r\n        console.log(res);\r\n\r\n        let fdata = res.map((elem, ind) => {\r\n          return {\r\n            id: elem.id,\r\n            jobSite: elem.name,\r\n            jobSiteAddress: elem.address ? elem.address : `${elem.street_number}, block no. ${elem.block_number} postal code ${elem.postal_code}, ${elem.country}`,\r\n            company: elem.customer_name,\r\n            phoneNumber: elem?.phone,\r\n            emailId: elem?.email,\r\n            noOfUsers: elem?.total_customer_users || 0,\r\n            img: { image: elem?.img, name: \"John Smith\" },\r\n            staffAssign: elem.staffAssign,\r\n            tasks: elem.tasks,\r\n            revenue: elem.revenue,\r\n            outstandingAmt: elem.outstanding,\r\n            total_tasks: elem.total_tasks,\r\n            total_staffs: elem.total_staffs,\r\n            status: elem.status,\r\n            action: \"\",\r\n            tc_customer_id: elem.tc_customer_id\r\n          };\r\n        });\r\n        setCustomerAccountData(fdata);\r\n        props.setEditjobfield(fdata[0].id);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, [props.customer_id]);\r\n\r\n  // const [selectedRowKeys, setSelectedRowKeys] = useState([]);\r\n  const [showDeletedSuccess, setShowDeletedSuccess] = useState(false);\r\n\r\n  const deleteHandler = async (id) => {\r\n    try {\r\n      // setIsLoading(true);\r\n      // const res = await axios.delete(\r\n      //   process.env.REACT_APP_BACKEND_URL + `/users/delete-user/${id}`\r\n      // );\r\n      // if (!res.data.success) {\r\n      //   throw new Error(res.data.data);\r\n      // }\r\n\r\n      axios\r\n        .post(\r\n          \"/api/tc/delete-customer-job-site\",\r\n          {\r\n            id: id\r\n          },\r\n          {\r\n            headers: {\r\n              \"content-type\": \"application/json\",\r\n              Authorization: `Bearer ${tok}`\r\n            },\r\n          }\r\n        )\r\n        .then((response) => {\r\n          console.log(response);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n\r\n      setCustomerAccountData((prev) => prev.filter((item) => item.id !== id));\r\n\r\n      // setLoadedUsers((prev) => prev.filter((item) => item.userId !== id));\r\n      setShowDeletedSuccess(true);\r\n      setTimeout(() => {\r\n        setShowDeletedSuccess(false);\r\n      }, 3000);\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getJobSites()\r\n  }, [])\r\n  \r\n\r\n  // const selectChangeHandler = (newSelectedRowKeys) => {\r\n  //   console.log(\"selectedRowKeys changed: \", newSelectedRowKeys);\r\n  //   setSelectedRowKeys(newSelectedRowKeys);\r\n  // };\r\n\r\n  // const rowSelection = {\r\n  //   selectedRowKeys,\r\n  //   onChange: selectChangeHandler,\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Table\r\n          // scroll={{\r\n          //   x: 1300,\r\n          // }}\r\n          // rowKey='id'\r\n          // rowSelection={rowSelection}\r\n          columns={columns}\r\n          dataSource={customerAccountData}\r\n          onChange={handlechange}\r\n        />\r\n      </div>\r\n      <Modal\r\n        centered\r\n        visible={showDeletedSuccess}\r\n        footer={[null]}\r\n        onCancel={() => {\r\n          setShowDeletedSuccess(false);\r\n        }}\r\n      >\r\n        <SuccessSubmit\r\n          icon={Successfully}\r\n          title=\"Job site deleted successfully!\"\r\n          desc=\"Job site ID deleted.\"\r\n        />\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default JobSiteTable;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Space, Menu, Dropdown, Select } from 'antd'\r\nimport axios from 'axios';\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nimport SearchBox from 'components/shared-components/SearchBox';\r\nimport exportIcon from \"assets/svg/exportIcon.svg\";\r\nimport PageHeading from 'components/shared-components/PageHeading/PageHeading';\r\nimport JobSiteTable from './JobSiteTable';\r\n\r\n// import UserManagementIcon from \"assets/svg/usermManagementPage.svg\";\r\n// import { Link } from 'react-router-dom';\r\n// import filterIcon from \"assets/svg/filterIcon.svg\";\r\n// import plusIcon from \"assets/svg/plus.svg\";\r\n// import Filter from 'views/app-views/UserManagement/UserList/Filter';\r\n// import CustomerTable from './JobSiteTable';\r\n\r\nfunction JobSites() {\r\n\r\n  const [searchText, setSearchText] = useState('')\r\n  const [companyList, setCompanyList] = useState([])\r\n  const tok = localStorage.getItem('token')\r\n  const [current, setCurrent] = useState(['All'])\r\n  // const [customers, setCustomers] = useState(['All'])\r\n  const [companyFilter, setCompanyFilter] = useState([])\r\n  const [allJobsitesData, setAllJobsitesData] = useState([]);\r\n  const headers = [\r\n    { label: \"Sr. No\", key: \"sr_no\" },\r\n    { label: \"ID\", key: \"id\" },\r\n    { label: \"Jobsite\", key: \"jobsite\" },\r\n    { label: \"Jobsite Address\", key: \"jobSiteAddress\" },\r\n    { label: \"Company\", key: \"company\" },\r\n    { label: \"Staff Assigned\", key: \"total_staffs\" },\r\n    { label: \"Tasks\", key: \"total_tasks\" },\r\n    { label: \"Status\", key: \"status\" }\r\n  ];\r\n\r\n  const getCompanyList = ()=> {\r\n    axios\r\n      .post(\r\n        \"/api/tc/get-customers\",\r\n        {\r\n          page_index: 1,\r\n          page_size: 100000,\r\n          statuses: [\"ACTIVE\", \"INACTIVE\", \"PENDING APPROVAL\"],\r\n          search : null,\r\n        },\r\n        {\r\n          headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${tok}`\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        let res = response.data.data.data;\r\n        console.log(res);\r\n        setCompanyList(res);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const handleFilterClick = (e) => {\r\n    console.log(e)\r\n    setCurrent([e.key])\r\n    if(e.key != 'All' && e.key != 'AllCompany') {\r\n      setCompanyFilter([+e.key])\r\n    }else {\r\n      setCompanyFilter([])\r\n    }\r\n  }\r\n\r\n  const getAllJobsites = () => {\r\n    axios\r\n    .post(\r\n      \"/api/tc/get-customer-job-sites\",\r\n      {\r\n        page_index: 1,\r\n        page_size: 100000,\r\n        search : null,\r\n        customer_id : null,\r\n      },\r\n    )\r\n    .then((response) => {\r\n      let res = response.data.data.data;\r\n\r\n      let fdata = res.map((elem, index) => {\r\n        let other_details = {};\r\n        if(elem.other_details) {\r\n          other_details = JSON.parse(elem.other_details);\r\n        }\r\n        return {\r\n          sr_no: index+1,\r\n          key: index+1,\r\n          id: elem.id,\r\n          jobsite: elem.name,\r\n          jobSiteAddress: elem.address ? elem.address : `${elem.unit_number} ${elem.street_number}, ${elem.block_number} ${elem.postal_code}, ${elem.country}`,\r\n          company: elem.customer_name,\r\n          phoneNumber: elem?.phone,\r\n          emailId: elem?.email,\r\n          noOfUsers: elem?.total_customer_users || 0,\r\n          img: { image: elem?.img, name: elem.name },\r\n          staffAssign: elem.staffAssign,\r\n          tasks: elem.tasks,\r\n          revenue: elem.revenue || 0,\r\n          outstandingAmt: elem.outstandingAmt || 0,\r\n          total_tasks: elem.total_tasks || 0,\r\n          total_staffs: elem.total_staffs || 0,\r\n          status: elem.status,\r\n          action: \"\",\r\n        };\r\n      });\r\n\r\n      setAllJobsitesData(fdata);\r\n      console.log(fdata)\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getCompanyList();    \r\n    getAllJobsites();    \r\n  }, []);\r\n  \r\n\r\n  // const menuFilter = (\r\n  //   <Menu onClick={handleFilterClick} selectedKeys={current}>\r\n  //     <Menu.Item key={'All'}>All</Menu.Item>\r\n  //     <Menu.SubMenu title=\"Company\">\r\n  //       <Menu.Item key={\"AllCompany\"}>All</Menu.Item>\r\n  //       {companyList.map((item)=> {\r\n  //         return <Menu.Item key={item.id}>{item.name}</Menu.Item>\r\n  //       })}\r\n  //     </Menu.SubMenu>\r\n  //   </Menu>\r\n  // );\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex justify-content-between\">\r\n        <PageHeading\r\n          // icon={UserManagementIcon}\r\n          title=\"Job Sites\"\r\n        />\r\n        <div className=\"d-flex justify-content-between mb-3\">\r\n          <div className=\" d-flex align-items-center justify-content-between\">\r\n            <SearchBox setSearchText={setSearchText}/>\r\n\r\n            {/* <Dropdown overlay={menuFilter} trigger={['click']}>\r\n              <Button className=\"d-flex align-items-center ml-2\">\r\n                <img className=\"mr-2\" src={filterIcon} alt=\"filterIcon\"></img>\r\n                Filters\r\n              </Button>\r\n            </Dropdown> */}\r\n\r\n\r\n            <CSVLink data={allJobsitesData} \r\n              headers={headers} \r\n              filename={\"All-Jobsites.csv\"}\r\n            >\r\n              <Button className=\"d-flex align-items-center mx-2\" >\r\n                <img className=\"mr-2\" src={exportIcon} alt=\"exportIcon\"></img>Export\r\n              </Button>\r\n            </CSVLink>\r\n\r\n            <Select onChange={setCompanyFilter} style={{width: '150px'}} placeholder={\"Customer\"}>\r\n              {companyList.map((elem, index) => {\r\n                return (\r\n                  <Select.Option key={index} value={elem.id}>\r\n                    {elem.name}\r\n                  </Select.Option>\r\n                );\r\n              })}\r\n            </Select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <JobSiteTable searchText={searchText} id={companyFilter[0]} customer_id={companyFilter}/>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default JobSites","import { Button, Card, Col, DatePicker, Form, Input, InputNumber, Radio, Row, Select, Switch, Upload, message } from 'antd'\r\nimport React from 'react'\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { Modal } from 'antd';\r\nimport { useState } from 'react';\r\nimport '../AddNewCustomer/BasicDetails.css'\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport PageHeading from 'components/shared-components/PageHeading/PageHeading';\r\nimport UserManagementIcon from \"assets/svg/usermManagementPage.svg\";\r\nimport Icon from \"@ant-design/icons\";\r\nimport { BoyIcon, GirlIcon } from 'assets/svg/icon';\r\nimport { Successfully } from 'configs/svgIcons';\r\nimport SuccessSubmit from 'views/app-views/UserManagement/AddNewStaffV2/AsiignShift/SuccessSubmit';\r\nimport moment from 'moment'\r\nimport axios from 'axios';\r\nimport { useEffect } from 'react';\r\n\r\n\r\n// const getBase64 = (file) =>\r\n//     new Promise((resolve, reject) => {\r\n//         const reader = new FileReader();\r\n//         reader.readAsDataURL(file);\r\n//         reader.onload = () => resolve(reader.result);\r\n//         reader.onerror = (error) => reject(error);\r\n//     });\r\nfunction AddNewUser(props) {\r\n\r\n    const [form] = Form.useForm()\r\n    const [previewOpen, setPreviewOpen] = useState(false);\r\n    const [previewImage, setPreviewImage] = useState('');\r\n    const [previewTitle, setPreviewTitle] = useState('');\r\n    const [fileList, setFileList] = useState([])\r\n    const [selectedAssociateType, setSelectedAssociateType] = useState('Individual');\r\n    const tok = localStorage.getItem('token')\r\n    const param = useParams()\r\n    const [documentUrl, setDocumentUrl] = useState(\"\");\r\n    const [customerData, setCustomerData] = useState({});\r\n    const history = useHistory()\r\n    const [statusActive, setStatusActive] = useState(true);\r\n    const [isEdit, setIsEdit] = useState(false);\r\n\r\n    const handleCancel = () => setPreviewOpen(false);\r\n\r\n    const handleChange = ({ fileList: newFileList }) => {\r\n        setFileList(newFileList)\r\n        console.log(newFileList);\r\n        const formData = new FormData();\r\n\r\n        if(newFileList.length > 0) {\r\n            // if(newFileList[0].url){\r\n            //     console.log(\"check-1\")\r\n            //     setDocumentUrl(newFileList[0].url);\r\n            //     return;\r\n            // }\r\n            \r\n            formData.append(\"file\", newFileList[0].originFileObj);\r\n            axios({\r\n                method: \"post\",\r\n                url: \"/api/tc/upload-document\",\r\n                data: formData,\r\n                headers: {\r\n                    \"content-type\": `multipart/form-data`,\r\n                    Authorization: `Bearer ${tok}`,\r\n                },\r\n                })\r\n                .then(function (response) {\r\n                    console.log(response.data);\r\n                    if (response.data.success) {\r\n                    setDocumentUrl(response.data.url);\r\n                    }\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                });\r\n        }\r\n    };\r\n\r\n    const uploadButton = (\r\n        <div>\r\n            <PlusOutlined />\r\n            <div\r\n                style={{\r\n                    marginTop: 8,\r\n                    width: '250px'\r\n                }}\r\n            >\r\n                Upload Picture\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    const [showAddedSuccess, setShowAddedSuccess] = useState(false);\r\n\r\n    const finishHandler = (e) => {\r\n        if(param.customer_id) {\r\n            axios({\r\n                method: 'post',\r\n                url: \"/api/tc/new-customer-user\",\r\n                data: {\r\n                    tc_customer_id: +param.customer_id,\r\n                    name: e.userName,\r\n                    profile_pic: documentUrl,\r\n                    email: e.EmailId,\r\n                    phone: String(e.PhoneNumber),\r\n                    nric_fin: e.associate_type == 'Individual' ? e.nrixfin : e.uen_number,\r\n                    dob: null,\r\n                    job_sites: [1],\r\n                    status: statusActive ? \"Active\":\"Inactive\",\r\n                    associate_type: e.associate_type,\r\n                    uen_number: e.uen_number,\r\n                    \r\n                    residnecy_status: e.associate_type,\r\n                    nationality: e.uen_number,\r\n                    gender: e.office_contact_number,\r\n                    // job_sites: e.office_contact_number,\r\n                    // dob: moment(e.dob).format('YYYY-MM-DD'),\r\n                    // gender: e.gender === 1 ? 'Male':'Female',\r\n                },\r\n                headers: {\r\n                    Authorization: `Bearer ${tok}`\r\n                },\r\n            }).then(function (response) {\r\n                console.log(response.data);\r\n                if(response.data.success) {\r\n                    setShowAddedSuccess(true)\r\n                    setTimeout(() => {\r\n                        setShowAddedSuccess(false)\r\n                        history.goBack()\r\n                    }, 1500);\r\n                } else {\r\n                    message.error(response.data.msg)\r\n                }\r\n            }).catch(function (error) {\r\n                console.log(error);\r\n            });\r\n        } else {\r\n            axios({\r\n                method: 'post',\r\n                url: \"/api/tc/update-customer-user\",\r\n                data: {\r\n                    id: param.id,\r\n                    tc_customer_id: customerData.id,\r\n                    name: e.userName,\r\n                    profile_pic: documentUrl,\r\n                    email: e.EmailId,\r\n                    phone: String(e.PhoneNumber),\r\n                    nric_fin:  e.associate_type == 'Individual' ? e.nrixfin : e.uen_number,\r\n                    dob: moment(e.dob).format('YYYY-MM-DD'),\r\n                    job_sites: [1],\r\n                    status: statusActive ? \"Active\" : \"Inactive\",\r\n                    associate_type: e.associate_type,\r\n                    uen_number: e.uen_number,\r\n\r\n                    residnecy_status: e.associate_type,\r\n                    nationality: e.uen_number,\r\n                    gender: e.office_contact_number,\r\n                },\r\n                headers: {\r\n                    Authorization: `Bearer ${tok}`\r\n                },\r\n            }).then(function (response) {\r\n                if(response.data.success) {\r\n                    setShowAddedSuccess(true)\r\n                    setTimeout(() => {\r\n                        setShowAddedSuccess(false)\r\n                        history.goBack()\r\n                    }, 1500);\r\n                } else {\r\n                    message.error(response.data.msg)\r\n                }\r\n            }).catch(function (error) {\r\n                console.log(error);\r\n            });\r\n        }\r\n    }\r\n\r\n    const getCustomerData = (id) => {\r\n        console.log(id)\r\n        axios({\r\n            method: 'post',\r\n            url: \"/api/tc/get-customer\",\r\n            data: {\r\n                id: id\r\n            },\r\n            headers: {\r\n                Authorization: `Bearer ${tok}`\r\n            },\r\n        }).then(function (response) {\r\n            let res = response.data.data;\r\n            if (response.data.success) {\r\n                form.setFieldsValue({\r\n                    customerName: res.name\r\n                })\r\n                setCustomerData(res)\r\n            }\r\n        }).catch(function (error) {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    const getCustomerUserData = () => {\r\n        console.log(param.id)\r\n        axios({\r\n            method: 'post',\r\n            url: \"/api/tc/get-customer-user\",\r\n            data: {\r\n                id: param.id\r\n            },\r\n            headers: {\r\n                Authorization: `Bearer ${tok}`\r\n            },\r\n        }).then(function (response) {\r\n            let res = response.data.data;\r\n            if (response.data.success) {\r\n                form.setFieldsValue({\r\n                    customerName: res.name,\r\n                    EmailId: res.email,\r\n                    userName: res.name,\r\n                    PhoneNumber: res.phone,\r\n                    residency: res.residnecy_status,\r\n                    nrixfin: res.nric_fin,\r\n                    nationality: res.nationality,\r\n                    dob: moment(res.dob),\r\n                    gender: res.gender === 'Male' ? 1 : 2,\r\n                    jobSite: res.job_sites,\r\n                    status: res.status === 'Active' ? true : false,\r\n                    profile_pic: res?.profile_pic,\r\n                    associate_type: res?.associate_type || res?.residnecy_status,\r\n                    uen_number: res?.uen_number || res?.nationality,\r\n                    office_contact_number: res?.office_contact_number || res?.gender,\r\n                })\r\n                setDocumentUrl(res.profile_pic)\r\n                if(res.profile_pic) setFileList([{url:res.profile_pic}])\r\n                setStatusActive(form.getFieldValue().status)\r\n                getCustomerData(res.tc_customer_id)\r\n                // getAllJobSites(res.tc_customer_id)\r\n                console.log(res.tc_customer_id)\r\n            }\r\n            \r\n        }).catch(function (error) {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    const handleStatusChange = (checked) => {\r\n        setStatusActive(checked)\r\n      }\r\n\r\n    useEffect(() => {\r\n        if(param.id) {\r\n            getCustomerUserData()\r\n            setIsEdit(true)\r\n        }\r\n        if(param.customer_id) {\r\n            getCustomerData(param.customer_id)\r\n            setIsEdit(false)\r\n        }\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <PageHeading\r\n                // icon={UserManagementIcon}\r\n                title={isEdit ? \"Edit Associate Customer\":\"Add New Associate Customer\"}\r\n            />\r\n            <Form\r\n                form={form}\r\n                labelCol={{\r\n                    span: 10,\r\n                }}\r\n                wrapperCol={{\r\n                    span: 18,\r\n                }}\r\n                layout=\"vertical\"\r\n                onFinish={finishHandler}\r\n            >\r\n                <Card className=\"mt-3\">\r\n                    <div className=\"d-flex justify-content-end\" style={{color: 'red'}}>\r\n                      <div>* Indicates Mandatory Fields</div>\r\n                    </div>\r\n\r\n                    <Row\r\n                        align='bottom'\r\n                    >\r\n                        <Col span={12} >\r\n                            <Form.Item name='photo' label='Profile Picture'>\r\n                                <Upload\r\n                                    // onPreview={handlePreview}\r\n                                    listType=\"picture-card\"\r\n                                    fileList={fileList}\r\n                                    accept=\"image/*\"\r\n                                    onChange={handleChange}\r\n                                    maxCount={1}\r\n                                    beforeUpload={() => {\r\n                                        return false;\r\n                                    }}\r\n                                    showUploadList={{\r\n                                        showPreviewIcon: false,\r\n                                    }}\r\n                                >\r\n                                    {fileList.length >= 1 ? null : uploadButton}\r\n                                </Upload>\r\n                                <Modal open={previewOpen} title={previewTitle} footer={null} onCancel={handleCancel}>\r\n                                    <img\r\n                                        alt=\"example\"\r\n                                        style={{\r\n                                            width: '100%',\r\n                                        }}\r\n                                        src={previewImage}\r\n                                    />\r\n                                </Modal>\r\n                            </Form.Item>\r\n                            {/* <div>\r\n                                <Button onClick={()=> {\r\n                                    // setDocumentUrl('');\r\n                                    setFileList([]);\r\n                                    handleChange(fileList);\r\n                                }}>\r\n                                    Delete Picture\r\n                                </Button>\r\n                            </div> */}\r\n\r\n                            {/* <Form.Item name='customerName' label='Customer Name'>\r\n                                <Input disabled/>\r\n                            </Form.Item> */}\r\n                            <Form.Item name='associate_type' label='Associate Type'>\r\n                                <Select\r\n                                    showSearch\r\n                                    placeholder=\"Associate Type\"\r\n                                    optionFilterProp=\"children\"\r\n                                    filterOption={(input, option) => (option?.title ?? '').toString().toLowerCase()?.includes(input?.toLowerCase())}\r\n                                    filterSort={(optionA, optionB) =>\r\n                                        (optionA?.label ?? '').toString().toLowerCase().localeCompare((optionB?.label ?? '').toString().toLowerCase())\r\n                                    }\r\n                                    value={selectedAssociateType}\r\n                                    onChange={setSelectedAssociateType}\r\n                                >\r\n                                    <Select.Option value={'Individual'}>Individual</Select.Option>\r\n                                    <Select.Option value={'Company'}>Company</Select.Option>\r\n                                </Select>\r\n                            </Form.Item>\r\n\r\n                            <Form.Item name='EmailId' label='Email Id' rules={[{ required: true, type: 'email', message: 'Please input your valid email id!' }]}>\r\n                                <Input />\r\n                            </Form.Item>\r\n\r\n                            <Form.Item name='office_contact_number' label='Office Contact Number' rules={[{ required: true, message: 'Please input Office Contact Number!' }]}>\r\n                                <Input />\r\n                            </Form.Item>\r\n                            \r\n                            \r\n                        </Col>\r\n                        <Col span={12} >\r\n                            <Form.Item name='userName' label='Name' rules={[{ required: true, message: 'Please input Name!' }]}>\r\n                                <Input />\r\n                            </Form.Item>\r\n                            \r\n                            <Form.Item name='PhoneNumber' label='Phone Number' rules={[{ required: true, message: 'Please input Phone number!' },\r\n                            {\r\n                                message: 'Phone number must have atleast 8 digits',\r\n                                validator: (_, value) => {\r\n                                    if (/^\\d{8,}$/.test(Number(value))) {\r\n                                        return Promise.resolve();\r\n                                    } else {\r\n                                        return Promise.reject('Some message here');\r\n                                    }\r\n                                }\r\n                            }]}>\r\n                                <Input style={{ width: \"100%\" }} minLength={8} />\r\n                            </Form.Item>\r\n                            {/* <Form.Item name='residency' label='Residency Status'>\r\n                                <Select>\r\n                                    <Select.Option value='PERMANENT RESIDENT' >PERMANENT RESIDENT</Select.Option>\r\n                                    <Select.Option value='CITIZEN' >CITIZEN</Select.Option>\r\n                                    <Select.Option value='FOREIGNER' >NON-native/Expat</Select.Option>\r\n                                </Select>\r\n                            </Form.Item> */}\r\n                            {selectedAssociateType === 'Individual' && <Form.Item name='nrixfin' label='NRIC/FIN' rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'The NRIC/FIN is required.',\r\n                                },\r\n                                {\r\n                                    message: 'First letter of the NRIC/FIN must contain either S, T, F, G, M, followed by 7 digits and ends with a capital letter',\r\n                                    validator: (_, value) => {\r\n                                        if (/^[STFGM]\\d{7}[A-Z]$/.test(value)) {\r\n                                            return Promise.resolve();\r\n                                        } else {\r\n                                            return Promise.reject('Some message here');\r\n                                        }\r\n                                    }\r\n                                }\r\n                            ]}>\r\n                                <Input />\r\n                            </Form.Item>}\r\n                            {selectedAssociateType === 'Company' && <Form.Item name='uen_number' label='UEN Number' rules={[{ required: true, message: 'The UEN Number is required!' }]}>\r\n                                <Input />\r\n                            </Form.Item>}\r\n\r\n                            \r\n                            {/* <Form.Item name='nationality' label='Nationality' rules={[{ required: true, message: 'Please input your nationality!' }]}>\r\n                                <Select>\r\n                                    <Select.Option value='India' >India</Select.Option>\r\n                                    <Select.Option value='China' >China</Select.Option>\r\n                                    <Select.Option value='Singapore' >Singapore</Select.Option>\r\n                                </Select>\r\n                            </Form.Item> */}\r\n                            {/* <Form.Item name='dob' label='Date of Birth' rules={[{ required: true, message: 'Please input your date of birth!' }]}>\r\n                                <DatePicker disabledDate={(current) => current && current >= moment().startOf('day')} format='DD/MM/YYYY' />\r\n                            </Form.Item> */}\r\n                            {/* <Form.Item name='gender' label='Gender' style={{alignContent: 'start'}}>\r\n                                <Radio.Group name=\"genderGroup\" defaultValue={1}>\r\n                                    <Radio value={1}><Icon component={BoyIcon} /> Male</Radio>\r\n                                    <Radio value={2}><Icon component={GirlIcon} /> Female</Radio>\r\n                                </Radio.Group>\r\n                            </Form.Item> */}\r\n                        </Col>\r\n                    </Row>\r\n                    <Row align=\"bottom\">\r\n                        <Col span={12}>\r\n                            <Form.Item name=\"status\" label=\"Status\" style={{alignContent: 'start'}}>\r\n                            {statusActive ? \"ACTIVE\":\"INACTIVE\"}<Switch checked={statusActive} onClick={handleStatusChange} className=\"ml-2\"/>\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                </Card>\r\n\r\n                <Form.Item className={`d-flex align-items-end Button`}>\r\n                    <Button onClick={history.goBack}>Back</Button>\r\n                    <Button\r\n                        onClick={() => {\r\n                            form.resetFields();\r\n                            setFileList([])\r\n                        }}\r\n                        className='mx-3'\r\n                    >Clear All</Button>\r\n\r\n                    <Button type=\"primary\" htmlType=\"submit\">Save</Button>\r\n                </Form.Item>\r\n            </Form>\r\n\r\n            <Modal centered visible={showAddedSuccess} footer={[null]} onCancel={() => { setShowAddedSuccess(false) }}>\r\n                {param.customer_id && <SuccessSubmit icon={Successfully} title=\"Customer Added Successfully!\" desc='Customer is added in the system' />}\r\n                {param.id && <SuccessSubmit icon={Successfully} title=\"Customer updated Successfully!\" desc='Customer is updated in the system' />}\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewUser","import React, { useState, useEffect } from \"react\";\r\nimport { Table } from \"antd\";\r\nimport Icon from \"@ant-design/icons\";\r\nimport { VisibilityIcon, DeleteIcon, EditIcon } from \"assets/svg/ActionsSvg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport EllipsisDropdown from \"components/shared-components/EllipsisDropdown/index\";\r\nimport { Menu } from \"antd\";\r\nimport { Button, Modal, Card } from \"antd\";\r\nimport { IN, SG, CN } from 'country-flag-icons/react/3x2'\r\nimport { BoyIcon, GirlIcon } from \"assets/svg/icon\";\r\nimport { Avatar } from 'antd';\r\nimport { PlusIconBlue } from \"assets/svg/icon\";\r\nimport Title from \"antd/lib/typography/Title\";\r\nimport { useHistory , useRouteMatch} from \"react-router-dom\";\r\n// import { InvoiceIcon } from \"views/app-views/UserManagement/SvgIcons\";\r\n// import { useHistory } from \"react-router-dom\";\r\n\r\n\r\nfunction CustomerUsers({ custId, searchText }) {\r\n  const [paymentsData, setPaymentsData] = useState([]);\r\n  const [openDeleteModal, setOpenDeleteModal] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n  // const [cpage, setCpage] = useState(0);\r\n  // const [showAddedSuccess, setShowAddedSuccess] = useState(false);\r\n  // const history = useHistory()\r\n  const [userData, setUserData] = useState([]);\r\n  // const [showModal, setShowModal] = useState(false);\r\n  const history = useHistory();\r\n  const match = useRouteMatch();\r\n\r\n  const tok = localStorage.getItem(\"token\");\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Sr No\",\r\n      dataIndex: \"sr_no\",\r\n    },\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"userId\",\r\n    },\r\n    // {\r\n    //   title: \"\",\r\n    //   dataIndex: \"img\",\r\n    //   render: (item) => {\r\n    //     const { image, name } = item;\r\n    //     return (\r\n    //       <div className='d-flex align-items-center'>\r\n    //        <Avatar src={image} />\r\n    //       </div>\r\n    //     );\r\n    //   },\r\n    // },\r\n    {\r\n      title: \"Associate Name\",\r\n      dataIndex: \"userName\",\r\n    },\r\n    {\r\n      title: \"Address\",\r\n      dataIndex: \"\",\r\n      render: (item) =>{\r\n        return <div>{\"-\"}</div>\r\n      }\r\n    },\r\n\r\n    {\r\n      title: \"Contact Number\",\r\n      dataIndex: \"mobileNumber\",\r\n    },\r\n    {\r\n      title: \"Associate Type\",\r\n      dataIndex: \"associate_type\",\r\n    },\r\n    {\r\n      title: \"Status\",\r\n      dataIndex: \"status\",\r\n      render: (_,record) => {\r\n        if(record.status==='Inactive' || record.status==='INACTIVE') return <span style={{color: '#F53434', backgroundColor: '#FFF2F2', padding: '4px 8px', borderRadius:'6px', fontWeight:'600', fontSize: '14px'}}>Inactive</span>\r\n        else return <span style={{color: \"#00AB6F\", backgroundColor: \"#EDFFF9\", padding: '4px 8px', borderRadius:'6px', fontWeight:'600', fontSize: '14px'}}>Active</span>\r\n      }\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      // dataIndex: \"action\",\r\n      render: (_,record) => {\r\n        return (\r\n          <>\r\n            <EllipsisDropdown\r\n              menu={\r\n                <Menu>\r\n                  <Menu.Item>\r\n                    <Link\r\n                      to={`/app/customer-management/customer-accounts/edit-associate-customer/${record.userId}`}\r\n                      className=\"d-flex align-items-center\"\r\n                    >\r\n                      <Icon className=\"mr-2\" component={EditIcon} />\r\n                      Edit\r\n                    </Link>\r\n                  </Menu.Item>\r\n                  <Menu.Item\r\n                    onClick={() => {\r\n                      ShowDeleteModal();\r\n                    }}\r\n                  >\r\n                    <span className=\"d-flex align-items-center\">\r\n                      <Icon className=\"mr-2\" component={DeleteIcon} />\r\n                      Delete\r\n                    </span>\r\n                  </Menu.Item>\r\n\r\n                  <Modal\r\n                    visible={openDeleteModal}\r\n                    onCancel={handleCancel}\r\n                    centered\r\n                    footer={[\r\n                      <Button\r\n                        style={{ color: \"#000B23\" }}\r\n                        onClick={handleCancel}\r\n                        className=\"font-weight-bold\"\r\n                      >\r\n                        No, Cancel\r\n                      </Button>,\r\n                      <Button\r\n                        type=\"primary\"\r\n                        className=\"font-weight-bold\"\r\n                        onClick={()=>handleOk(record.userId)}\r\n                      >\r\n                        Yes, Confirm\r\n                      </Button>,\r\n                    ]}\r\n                  >\r\n                    <div\r\n                      style={{ color: \"#000B23\" }}\r\n                      className=\"font-weight-bolder font-size-md\"\r\n                    >\r\n                      Are you sure you want to delete this customer user?\r\n                    </div>\r\n                  </Modal>\r\n                </Menu>\r\n              }\r\n            />\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const handleCancel = () => {\r\n    setOpenDeleteModal(false);\r\n  };\r\n\r\n  const handleOk = (associate_id) => {\r\n    console.log(associate_id)\r\n    setOpenDeleteModal(false);\r\n    axios\r\n      .post(\r\n        \"/api/tc/delete-customer-users\",\r\n        {\r\n          id: associate_id\r\n        },\r\n      )\r\n      .then((response) => {\r\n        let res = response.data\r\n        console.log(res)\r\n        if(res.success) {\r\n          getAllAssociateCustomers()\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const ShowDeleteModal = () => {\r\n    setOpenDeleteModal(true);\r\n  };\r\n\r\n  const addNewAssociateCustomer = () => {\r\n    history.push(`/app/customer-management/customer-accounts/add-new-associate-customer/${custId}`);\r\n  }\r\n\r\n  const getAllAssociateCustomers = () => {\r\n    const data = { \r\n      customer_id: custId,\r\n      page_index: page,\r\n      page_size: 10,\r\n      search: searchText\r\n   };\r\n  axios({\r\n    method: \"post\",\r\n    url: \"/api/tc/get-customer-users\",\r\n    data: data,\r\n    headers: {\r\n      Authorization: `Bearer ${tok}`,\r\n    },\r\n  })\r\n    .then((response) => {\r\n      console.log(response.data);\r\n      let res = response.data.data.data;\r\n\r\n      let fdata = res.map((elem, ind) => {\r\n        return {\r\n          sr_no: ind+1,\r\n          key: ind,\r\n          userId: elem.id,\r\n          userName: elem.name,\r\n          gender: <Icon component={elem.gender === 'Male' ? BoyIcon : GirlIcon} />,\r\n          nationality: \r\n            elem.nationality === 'India' ? <IN title=\"SG\" className=\"countrtFlag\" />\r\n            : elem.nationality === 'Singapore' ? <SG title=\"SG\" className=\"countrtFlag\" />\r\n            : <CN title=\"SG\" className=\"countrtFlag\" />\r\n          ,\r\n          img: { image: elem.profile_pic, name: elem.name },\r\n          mobileNumber: elem.phone,\r\n          emailId: elem.email,\r\n          jobSite: elem.job_sites,\r\n          status: elem.status,\r\n          associate_type: elem.associate_type || elem.residnecy_status,\r\n          uen_neumber: elem.uen_neumber || elem.nationality,\r\n          office_contact_number: elem.office_contact_number || elem.gender,\r\n        };\r\n      });\r\n      console.log(res)\r\n      setUserData(userData.concat(fdata));\r\n    })\r\n    .then((err) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    const data = { \r\n        customer_id: custId,\r\n        page_index: page,\r\n        page_size: 10,\r\n     };\r\n    axios({\r\n      method: \"post\",\r\n      url: \"/api/tc/get-customer-users\",\r\n      data: data,\r\n      headers: {\r\n        Authorization: `Bearer ${tok}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        let res = response.data.data.data;\r\n\r\n        let fdata = res.map((elem, ind) => {\r\n          return {\r\n            sr_no: ind+1,\r\n            key: ind,\r\n            userId: elem.id,\r\n            userName: elem.name,\r\n            gender: <Icon component={elem.gender === 'Male' ? BoyIcon : GirlIcon} />,\r\n            nationality: \r\n              elem.nationality === 'India' ? <IN title=\"SG\" className=\"countrtFlag\" />\r\n              : elem.nationality === 'Singapore' ? <SG title=\"SG\" className=\"countrtFlag\" />\r\n              : <CN title=\"SG\" className=\"countrtFlag\" />\r\n            ,\r\n            img: { image: elem.profile_pic, name: elem.name },\r\n            mobileNumber: elem.phone,\r\n            emailId: elem.email,\r\n            jobSite: elem.job_sites,\r\n            status: elem.status,\r\n          };\r\n        });\r\n        console.log(res)\r\n        setUserData(userData.concat(fdata));\r\n      })\r\n      .then((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getAllAssociateCustomers();\r\n  }, [searchText]);\r\n\r\n  return (\r\n    <div>\r\n      <Table\r\n        // scroll={{ x: 1100 }}\r\n        // rowSelection={rowSelection}\r\n        columns={columns}\r\n        dataSource={userData}\r\n      />\r\n\r\n      <Card className=\"mt-2\">\r\n          <Button\r\n            block\r\n            type=\"dashed\"\r\n            className=\"d-flex align-items-center justify-content-center pt-4 pb-4\"\r\n            onClick={addNewAssociateCustomer}\r\n          >\r\n            <Icon component={PlusIconBlue} />\r\n            <Title level={3} className=\"mb-0\" style={{ color: \"#0E7CEB\" }}>\r\n              <b>Add New Associate Customer</b>\r\n            </Title>\r\n          </Button>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomerUsers;","import { Table, Typography, Card, Button } from 'antd'\r\nimport axios from 'axios'\r\nimport React, { useState } from 'react'\r\nimport { useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport ActionForJobSiteOnly from '../JobSites/ActionForJobSiteOnly'\r\nimport ActionJobsite from './ActionJobsite'\r\nconst { Title, Text } = Typography;\r\n\r\nfunction CustomerBasicDetails() {\r\n    const tok = localStorage.getItem('token')\r\n    const param = useParams()\r\n    const [page, setPage] = useState(1);\r\n    const [cpage, setCpage] = useState(0);\r\n    const [customerData, setCustomerData] = useState({})\r\n    \r\n    console.log(param.id)\r\n    // const [jobSiteData, setjobSiteData] = useState([])\r\n    // const [selectedRowKeys, setSelectedRowKeys] = useState([]);\r\n\r\n\r\n    const getCustomer = () => {\r\n        axios({\r\n            method: 'post',\r\n            url: \"/api/tc/get-customer\",\r\n            headers: {\r\n                Authorization: `Bearer ${tok}`\r\n            },\r\n            data: {\r\n                id:param.id\r\n            },\r\n        }).then((response) => {\r\n            console.log(response.data)\r\n            if (response.data.success) {\r\n                if(response.data.data.other_details) {\r\n                    let other_details = JSON.parse(response.data.data.other_details);\r\n                    let res = {...response.data.data, ...other_details}\r\n                    setCustomerData(res);\r\n                    return;\r\n                }\r\n                setCustomerData(response.data.data);\r\n            } else {\r\n                console.log(response)\r\n            }\r\n        });\r\n    }\r\n\r\n    // const handlechange = (pagination) => {\r\n    //     if (cpage <= pagination.current) {\r\n    //         setPage(pagination.current)\r\n    //         setCpage(pagination.current)\r\n    //     }\r\n    // }\r\n\r\n    useEffect(() => {\r\n        getCustomer()\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Card style={{ background: \"#FAFAFB\", textAlign: 'start' }} >\r\n                <div className='d-flex justify-content-between'>\r\n                    <div className='w-25'>\r\n                        <div className='d-flex justify-content-start my-1'>\r\n                            <h5>Customer Company: &emsp;</h5>\r\n                        </div>\r\n                        <div className='d-flex justify-content-start my-1'>\r\n                            <h5>Contact Person: &emsp;</h5>\r\n                        </div>\r\n                        <div className='d-flex justify-content-start my-1'>\r\n                            <h5>Email ID: &emsp;</h5>\r\n                        </div>\r\n                        <div className='d-flex justify-content-start my-1'>\r\n                            <h5>Phone Number: &emsp;</h5>\r\n                        </div>\r\n                        <div className='d-flex justify-content-start my-1'>\r\n                            <h5>Office Contact Number: &emsp;</h5>\r\n                        </div>\r\n                        <div className='d-flex justify-content-start my-1'>\r\n                            <h5>UEN: &emsp;</h5>\r\n                        </div>\r\n                        <div className='d-flex justify-content-start my-1'>\r\n                            <h5>Created By: &emsp;</h5>\r\n                        </div>\r\n                    </div>\r\n                    <div className='w-75'>\r\n                        <div className='d-flex justify-content-start my-1'>\r\n                            <h5>{ customerData.name }</h5>\r\n                        </div>\r\n                        <div className='d-flex justify-content-start my-1'>\r\n                            <h5>{ customerData.contact_name }</h5>\r\n                        </div>\r\n                        <div className='d-flex justify-content-start my-1'>\r\n                            <h5>{ customerData.email }</h5>\r\n                        </div>\r\n                        <div className='d-flex justify-content-start my-1'>\r\n                            <h5>{ customerData.phone }</h5>\r\n                        </div>\r\n                        <div className='d-flex justify-content-start my-1'>\r\n                            <h5>{ customerData.office_contact_number }</h5>\r\n                        </div>\r\n                        <div className='d-flex justify-content-start my-1'>\r\n                            <h5>{ customerData.uen_number || '####' }</h5>\r\n                        </div>\r\n                        <div className='d-flex justify-content-start my-1'>\r\n                            <h5>{ customerData.created_by }</h5>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Card>\r\n\r\n            <Card style={{ background: \"#FAFAFB\", textAlign: 'start', marginTop: '20px' }} >\r\n                <h4><strong>Customer Address</strong></h4>\r\n\r\n                <div className='d-flex justify-content-between'>\r\n                    <div className='w-25'>\r\n                        <div className='d-flex justify-content-start my-1'>\r\n                            <h5>Pincode: &emsp;</h5>\r\n                        </div>\r\n                        <div className='d-flex justify-content-start my-1'>\r\n                            <h5>Unit Number: &emsp;</h5>\r\n                        </div>\r\n                        <div className='d-flex justify-content-start my-1'>\r\n                            <h5>Street Number: &emsp;</h5>\r\n                        </div>\r\n                        <div className='d-flex justify-content-start my-1'>\r\n                            <h5>Block Number: &emsp;</h5>\r\n                        </div>\r\n                        <div className='d-flex justify-content-start my-1'>\r\n                            <h5>Country: &emsp;</h5>\r\n                        </div>\r\n                    </div>\r\n                    <div className='w-75'>\r\n                        <div className='d-flex justify-content-start my-1'>\r\n                            <h5>{ customerData.postal_code }</h5>\r\n                        </div>\r\n                        <div className='d-flex justify-content-start my-1'>\r\n                            <h5>{ customerData.unit_number }</h5>\r\n                        </div>\r\n                        <div className='d-flex justify-content-start my-1'>\r\n                            <h5>{ customerData.street_number }</h5>\r\n                        </div>\r\n                        <div className='d-flex justify-content-start my-1'>\r\n                            <h5>{ customerData.block_number }</h5>\r\n                        </div>\r\n                        <div className='d-flex justify-content-start my-1'>\r\n                            <h5>{ customerData.country }</h5>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Card>\r\n\r\n            <Card style={{ background: \"#FAFAFB\", textAlign: 'start', marginTop: '20px' }} >\r\n                <h4><strong>Uploaded File</strong></h4>\r\n\r\n                {customerData.uploaded_file ? <div className='d-flex justify-content-start'>\r\n                    <Button onClick={() => {\r\n                        console.log(\"Viewing Attachment...\");\r\n                        if(customerData.uploaded_file) window.open(customerData.uploaded_file.url);\r\n                    }}>\r\n                        View Uploaded File\r\n                    </Button>\r\n                </div> : <div>No Uploaded files</div>}\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomerBasicDetails","import { Table, Modal } from 'antd'\r\nimport axios from 'axios'\r\nimport React, { useState } from 'react'\r\nimport { useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport ActionForJobSiteOnly from '../JobSites/ActionForJobSiteOnly'\r\nimport SuccessSubmit from 'views/app-views/UserManagement/AddNewStaffV2/AsiignShift/SuccessSubmit'\r\nimport { Successfully } from \"configs/svgIcons\";\r\n// import ActionJobsite from './ActionJobsite'\r\n\r\nfunction JobSiteTable({searchText, customer_id, setShowModal, setEditjobfield, form, shiftLocations, jobSiteData, setjobSiteData}) {\r\n\r\n    // const [jobSiteData, setjobSiteData] = useState([])\r\n    const [showDeletedSuccess, setShowDeletedSuccess] = useState(false);\r\n    const tok = localStorage.getItem('token')\r\n    const param = useParams()\r\n    console.log(param.id)\r\n    const [page, setPage] = useState(1);\r\n    const [cpage, setCpage] = useState(0)\r\n\r\n    const columns = [\r\n        {\r\n          title: \"Jobsite ID\",\r\n          dataIndex: \"id\",\r\n        },\r\n        {\r\n          title: \"Jobsite Name\",\r\n          dataIndex: \"name\",\r\n        },\r\n        {\r\n          title: \"Address\",\r\n          dataIndex: \"address\",\r\n          width: 150,\r\n        },\r\n        {\r\n          title: \"Company\",\r\n          dataIndex: \"customer_name\",\r\n        },\r\n        {\r\n          title: \"Staff Assign\",\r\n          dataIndex: \"total_staffs\",\r\n          width: 120,\r\n        },\r\n        {\r\n          title: \"Tasks\",\r\n          dataIndex: \"total_tasks\",\r\n        },\r\n        {\r\n          title: \"Status\",\r\n          dataIndex: \"status\",\r\n          render: (_,record) => {\r\n            if(record.status==='ACTIVE') return <span style={{color: \"#00AB6F\", backgroundColor: \"#EDFFF9\", padding: '4px 8px', borderRadius:'6px', fontWeight:'600', fontSize: '14px'}}>Active</span>\r\n            else return <span style={{color: '#F53434', backgroundColor: '#FFF2F2', padding: '4px 8px', borderRadius:'6px', fontWeight:'600', fontSize: '14px'}}>Inactive</span>\r\n          }\r\n        },\r\n        {\r\n          title: \"Action\",\r\n          dataIndex: \"action\",\r\n          render: (_, record) => {\r\n            return (\r\n              <ActionForJobSiteOnly\r\n                record ={record}\r\n                id={record.id}\r\n                customer_id={record.tc_customer_id}\r\n                onEdit={editHandler}\r\n                onDelete={deleteHandler}\r\n                idFromProp={jobSiteData.id}\r\n                setShowModal={setShowModal}\r\n                viewDetails={setShowModal ? false : true}\r\n                form={form}\r\n                JobSites={jobSiteData}\r\n                shiftLocations={shiftLocations}\r\n                getJobSites={getJobSites}\r\n              />\r\n            );\r\n          },\r\n        },\r\n      ];\r\n\r\n    const getJobSites = (currPage) => {\r\n        console.log(customer_id)\r\n        axios({\r\n            method: 'post',\r\n            url: \"/api/tc/get-customer-job-sites\",\r\n            // headers: {\r\n            //     Authorization: `Bearer ${tok}`\r\n            // },\r\n            data: {\r\n                customer_id: customer_id,\r\n                page_index: currPage,\r\n                page_size: 15,\r\n                search : searchText?searchText:null\r\n            }\r\n        }).then((response) => {\r\n            console.log(\"Jobsite data: \",response.data.data.data)\r\n            if (response.data.success) {\r\n                if (currPage===1) {\r\n                    setjobSiteData(response.data.data.data)\r\n                }else{\r\n                    setjobSiteData([...jobSiteData,...response.data.data.data])\r\n                }\r\n            }\r\n        }).catch((err) => {\r\n            console.log(err)\r\n        });\r\n    }\r\n\r\n    const handlechange = (pagination) => {\r\n        if (cpage <= pagination.current) {\r\n            setPage(pagination.current)\r\n            setCpage(pagination.current)\r\n        }\r\n    }\r\n\r\n    const editHandler = (id) => {\r\n        setEditjobfield(id);\r\n        console.log(\"edithand\");\r\n    }\r\n\r\n    const deleteHandler = async (id) => {\r\n        try {\r\n          axios\r\n            .post(\r\n              \"/api/tc/delete-customer-job-site\",\r\n              {\r\n                id: id\r\n              },\r\n              {\r\n                headers: {\r\n                  \"content-type\": \"application/json\",\r\n                  Authorization: `Bearer ${tok}`\r\n                },\r\n              }\r\n            )\r\n            .then((response) => {\r\n              console.log(response);\r\n            })\r\n            .catch((error) => {\r\n              console.log(error);\r\n            });\r\n    \r\n        //   setCustomerAccountData((prev) => prev.filter((item) => item.id !== id));\r\n          setShowDeletedSuccess(true);\r\n          setTimeout(() => {\r\n            setShowDeletedSuccess(false);\r\n          }, 3000);\r\n        } catch (err) {\r\n          console.log(err.message);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getJobSites()\r\n    }, [page])\r\n    useEffect(() => {\r\n        getJobSites(1)\r\n    }, [searchText])\r\n\r\n    return (\r\n        <div>\r\n            <Table scroll={\r\n                {x:1300}\r\n            } \r\n            rowKey={(row) => row.id}\r\n            columns={columns} dataSource={jobSiteData} onChange={handlechange} style={{overflow:'auto'}}/>\r\n\r\n            <Modal\r\n                centered\r\n                visible={showDeletedSuccess}\r\n                footer={[null]}\r\n                onCancel={() => {\r\n                setShowDeletedSuccess(false);\r\n                }}\r\n            >\r\n                <SuccessSubmit\r\n                icon={Successfully}\r\n                title=\"Job site deleted successfully!\"\r\n                desc=\"Job site ID deleted.\"\r\n                />\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JobSiteTable","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { AutoComplete, Input, message } from \"antd\";\r\nconst REACT_APP_GOOGLE_MAPS_KEY = \"AIzaSyCjkOwrACNg6Xvu01smliF39T6TvjZWuDE\"\r\n\r\nlet autoComplete;\r\n\r\nconst loadScript = (url, callback) => {\r\n  let script = document.createElement(\"script\");\r\n  script.type = \"text/javascript\";\r\n\r\n  if (script.readyState) {\r\n    script.onreadystatechange = function () {\r\n      if (script.readyState === \"loaded\" || script.readyState === \"complete\") {\r\n        script.onreadystatechange = null;\r\n        callback();\r\n      }\r\n    };\r\n  } else {\r\n    script.onload = () => callback();\r\n  }\r\n\r\n  script.src = url;\r\n  document.getElementsByTagName(\"head\")[0].appendChild(script);\r\n};\r\n\r\nconst LocationSearch = ({ setLocationData} ) => {\r\n    // console.log(value);\r\n      const [query, setQuery] = useState();\r\n      const autoCompleteRef = useRef(null);\r\n    \r\n      const handleScriptLoad = (updateQuery, autoCompleteRef) => {\r\n        autoComplete = new window.google.maps.places.Autocomplete(\r\n          autoCompleteRef.current,\r\n          {\r\n            // types: [\"(cities)\"],\r\n            componentRestrictions: { country: \"SGP\" },\r\n          }\r\n        );\r\n    \r\n        autoComplete.addListener(\"place_changed\", () => {\r\n          handlePlaceSelect(updateQuery);\r\n        });\r\n      };\r\n    \r\n      const handlePlaceSelect = async (updateQuery) => {\r\n          const addressObject = await autoComplete.getPlace();\r\n        //   console.log(addressObject);\r\n          const query = addressObject.formatted_address;      ;\r\n          \r\n        updateQuery(query);\r\n          const latLng = {\r\n          address:query,\r\n          latitude: addressObject?.geometry?.location?.lat(),\r\n          longitude: addressObject?.geometry?.location?.lng(),\r\n        };\r\n        setLocationData(latLng);\r\n      };\r\n    \r\n      useEffect(() => {\r\n        loadScript(\r\n          `https://maps.googleapis.com/maps/api/js?key=${REACT_APP_GOOGLE_MAPS_KEY}&libraries=places`,\r\n            () => handleScriptLoad(setQuery, autoCompleteRef)\r\n          \r\n        );\r\n        console.log(\"searching...\");\r\n      }, []);\r\n    \r\n      return (\r\n        <div >\r\n          <input\r\n            ref={autoCompleteRef}\r\n            className=\"w-100 p-2 rounded z-100\"\r\n            style={{border: '2px solid rgb(230, 235, 241)'}}\r\n            onChange={(event) => {\r\n                console.log(event.target.value)\r\n                setQuery(event.target.value)\r\n            }}\r\n            placeholder=\"Search Address ...\"\r\n            value={query}\r\n          />\r\n        </div>\r\n      );\r\n    };\r\n\r\nexport default LocationSearch","import { AutoComplete, Button, Card, Col, Form, Input, InputNumber, Row, Switch, Select, Modal, message } from \"antd\";\r\nimport Title from \"antd/lib/typography/Title\";\r\nimport { PlusIconBlue } from \"assets/svg/icon\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./CustomerAccounts.css\";\r\nimport Icon from \"@ant-design/icons\";\r\nimport country from \"./country\";\r\nimport axios from \"axios\";\r\nimport JobSiteTable from \"./JobSiteTable\";\r\nimport { useLocation, useHistory, useParams } from 'react-router-dom';\r\nimport Autocomplete, { usePlacesWidget }  from \"react-google-autocomplete\";\r\nimport LocationSearch from \"./LocationSearch\";\r\n\r\nfunction JobSites(props) {\r\n  const [editjobfield, setEditjobfield] = useState(null)\r\n  console.log(\"customer id: \", props.customer_id)\r\n  // const [tog, setTog] = useState(true)\r\n  // const [cus_tc_id, setCus_tc_id] = useState(null)\r\n  // const streetRef = useRef(null);\r\n  // const blockRef = useRef(null);\r\n  // const postalRef = useRef(null);\r\n  // const [streetField, setStreetField] = useState(null)\r\n  // const [blockField, setBlockfield] = useState(null)\r\n  // const [postalField, setPostalField] = useState(null)\r\n  // const [pincodeUpdate, setPincodeUpdate] = useState('');\r\n  // const [value, setValue] = useState('');\r\n  // let shiftLocations= [];\r\n\r\n  const [statusActive, setStatusActive] = useState(true);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [JobSites, setJobSites] = useState([]);\r\n  const [jobSiteData, setjobSiteData] = useState([])\r\n  const [shiftLocations, setShiftLocations] = useState([]);\r\n  const [locationData, setLocationData] = useState([]);\r\n  const [form] = Form.useForm();\r\n  const history = useHistory()\r\n  const search = useLocation().search;\r\n  const jobsite = new URLSearchParams(search).get('jobsite');\r\n  const tok = localStorage.getItem('token')\r\n  // const [options, setOptions] = useState([]);\r\n  const { ref, autocompleteRef } = usePlacesWidget({\r\n    apiKey: 'AIzaSyAk3d6-e4XyC7CoRgCbL_pwRWnKlKqqQuA',\r\n    onPlaceSelected: (place) => {\r\n      console.log(place);\r\n    },\r\n    googleMapsScriptBaseUrl: 'https://maps.googleapis.com/maps/api/js'\r\n  });\r\n\r\n  const finishHandler = (e) => {\r\n    console.log(e);\r\n    const address = e.address || `${e.street_number}, block no. ${e.block_number} postal code ${e.postal_code}, ${e.country}`\r\n    \r\n    if(editjobfield) {\r\n      let hrms_location_id = updateShiftLocation();\r\n      if(!hrms_location_id) {\r\n        message.error('Location cannot be updated')\r\n        return\r\n      }\r\n      axios\r\n        .post(\r\n          \"/api/tc/update-customer-job-site\",\r\n          {\r\n            id: +editjobfield,\r\n            tc_customer_id: props.customer_id,\r\n            name: e.name,\r\n            contact_number: e.contact_number,\r\n            block_number: e.block_number || '',\r\n            street_number: e.street_number || '',\r\n            level_number: e.level_number || '',\r\n            unit_number: e.unit_number || '',\r\n            postal_code: e.postal_code || '',\r\n            country: e.country || '',\r\n            address: address,\r\n            status: statusActive ? \"ACTIVE\":\"INACTIVE\",\r\n            hrms_location_id: hrms_location_id,\r\n          },\r\n          {\r\n            headers: {\r\n              \"content-type\": \"application/json\",\r\n              Authorization: `Bearer ${tok}`\r\n            },\r\n          }\r\n        )\r\n        .then((response) => {\r\n          console.log(response);\r\n          if(response.data.success) {\r\n            message.success(\"Job site added successfully\");\r\n          }\r\n          form.resetFields();\r\n          setShowModal(false);\r\n          setEditjobfield(null);\r\n          getAllJobSites();\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          setEditjobfield(null);\r\n        });\r\n\r\n    } else {\r\n      saveShiftLocation(e, address);\r\n      // if(!locationData.hrms_location_id) {\r\n      //   message.error('Location cannot be added');\r\n      //   return\r\n      // }\r\n\r\n        // axios\r\n        //   .post(\r\n        //     \"/api/tc/new-customer-job-site\",\r\n        //     {\r\n        //       tc_customer_id: props.customer_id,\r\n        //       name: e.name,\r\n        //       contact_number: e.contact_number,\r\n        //       block_number: e.block_number || '',\r\n        //       street_number: e.street_number || '',\r\n        //       level_number: e.level_number || '',\r\n        //       unit_number: e.unit_number || '',\r\n        //       postal_code: e.postal_code || '',\r\n        //       country: e.country || '',\r\n        //       address: address,\r\n        //       status: statusActive ? \"ACTIVE\":\"INACTIVE\",\r\n        //       hrms_location_id: form.getFieldValue().hrms_location_id,\r\n        //     },\r\n        //     {\r\n        //       headers: {\r\n        //         \"content-type\": \"application/json\",\r\n        //         Authorization: `Bearer ${tok}`\r\n        //       },\r\n        //     }\r\n        //   )\r\n        //   .then((response) => {\r\n        //     console.log(response);\r\n        //     if(response.data.success) {\r\n        //       message.success(\"Job site added successfully\");\r\n        //     }\r\n        //     form.resetFields();\r\n        //     setShowModal(false);\r\n        //     getAllJobSites();\r\n        //   })\r\n        //   .catch((error) => {\r\n        //     console.log(error);\r\n        //   });\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  const newJobSite = (e, address, loc_id) => {\r\n    axios\r\n    .post(\r\n      \"/api/tc/new-customer-job-site\",\r\n      {\r\n        tc_customer_id: props.customer_id,\r\n        name: e.name,\r\n        contact_number: e.contact_number,\r\n        block_number: e.block_number || '',\r\n        street_number: e.street_number || '',\r\n        level_number: e.level_number || '',\r\n        unit_number: e.unit_number || '',\r\n        postal_code: e.postal_code || '',\r\n        country: e.country || '',\r\n        address: address,\r\n        status: statusActive ? \"ACTIVE\":\"INACTIVE\",\r\n        hrms_location_id: loc_id,\r\n      },\r\n      {\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          Authorization: `Bearer ${tok}`\r\n        },\r\n      }\r\n    )\r\n    .then((response) => {\r\n      console.log(response);\r\n      if(response.data.success) {\r\n        message.success(\"Job site added successfully\");\r\n      }\r\n      form.resetFields();\r\n      setShowModal(false);\r\n      getAllJobSites();\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  const updateJobSite = (e, address) => {\r\n    axios\r\n    .post(\r\n      \"/api/tc/new-customer-job-site\",\r\n      {\r\n        tc_customer_id: props.customer_id,\r\n        name: e.name,\r\n        contact_number: e.contact_number,\r\n        block_number: e.block_number || '',\r\n        street_number: e.street_number || '',\r\n        level_number: e.level_number || '',\r\n        unit_number: e.unit_number || '',\r\n        postal_code: e.postal_code || '',\r\n        country: e.country || '',\r\n        address: address,\r\n        status: statusActive ? \"ACTIVE\":\"INACTIVE\",\r\n        hrms_location_id: e.hrms_location_id,\r\n      },\r\n      {\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          Authorization: `Bearer ${tok}`\r\n        },\r\n      }\r\n    )\r\n    .then((response) => {\r\n      console.log(response);\r\n      if(response.data.success) {\r\n        message.success(\"Job site added successfully\");\r\n      }\r\n      form.resetFields();\r\n      setShowModal(false);\r\n      getAllJobSites();\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  const saveShiftLocation = (e,address) => {\r\n    var url = '/api/hrms/save-shift-location';\r\n\r\n    var data = { \r\n      location_name: form.getFieldValue().name,\r\n      location_address: form.getFieldValue().address,\r\n      latitude: form.getFieldValue().latitude,\r\n      longitude: form.getFieldValue().longitude,\r\n      radius: 500\r\n     };\r\n\r\n    let loc_id = 0;\r\n    axios.post(url, data, {}).then((response) => {\r\n      console.log(response.data)\r\n      if (response.data.success == true) {\r\n        loc_id = response.data.id;\r\n        message.success('Location added to HRMS successfully!');\r\n        setLocationData({...locationData, hrms_location_id: loc_id})\r\n        newJobSite(e, address, loc_id)\r\n        return true\r\n      } else if (response.data.message) {\r\n        message.error(response.data.message);\r\n        return false\r\n      } else {\r\n        message.error('Something Went Wrong!');\r\n        return false\r\n      }\r\n    });\r\n  }\r\n\r\n  const updateShiftLocation = (e, address) => {\r\n    var url = '/api/hrms/save-shift-location';\r\n\r\n    var data = {\r\n      id: form.getFieldValue().hrms_location_id || 0,\r\n      location_name: form.getFieldValue().name,\r\n      location_address: form.getFieldValue().address,\r\n      latitude: form.getFieldValue().latitude,\r\n      longitude: form.getFieldValue().longitude,\r\n      radius: 500\r\n     };\r\n\r\n    axios.post(url, data, {}).then((response) => {\r\n      if (response.data.success == true) {\r\n        message.success('Location updated to HRMS successfully!');\r\n        updateJobSite(e, address)\r\n        return true\r\n      } else if (response.data.message) {\r\n        message.error(response.data.message);\r\n        return false\r\n      } else {\r\n        message.error('Something Went Wrong!');\r\n        return false\r\n      }\r\n    });\r\n  }\r\n\r\n  const addNewJobsite = () => {\r\n    setShowModal(true);\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    form.resetFields();\r\n    setShowModal(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (jobsite) {\r\n      console.log(\"Job site details\")\r\n      axios\r\n        .post(\r\n          \"/api/tc/get-customer-job-site\",\r\n          {\r\n            id: jobsite\r\n          },\r\n          {\r\n            headers: {\r\n              \"content-type\": \"application/json\",\r\n              Authorization: `Bearer ${tok}`\r\n            },\r\n          }\r\n        )\r\n        .then((response) => {\r\n          const e = response.data.data;\r\n          console.log(\"e\", e);\r\n\r\n          // form.setFieldsValue({\r\n          //   name: e.name,\r\n          //   block_number: e.block_number,\r\n          //   street_number: e.street_number,\r\n          //   level_number: e.level_number,\r\n          //   unit_number: e.unit_number,\r\n          //   postal_code: e.postal_code,\r\n          //   country: e.country,\r\n          //   address: e.address,\r\n          // })\r\n          \r\n          console.log(e.address)\r\n          let shift = shiftLocations.find((elem) => elem.location_address === e.address)\r\n          console.log(shift)\r\n          form.setFieldsValue({\r\n            name: e.name,\r\n            address: e.address,\r\n            shift_name: e.address,\r\n          })\r\n          setStatusActive(e.status === 'ACTIVE')\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n      return\r\n    }\r\n    else if(editjobfield) {\r\n      console.log(\"Job site details fetched\")\r\n      axios\r\n        .post(\r\n          \"/api/tc/get-customer-job-site\",\r\n          {\r\n            id: editjobfield\r\n          },\r\n          {\r\n            headers: {\r\n              \"content-type\": \"application/json\",\r\n              Authorization: `Bearer ${tok}`\r\n            },\r\n          }\r\n        )\r\n        .then((response) => {\r\n          const e = response.data.data;\r\n          form.setFieldsValue({\r\n            name: e.name,\r\n            address: e.address,\r\n            shift_name: e.address,\r\n          })\r\n          setStatusActive(e.status === 'ACTIVE')\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n\r\n  }, [editjobfield])\r\n\r\n  \r\n  // const getPostalCode = (text) => {\r\n  //   axios\r\n  //     .post(\r\n  //       \"/api/get-pincode\",\r\n  //       {\r\n  //         pin_code: text\r\n  //       },\r\n  //       {\r\n  //         headers: {\r\n  //           \"content-type\": \"application/json\",\r\n  //           Authorization: `Bearer ${tok}`\r\n  //         },\r\n  //       }\r\n  //     )\r\n  //     .then((response) => {\r\n  //       if (response.data.success) {\r\n  //         let result = response.data.results;\r\n  //         result = result.filter(item => item.POSTAL && (item.POSTAL).toUpperCase() != 'NIL');\r\n  //         setOptions(result)\r\n  //       }\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       console.log(error);\r\n  //     });\r\n  // }\r\n  // const selectAddress = (postal) => {\r\n  //   const address = options.filter((item) => item.POSTAL === postal)\r\n  //   console.log('check -1')\r\n  //   console.log(address)\r\n\r\n  //   if (address.length > 0) {\r\n  //     let street_no = ''\r\n  //     if (address[0].ROAD_NAME) {\r\n  //       street_no = address[0].ROAD_NAME\r\n  //     }\r\n\r\n  //     form.setFieldsValue({\r\n  //       block_number: address[0].BLK_NO,\r\n  //       street_number: street_no,\r\n  //       postal_code: address[0].POSTAL,\r\n  //     });\r\n  //   }\r\n    \r\n  // }\r\n\r\n  const getAllJobSites = (currPage) => {\r\n    console.log(props.customer_id)\r\n    axios({\r\n        method: 'post',\r\n        url: \"/api/tc/get-customer-job-sites\",\r\n        data: {\r\n            customer_id: props.customer_id,\r\n            page_index: currPage,\r\n            page_size: 15,\r\n            search : null\r\n        }\r\n    }).then((response) => {\r\n        console.log(\"Jobsite data: \",response.data.data.data)\r\n        if (response.data.success) {\r\n          setjobSiteData(response.data.data.data)\r\n            // if (currPage===1) {\r\n            // }else{\r\n            //     setjobSiteData([...jobSiteData,...response.data.data.data])\r\n            // }\r\n        }\r\n    }).catch((err) => {\r\n        console.log(err)\r\n    });\r\n  }\r\n\r\n  const handleStatusChange = (checked) => {\r\n    let status = form.getFieldValue().status;\r\n    setStatusActive(checked)\r\n    console.log(status)\r\n  }\r\n\r\n  // const handleJobsiteClick = (event)=> {\r\n  //   let jobsiteObj = JobSites.find((e) => e.name === event)\r\n  //   if(jobsiteObj) {\r\n  //     let location = shiftLocations.find(e => e.id === jobsiteObj.location_id)\r\n  //     console.log(location)\r\n  //     form.setFieldsValue({\r\n  //       shift_name: location.location_name,\r\n  //       address: location.location_address\r\n  //     })\r\n  //     // selectAddress()\r\n  //   }\r\n  // }\r\n  \r\n\r\n  const getShiftLocations = (text) => {\r\n    axios\r\n      .post(\r\n        \"/api/hrms/all-shift-locations\",\r\n        {\r\n          search: ''\r\n        },\r\n        {\r\n          headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${tok}`\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        // console.log(response.data)\r\n        if (response.data.success) {\r\n          let result = response.data.shift_locations;\r\n          setShiftLocations(result)\r\n          console.log(shiftLocations)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const getJobSites = () => {\r\n    axios\r\n      .post(\r\n        \"/api/all-user-groups\",\r\n        {\r\n          search: ''\r\n        },\r\n        {\r\n          headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${tok}`\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          let result = response.data.user_groups;\r\n          result = result.filter(item => item.location_id != null);\r\n          setJobSites(result)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   getPostalCode(value)\r\n  //   console.log(value)\r\n  //  }, [value])\r\n\r\n  useEffect(() => {\r\n    console.log(props.id)\r\n\r\n    getShiftLocations()\r\n    getJobSites()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    console.log(locationData)\r\n    form.setFieldsValue({\r\n      address: locationData.address,\r\n      latitude: locationData.latitude,\r\n      longitude: locationData.longitude,\r\n    })\r\n  }, [locationData])\r\n\r\n  // useEffect(() => {\r\n  //   if(showModal) {\r\n  //   }\r\n  // }, [showModal])\r\n  \r\n  return (\r\n    <div>\r\n      {!jobsite && <div>\r\n        <JobSiteTable id={props.id} searchText={props.searchText} customer_id={props.customer_id} setEditjobfield={setEditjobfield} setShowModal={setShowModal} form={form} shiftLocations={shiftLocations} jobSiteData={jobSiteData} setjobSiteData={setjobSiteData}/>\r\n      </div>}\r\n\r\n      {!jobsite && <Card className=\"mt-2\">\r\n          <Button\r\n            block\r\n            type=\"dashed\"\r\n            className=\"d-flex align-items-center justify-content-center pt-4 pb-4\"\r\n            onClick={addNewJobsite}\r\n          >\r\n            <Icon component={PlusIconBlue} />\r\n            <Title level={3} className=\"mb-0\" style={{ color: \"#0E7CEB\" }}>\r\n              <b>Add New Job Site</b>\r\n            </Title>\r\n          </Button>\r\n      </Card>}\r\n\r\n      <Modal visible={showModal} \r\n        centered\r\n        maskClosable\r\n        onCancel={handleCancel}\r\n        footer={null}\r\n        width={750}\r\n        title={editjobfield ? 'Edit Jobsite' : 'Add New Jobsite'}>\r\n          <Form\r\n            form={form}\r\n            labelCol={{\r\n              span: 10,\r\n            }}\r\n            wrapperCol={{\r\n              span: 18,\r\n            }}\r\n            layout=\"vertical\"\r\n            onFinish={finishHandler}\r\n          >\r\n            <Card className=\"mt-3\">\r\n              <p className=\"font-weight-bold font-size-md mb-4\">Job Site Details</p>\r\n              {/* <Row align=\"bottom\">\r\n                <Col span={24}>\r\n                  <Form.Item name=\"name\" label=\"Job Site\" rules={[{ required: true, message: 'Please input job site name!' }]}>\r\n                  <Select onSelect={handleJobsiteClick}>\r\n                      {JobSites.map((elem, index) => {\r\n                        return (\r\n                          <Select.Option key={elem.name} value={elem.name}>\r\n                            {elem.name}\r\n                          </Select.Option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col span={24}>\r\n                  <Form.Item name=\"shift_name\" label=\"Shift location Name\">\r\n                  <Select disabled={true}>\r\n                      {shiftLocations.map((elem, index) => {\r\n                        return (\r\n                          <Select.Option key={index} value={elem.location_address}>\r\n                            {elem.location_name}\r\n                          </Select.Option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row> */}\r\n              {/* <Row align=\"bottom\">\r\n                <Col span={24}>\r\n                <Form.Item name=\"address\" label=\"Job Site Address\">\r\n                    <Input disabled/>\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row> */}\r\n\r\n              <Row>\r\n                  <Col span={12}>\r\n                      <Form.Item name=\"name\" label=\"Jobsite Name\" rules={[{ required: true, message: 'Please input Jobsite Name!' }]} >\r\n                          <Input />\r\n                      </Form.Item>\r\n                  </Col>\r\n                  <Col span={12}>\r\n                      <Form.Item name=\"contact_number\" label=\"Contact No\" rules={[{ required: true, message: 'Please input Contact Number!' }]} >\r\n                          <Input type=\"number\"/>\r\n                      </Form.Item>\r\n                  </Col>\r\n              </Row>\r\n\r\n              <h4>Address</h4>\r\n\r\n              <Row align=\"top\">\r\n                  <Col span={24}>\r\n                      <Form.Item name=\"address\" label=\"Location Address\" rules={[{ required: true, message: 'Please input Location address!' }]} >\r\n                        {/* <Input ref={ref} /> */}\r\n                        {/* <AutoComplete ref={autocompleteRef} /> */}\r\n                        <LocationSearch setLocationData={setLocationData} />\r\n                      </Form.Item>\r\n                  </Col>\r\n                  <Col span={24}>\r\n                      {/* <Form.Item name=\"country\" label=\"Country\" rules={[{ required: true, message: 'Please input Country!' }]} >\r\n                          <Select showSearch>\r\n                            {country.map((elem, index) => {\r\n                                return (\r\n                                  <Select.Option key={index} value={elem}>\r\n                                    {elem}\r\n                                  </Select.Option>\r\n                                );\r\n                            })}\r\n                          </Select>\r\n                      </Form.Item> */}\r\n                      {/* <Form.Item name=\"street_number\" label=\"Street Name\" rules={[{ required: true, message: 'Please input Street Number!' }]} >\r\n                          <Input />\r\n                      </Form.Item> */}\r\n                      {/* <Form.Item name=\"level_number\" label=\"Level No\" rules={[{ required: true, message: 'Please input Level Number!' }]} >\r\n                          <Input />\r\n                      </Form.Item> */}\r\n                      <Form.Item name=\"latitude\" label=\"Latitude\" >\r\n                          <Input disabled />\r\n                      </Form.Item>\r\n                      <Form.Item name=\"longitude\" label=\"Longitude\" >\r\n                          <Input disabled />\r\n                      </Form.Item>\r\n                  </Col>\r\n                  <Col span={12}>\r\n                      {/* <Form.Item name=\"postal_code\" label=\"Postal Code\" rules={[{ required: true, message: 'Please input Postal code!' }]}>\r\n                          <Input />\r\n                      </Form.Item> */}\r\n                      {/* <Form.Item name=\"block_number\" label=\"Block No\" rules={[{ required: true, message: 'Please input Block Number!' }]} >\r\n                          <Input />\r\n                      </Form.Item> */}\r\n                      {/* <Form.Item name=\"unit_number\" label=\"Unit No\" rules={[{ required: true, message: 'Please input Unit Number!' }]} >\r\n                          <Input />\r\n                      </Form.Item> */}\r\n                  </Col>\r\n              </Row>\r\n\r\n              <Row align=\"bottom\">\r\n                <Col span={12}>\r\n                  <Form.Item name=\"status\" label=\"Status\" style={{alignContent: 'start'}}>\r\n                  {statusActive ? \"ACTIVE\":\"INACTIVE\"}<Switch checked={statusActive} onClick={handleStatusChange} className=\"ml-2\"/>\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n            </Card>\r\n\r\n            <Form.Item className={`d-flex align-items-end Button`}>\r\n              <Button\r\n                onClick={() => setShowModal(false)}\r\n                className=\"mx-3\"\r\n              >\r\n                Cancel\r\n              </Button>\r\n\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Save\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JobSites;\r\n","import { Button, Tabs } from 'antd';\r\nimport React, {useEffect} from 'react'\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { AddressDetailsActiveIcon, AddressDetailsIcon, InvoiceActiveIcon, InvoiceIcon, PaymentsActiveIcon, PaymentsIcon, UserManagementActiveIcon, BasicDetailsIcon, BasicDetailsActiveIcon, UserManagementIcon } from 'views/app-views/UserManagement/SvgIcons'\r\nimport Payments from './Payments';\r\nimport InvoiceTable from './InvoiceTable'\r\nimport CustomerUsers from './CustomerUsersTable';\r\nimport Icon from \"@ant-design/icons\";\r\nimport { useState } from 'react';\r\nimport CustomerBasicDetails from './CustomerBasicDetails';\r\nimport JobSites from './JobSites';\r\nimport axios from \"axios\";\r\n\r\n// import { UserManagementIcon } from 'configs/svgIcons';\r\n// import JobSiteTable from './JobSiteTable';\r\n// import SearchBox from 'components/shared-components/SearchBox';\r\n\r\nconst tabs = [\r\n    {\r\n        title: \"Basic Details\",\r\n        icon: BasicDetailsIcon,\r\n        activeIcon: BasicDetailsActiveIcon,\r\n    },\r\n    {\r\n        title: \"Job Site Details\",\r\n        icon: AddressDetailsIcon,\r\n        activeIcon: AddressDetailsActiveIcon,\r\n    },\r\n    {\r\n        title: \"Associate Customers\",\r\n        icon: UserManagementIcon,\r\n        activeIcon: UserManagementActiveIcon,\r\n    },\r\n    {\r\n        title: \"Invoices\",\r\n        icon: InvoiceIcon,\r\n        activeIcon: InvoiceActiveIcon,\r\n    },\r\n    {\r\n        title: \"Payments\",\r\n        icon: PaymentsIcon,\r\n        activeIcon: PaymentsActiveIcon,\r\n    },\r\n]\r\n\r\n\r\nfunction CustomerDetailRight({customerData, searchText, setSearchText, setHeaders, currActiveKey, setCurrActiveKey, isExporting, setIsExporting, setExportData}) {\r\n    const param = useParams()\r\n    // console.log(customerData.id,\"custdata\")\r\n    \r\n    // const [currActiveKey, setCurrActiveKey] = useState(\"1\");\r\n    // const [searchText, setSearchText] = useState('')\r\n    const tabChangeHandler = (key) => {\r\n        setCurrActiveKey(key);\r\n\r\n        setSearchText('');\r\n        if(+key == 2) {\r\n            setHeaders([\r\n                // { label: \"Sr. No\", key: \"sr_no\" },\r\n                { label: \"ID\", key: \"id\" },\r\n                { label: \"Jobsite Name\", key: \"name\" },\r\n                { label: \"Jobsite Address\", key: \"address\" },\r\n                { label: \"Company\", key: \"customer_name\" },\r\n                { label: \"Staff Assigned\", key: \"total_staffs\" },\r\n                { label: \"Tasks\", key: \"total_tasks\" },\r\n                { label: \"Status\", key: \"status\" }\r\n            ])\r\n            setJobsitesData()\r\n        }\r\n        if(+key == 3) {\r\n            setHeaders([\r\n                { label: \"Sr. No\", key: \"sr_no\" },\r\n                { label: \"ID\", key: \"userId\" },\r\n                { label: \"Associate Name\", key: \"userName\" },\r\n                { label: \"Address\", key: \"address\" },\r\n                { label: \"Contact Number\", key: \"mobileNumber\" },\r\n                { label: \"Associate Type\", key: \"associate_type\" },\r\n                { label: \"Status\", key: \"status\" }\r\n            ])\r\n            setAssociatesData()\r\n        }\r\n        if(+key == 4) {\r\n            setHeaders([\r\n                // { label: \"Sr. No\", key: \"index\" },\r\n                { label: \"ID\", key: \"id\" },\r\n                { label: \"Contract ID\", key: \"tc_contract_id\" },\r\n                { label: \"Jobsite Name\", key: \"jobsite_name\" },\r\n                { label: \"Total Tasks\", key: \"total_tasks\" },\r\n                { label: \"Net Amount (S$)\", key: \"total\" },\r\n                { label: \"Paid amount (S$)\", key: \"amount_paid\" },\r\n                { label: \"Invoice Date\", key: \"created_at\" },\r\n                { label: \"Status\", key: \"status\" }\r\n            ])\r\n            setInvoicesData()\r\n        }\r\n        if(+key == 5) {\r\n            setHeaders([\r\n                // { label: \"Sr. No\", key: \"index\" },\r\n                { label: \"ID\", key: \"id\" },\r\n                { label: \"Contract ID\", key: \"tc_contract_id\" },\r\n                { label: \"Jobsite Name\", key: \"jobsite_name\" },\r\n                { label: \"Total Tasks\", key: \"total_tasks\" },\r\n                { label: \"Net Amount (S$)\", key: \"total\" },\r\n                { label: \"Paid amount (S$)\", key: \"amount_paid\" },\r\n                { label: \"Payment Date\", key: \"created_at\" },\r\n                { label: \"Status\", key: \"status\" }\r\n            ])\r\n            setPaymentsData()\r\n        }\r\n    };\r\n\r\n    const setJobsitesData = ()=> {\r\n        axios({\r\n            method: 'post',\r\n            url: \"/api/tc/get-customer-job-sites\",\r\n            // headers: {\r\n            //     Authorization: `Bearer ${tok}`\r\n            // },\r\n            data: {\r\n                customer_id: +param.id,\r\n                page_index: 1,\r\n                page_size: 100000,\r\n                search : null\r\n            }\r\n        }).then((response) => {\r\n            if (response.data.success) {\r\n                setExportData(response.data.data.data)\r\n            }\r\n            console.log(\"Job site export data fetched\")\r\n            console.log(response.data.data.data)\r\n        }).catch((err) => {\r\n            console.log(err)\r\n        });\r\n    }\r\n\r\n    const setAssociatesData = ()=> {\r\n        axios({\r\n            method: 'post',\r\n            url: \"/api/tc/get-customer-users\",\r\n            // headers: {\r\n            //     Authorization: `Bearer ${tok}`\r\n            // },\r\n            data: {\r\n                customer_id: +param.id,\r\n                page_index: 1,\r\n                page_size: 100000,\r\n                search : null\r\n            }\r\n        }).then((response) => {\r\n            if (response.data.success) {\r\n                let res = response.data.data.data;\r\n\r\n                let fdata = res.map((elem, ind) => {\r\n                    return {\r\n                        sr_no: ind+1,\r\n                        key: ind,\r\n                        userId: elem.id,\r\n                        userName: elem.name,\r\n                        // gender: <Icon component={elem.gender === 'Male' ? BoyIcon : GirlIcon} />,\r\n                        // nationality: \r\n                        // elem.nationality === 'India' ? <IN title=\"SG\" className=\"countrtFlag\" />\r\n                        // : elem.nationality === 'Singapore' ? <SG title=\"SG\" className=\"countrtFlag\" />\r\n                        // : <CN title=\"SG\" className=\"countrtFlag\" />\r\n                        // ,\r\n                        img: { image: elem.profile_pic, name: elem.name },\r\n                        mobileNumber: elem.phone,\r\n                        emailId: elem.email,\r\n                        jobSite: elem.job_sites,\r\n                        status: elem.status,\r\n                    };\r\n                });\r\n                setExportData(fdata)\r\n            }\r\n        }).catch((err) => {\r\n            console.log(err)\r\n        });\r\n\r\n    }\r\n\r\n    const setInvoicesData = ()=> {\r\n        axios({\r\n            method: 'post',\r\n            url: \"/api/tc/get-customer-job-sites\",\r\n            // headers: {\r\n            //     Authorization: `Bearer ${tok}`\r\n            // },\r\n            data: {\r\n                customer_id: +param.id,\r\n                page_index: 1,\r\n                page_size: 100000,\r\n                search : null\r\n            }\r\n        }).then((response) => {\r\n            if (response.data.success) {\r\n                setExportData(response.data.data.data)\r\n            }\r\n        }).catch((err) => {\r\n            console.log(err)\r\n        });\r\n\r\n    }\r\n\r\n    const setPaymentsData = ()=> {\r\n        axios({\r\n            method: 'post',\r\n            url: \"/api/tc/get-customer-job-sites\",\r\n            // headers: {\r\n            //     Authorization: `Bearer ${tok}`\r\n            // },\r\n            data: {\r\n                customer_id: +param.id,\r\n                page_index: 1,\r\n                page_size: 100000,\r\n                search : null\r\n            }\r\n        }).then((response) => {\r\n            if (response.data.success) {\r\n                setExportData(response.data.data.data)\r\n            }\r\n        }).catch((err) => {\r\n            console.log(err)\r\n        });\r\n\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //   if(isExporting) {\r\n    //     if(+currActiveKey == 2) {\r\n    //         setJobsitesData()\r\n    //     }\r\n    //     if(+currActiveKey == 3) {\r\n    //         setAssociatesData()\r\n    //     }\r\n    //     if(+currActiveKey == 4) {\r\n    //         setInvoicesData()\r\n    //     }\r\n    //     if(+currActiveKey == 5) {\r\n    //         setPaymentsData()\r\n    //     }\r\n    //   }\r\n    // }, [isExporting])\r\n    \r\n\r\n    const content = [\r\n        <CustomerBasicDetails />,\r\n        <JobSites searchText={searchText} customer_id={+param.id}/>,\r\n        <CustomerUsers searchText={searchText} custId={+param.id}/>,\r\n        <InvoiceTable searchText={searchText} custId={+param.id}/>,\r\n        <Payments searchText={searchText} custId={+param.id}/>,\r\n    ];\r\n\r\n    const extraBottons = <div className='d-flex'>\r\n        {/* {currActiveKey==2 && <Link className='mr-3' to=\"/app/customer-management/customer-accounts/add-new-payments\"> <Button className=\"d-flex align-items-center\"type=\"danger\"size=\"middle\">Create New Payment</Button> </Link>}\r\n        {currActiveKey==3 && <Link className='mr-3' to={`/app/customer-management/customer-accounts/add-new-invoice/${customerData.id}`}> <Button className=\"d-flex align-items-center\"type=\"danger\"size=\"middle\">Create New Invoice</Button> </Link>}\r\n        <SearchBox setSearchText={setSearchText}/> */}\r\n        </div>\r\n    return (\r\n        <Tabs\r\n            activeKey={currActiveKey}\r\n            size=\"large\"\r\n            onChange={tabChangeHandler}\r\n            tabBarExtraContent={ extraBottons}\r\n        >\r\n            <Tabs.TabPane\r\n                tab={\r\n                    <span className=\"d-flex align-items-center hover-color\">\r\n                        <Icon\r\n                            component={currActiveKey === \"1\" ? tabs[0].activeIcon : tabs[0].icon}\r\n                        />\r\n                        {tabs[0].title}\r\n                    </span>\r\n                }\r\n                key=\"1\"\r\n            >\r\n                {content[0]}\r\n            </Tabs.TabPane>\r\n            <Tabs.TabPane\r\n                tab={\r\n                    <span className=\"d-flex align-items-center hover-color\">\r\n                        <Icon\r\n                            component={currActiveKey === \"2\" ? tabs[1].activeIcon : tabs[1].icon}\r\n                        />\r\n                        {tabs[1].title}\r\n                    </span>\r\n                }\r\n                key=\"2\"\r\n            >\r\n                {content[1]}\r\n            </Tabs.TabPane>\r\n            <Tabs.TabPane\r\n                tab={\r\n                    <span className=\"d-flex align-items-center hover-color\">\r\n                        <Icon\r\n                            component={currActiveKey === \"3\" ? tabs[2].activeIcon : tabs[2].icon}\r\n                        />\r\n                        {tabs[2].title}\r\n                    </span>\r\n                }\r\n                key=\"3\"\r\n            >\r\n                {content[2]}\r\n            </Tabs.TabPane>\r\n            <Tabs.TabPane\r\n                tab={\r\n                    <span className=\"d-flex align-items-center hover-color\">\r\n                        <Icon\r\n                            component={currActiveKey === \"4\" ? tabs[3].activeIcon : tabs[3].icon}\r\n                        />\r\n                        {tabs[3].title}\r\n                    </span>\r\n                }\r\n                key=\"4\"\r\n            >\r\n                {content[3]}\r\n            </Tabs.TabPane>\r\n            <Tabs.TabPane\r\n                tab={\r\n                    <span className=\"d-flex align-items-center hover-color\">\r\n                        <Icon\r\n                            component={currActiveKey === \"5\" ? tabs[4].activeIcon : tabs[4].icon}\r\n                        />\r\n                        {tabs[4].title}\r\n                    </span>\r\n                }\r\n                key=\"5\"\r\n            >\r\n                {content[4]}\r\n            </Tabs.TabPane>\r\n\r\n        </Tabs>\r\n    )\r\n}\r\n\r\nexport default CustomerDetailRight","import React from 'react'\r\nimport UserManagementIcon from \"assets/svg/usermManagementPage.svg\";\r\nimport PageHeading from 'components/shared-components/PageHeading/PageHeading';\r\nimport { Card, Col, Row, Button } from 'antd';\r\n\r\nimport Profile from 'views/app-views/CustomerManagement/CustomerAccounts/Profile';\r\nimport CustomerDetailRight from './CustomerDetailRight';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useState } from 'react';\r\nimport SearchBox from 'components/shared-components/SearchBox';\r\nimport { Link } from 'react-router-dom';\r\nimport exportIcon from \"assets/svg/exportIcon.svg\";\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nfunction CustomerDetails() {\r\n    const param = useParams();\r\n    const history = useHistory();\r\n    const [currActiveKey, setCurrActiveKey] = useState(\"1\");\r\n    const [customerData, setCustomerData] = useState({})\r\n    const [searchText, setSearchText] = useState(\"\")\r\n    const [exportData, setExportData] = useState([]);\r\n    const [headers, setHeaders] = useState([])\r\n    const [isExporting, setIsExporting] = useState(false)\r\n\r\n\r\n\r\n    const getCustomer = () => {\r\n        axios({\r\n            method: 'post',\r\n            url: \"/api/tc/get-customer\",\r\n            data: {\r\n                id:param.id\r\n            },\r\n        }).then((response) => {\r\n            console.log(response.data)\r\n            if (response.data.success) {\r\n                setCustomerData(response.data.data);\r\n            } else {\r\n                console.log(response)\r\n            }\r\n        });\r\n    }\r\n\r\n    const getFileName = () => {\r\n        if(currActiveKey == '2') return 'All-Jobsites'\r\n        if(currActiveKey == '3') return 'All-Associate-Customers'\r\n        if(currActiveKey == '4') return 'All-Invoices'\r\n        if(currActiveKey == '5') return 'All-Payments'\r\n    }\r\n\r\n    useEffect(() => {\r\n      getCustomer()\r\n    }, [])\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <div className='d-flex justify-content-between'>\r\n                <PageHeading\r\n                    // icon={UserManagementIcon}\r\n                    title=\"Customer Details\"\r\n                />\r\n                {+currActiveKey === 1 && <div className=\"d-flex justify-content-between mb-3\">\r\n                    <div className=\" d-flex align-items-center justify-content-between mr-2\"\r\n                    onClick={() => {\r\n                        history.push(`/app/customer-management/customer-accounts/edit/${param.id}`)\r\n                    }}>\r\n                            <Button type=\"primary\" className=\"d-flex align-items-center ml-2 mr-2\" >\r\n                                Edit Customer\r\n                            </Button>\r\n                    </div>\r\n                </div>}\r\n                {+currActiveKey !== 1 && <div className=\"d-flex justify-content-between mb-3\">\r\n                    <div className=\" d-flex align-items-center justify-content-between mr-2\">\r\n                        <SearchBox setSearchText={setSearchText} />\r\n\r\n                        <CSVLink data={exportData} \r\n                        headers={headers} \r\n                        filename={`${getFileName()}.csv`}\r\n                        >\r\n                            <Button className=\"d-flex align-items-center ml-2 mr-2\" >\r\n                                <img className=\"mr-2\" src={exportIcon} alt=\"exportIcon\"></img>Export\r\n                            </Button>\r\n                        </CSVLink>\r\n                    </div>\r\n                </div>}\r\n            </div>\r\n            <div className='mw-100'>\r\n                <Row gutter={20}>\r\n                    <Col span={24}>\r\n                        <CustomerDetailRight customerData={customerData} searchText={searchText} setSearchText={setSearchText} setHeaders={setHeaders} currActiveKey={currActiveKey} setCurrActiveKey={setCurrActiveKey}\r\n                        setIsExporting={setIsExporting}\r\n                        isExporting={isExporting}\r\n                        setExportData={setExportData} />\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomerDetails","import PageHeading from 'components/shared-components/PageHeading/PageHeading'\r\nimport React from 'react'\r\nimport UserManagementIcon from \"assets/svg/usermManagementPage.svg\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport { Button, Card, Col, DatePicker, Form, Input, message, Modal, Row, Select } from 'antd';\r\nimport Icon from \"@ant-design/icons\";\r\nimport { PaymentsActiveIcon } from 'views/app-views/UserManagement/SvgIcons';\r\nimport dayjs from 'dayjs';\r\nimport Dragger from 'antd/lib/upload/Dragger';\r\nimport { InboxOutlined } from '@ant-design/icons';\r\nimport { Successfully } from 'configs/svgIcons';\r\nimport SuccessSubmit from 'views/app-views/UserManagement/AddNewStaffV2/AsiignShift/SuccessSubmit';\r\n\r\n\r\nfunction AddNewPayments() {\r\n\r\n    const history = useHistory()\r\n\r\n\r\n    const [showDeletedSuccess, setShowDeletedSuccess] = useState(false);\r\n\r\n    const finishHandler = (e) => {\r\n        setShowDeletedSuccess(true)\r\n        setTimeout(() => {\r\n            setShowDeletedSuccess(false)\r\n            history.push('customer-details')\r\n        }, 3000);\r\n    }\r\n\r\n    const props = {\r\n        name: 'file',\r\n        multiple: true,\r\n        action: 'https://www.htmk.com',\r\n        listType: \"picture\",\r\n        onChange(info) {\r\n            const { status } = info.file;\r\n            if (status !== 'uploading') {\r\n                console.log(info.file, info.fileList);\r\n            }\r\n            if (status === 'done') {\r\n                message.success(`${info.file.name} file uploaded successfully.`);\r\n            } else if (status === 'error') {\r\n                message.error(`${info.file.name} file upload failed.`);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <PageHeading\r\n                icon={UserManagementIcon}\r\n                title=\"Customer Management / Customer Accounts / Customer Details / Create New Payment\"\r\n            />\r\n            <Form\r\n                // form={form}\r\n                labelCol={{\r\n                    span: 10,\r\n                }}\r\n                wrapperCol={{\r\n                    span: 18,\r\n                }}\r\n                layout=\"vertical\"\r\n                // onValuesChange={onFormLayoutChange}\r\n                onFinish={finishHandler}\r\n            >\r\n\r\n                <Row >\r\n                    <Col className='mr-4' span={16}>\r\n                        <Card className=\"mt-3\">\r\n                            <p style={{ color: '#000B23' }} className='d-flex align-items-center font-size-md font-weight-bold mb-4'> <Icon className='mr-2' component={PaymentsActiveIcon} /> Payments Details</p>\r\n                            <Row align='bottom'>\r\n                                <Col span={12}>\r\n                                    <Form.Item name='paymentId ' label='Payment ID'>\r\n                                        <Input />\r\n                                    </Form.Item>\r\n                                    <Form.Item name='customer ' label='Customer'>\r\n                                        <Input />\r\n                                    </Form.Item>\r\n                                    <Form.Item name='selectJobSites' label='Select Job Sites'>\r\n                                        <Select>\r\n                                            <Select.Option value='India' >India</Select.Option>\r\n                                            <Select.Option value='China' >China</Select.Option>\r\n                                            <Select.Option value='Singapore' >Singapore</Select.Option>\r\n                                        </Select>\r\n                                    </Form.Item>\r\n                                    <Form.Item name='totalTasksPerformed ' label='Total Tasks Performed'>\r\n                                        <Input />\r\n                                    </Form.Item>\r\n                                    <Form.Item name='amount ' label='Amount'>\r\n                                        <Input />\r\n                                    </Form.Item>\r\n                                    <Form.Item name='tax/GST ' label='Tax/GST'>\r\n                                        <Input />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={12}>\r\n                                    <Form.Item name='selectTaskTypes' label='Select Tasks Types'>\r\n                                        <Select>\r\n                                            <Select.Option value='India' >India</Select.Option>\r\n                                            <Select.Option value='China' >China</Select.Option>\r\n                                            <Select.Option value='Singapore' >Singapore</Select.Option>\r\n                                        </Select>\r\n                                    </Form.Item>\r\n                                    <Form.Item name='PaymentPeriod ' label='Payment Period'>\r\n                                        <DatePicker.RangePicker\r\n                                            defaultValue={[dayjs('2015/01/01', 'DD/MM/YYYY'), dayjs('2015/01/01', 'DD/MM/YYYY')]}\r\n                                            format=\"DD/MM/YYYY\"\r\n                                        />\r\n                                    </Form.Item>\r\n                                    <Form.Item name='discount ' label='Discount'>\r\n                                        <Input />\r\n                                    </Form.Item>\r\n                                    <Form.Item name='netTotal ' label='Net Total'>\r\n                                        <Input />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            <Form.Item name='remarks ' label='Remarks'>\r\n                                <Input.TextArea rows={4} />\r\n                            </Form.Item>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col span={7}>\r\n                        <Card className=\"mt-3\">\r\n                            <Dragger {...props}>\r\n                                <p className=\"ant-upload-drag-icon\">\r\n                                    <InboxOutlined />\r\n                                </p>\r\n                                <p className=\"font-size-md\">Drag & drop files here</p>\r\n                                <p className=\"font-size-md\" >or</p>\r\n                                <p className=\"ant-upload-hint text-danger\">Choose Files</p>\r\n                            </Dragger>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Form.Item className={`d-flex align-items-end Button`}>\r\n                    <Button>Back</Button>\r\n                    <Button\r\n                        // onClick={() => form.resetFields()}\r\n                        className='mx-3'\r\n                    >Clear All</Button>\r\n\r\n                    <Button type=\"primary\" htmlType=\"submit\">Save</Button>\r\n                </Form.Item>\r\n                <Modal centered visible={showDeletedSuccess} footer={[null]} onCancel={() => { setShowDeletedSuccess(false) }}>\r\n                    <SuccessSubmit icon={Successfully} title=\"Customer Added Successfully!\" desc='Customer ID #1234 added in the system' />\r\n                </Modal>\r\n\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewPayments","import PageHeading from \"components/shared-components/PageHeading/PageHeading\";\r\nimport React from \"react\";\r\nimport axios from \"axios\";\r\nimport UserManagementIcon from \"assets/svg/usermManagementPage.svg\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Table,\r\n  Card,\r\n  Col,\r\n  DatePicker,\r\n  Form,\r\n  Input,\r\n  InputNumber,\r\n  Popconfirm,\r\n  message,\r\n  Modal,\r\n  Row,\r\n  Select,\r\n} from \"antd\";\r\nimport Icon from \"@ant-design/icons\";\r\nimport { PaymentsActiveIcon } from \"views/app-views/UserManagement/SvgIcons\";\r\nimport dayjs from \"dayjs\";\r\nimport Dragger from \"antd/lib/upload/Dragger\";\r\nimport { InboxOutlined } from \"@ant-design/icons\";\r\nimport { Successfully } from \"configs/svgIcons\";\r\nimport SuccessSubmit from \"views/app-views/UserManagement/AddNewStaffV2/AsiignShift/SuccessSubmit\";\r\nimport moment from \"moment\";\r\nimport { toInteger } from \"lodash\";\r\n\r\nconst { Column } = Table;\r\nconst { TextArea } = Input;\r\nconst { RangePicker } = DatePicker;\r\nfunction AddNewInvoice() {\r\n  const param = useParams();\r\n  const history = useHistory();\r\n  const [data, setData] = useState([]);\r\n  const [customers, setCustomers] = useState([]);\r\n  const [jobs,setJobs] = useState([])\r\n  const [sub_totalInp, setsub_totalInp] = useState(0);\r\n  const [showDeletedSuccess, setShowDeletedSuccess] = useState(false);\r\n  const [FileList, setFileList] = useState([])\r\n  const [previewImage, setPreviewImage] = useState(\"\");\r\n  const [previewTitle, setPreviewTitle] = useState(\"\");\r\n  const [form] = Form.useForm();\r\n  const [previewOpen, setPreviewOpen] = useState(false);\r\n  const dateFormatList = [\"DD/MM/YYYY\", \"DD/MM/YY\", \"DD-MM-YYYY\", \"DD-MM-YY\"];\r\n  const tok = localStorage.getItem(\"token\");\r\n  console.log(param.id, \"id\");\r\n\r\n  const calculatesubtotal = () => {\r\n    const total = data.reduce(\r\n      (accumulator, current) => accumulator + current.quantity * current.price,\r\n      0\r\n    );\r\n    return total;\r\n  };\r\n\r\n  const handleSave = (row) => {\r\n    const newData = [...data];\r\n    const index = newData.findIndex((item) => row.key === item.key);\r\n    if (index > -1) {\r\n      const item = newData[index];\r\n      newData.splice(index, 1, { ...item, ...row });\r\n      setData(newData);\r\n    } else {\r\n      newData.push(row);\r\n      setData(newData);\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .post(\r\n        \"/api/tc/get-customer-job-sites\",\r\n        {\r\n          page_index: 1,\r\n          page_size: 100000,\r\n          statuses: [\"ACTIVE\", \"INACTIVE\"],\r\n          // customer_id: props.id ? props.id : null,\r\n          // search : props.searchText? props.searchText : null,\r\n        },\r\n        {\r\n          headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${tok}`\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        let res = response.data.data.data;\r\n        console.log(res);\r\n\r\n        let fdata = res.map((elem, ind) => {\r\n          return {\r\n            id: elem.id,\r\n            jobSite: elem.name,\r\n            jobSiteAddress: elem.address ? elem.address : `${elem.street_number}, block no. ${elem.block_number} postal code ${elem.postal_code}, ${elem.country}`,\r\n            company: elem.customer_name,\r\n            phoneNumber: elem?.phone,\r\n            emailId: elem?.email,\r\n            noOfUsers: elem?.total_customer_users || 0,\r\n            img: { image: elem?.img, name: elem.name },\r\n            staffAssign: elem.staffAssign,\r\n            tasks: elem.tasks,\r\n            revenue: elem.revenue,\r\n            outstandingAmt: elem.outstandingAmt,\r\n            total_tasks: elem.total_tasks,\r\n            total_staffs: elem.total_staffs,\r\n            status: elem.status,\r\n            action: \"\",\r\n          };\r\n        });\r\n        setJobs(fdata);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n  const handleDelete = (key) => {\r\n    const newData = data.filter((item) => item.key !== key);\r\n    setData(newData);\r\n  };\r\n\r\n  const imageConverterToUrl = async(file) => {\r\n    const formData = new FormData();\r\n    try{\r\n      formData.append(\"file\",file[0].originFileObj);\r\n      const res = await axios({\r\n        method: \"post\",\r\n        url: \"/api/tc/upload-document\",\r\n        data: formData,\r\n        headers: {\r\n          \"content-type\": `multipart/form-data`,\r\n          Authorization: `Bearer ${tok}`,\r\n        },\r\n      })\r\n      \r\n      if (res.data.success) {\r\n        console.log(res.data.url);\r\n        return res.data.url;\r\n      }\r\n\r\n       \r\n    }catch(error) {\r\n      console.log(error);\r\n      return null;\r\n    };\r\n   \r\n  }\r\n\r\n  const finishHandler = async(e) => {\r\n    let image = await imageConverterToUrl(FileList)\r\n    const tax = sub_totalInp * 0.08;\r\n    const total = sub_totalInp + sub_totalInp * 0.08;\r\n    const startDate = moment(e.taskPeriod[0]).format(\"YYYY-MM-DD\");\r\n    const endDate = moment(e.taskPeriod[1]).format(\"YYYY-MM-DD\");\r\n    console.log(\"event\",e)\r\n    // const date = new Date(\"01/01/2023\");\r\n\r\n    // const dueDate = new Date(\"01/02/2023\");\r\n\r\n    const isoDate = moment(e.date).format(\"YYYY-MM-DD\")\r\n    const isoDueDate = moment(e.dueDate).format(\"YYYY-MM-DD\")\r\n    const listNew = data.map((elem) => {\r\n      return {\r\n        key: elem.key,\r\n        name: elem.name,\r\n        quantity: elem.quantity,\r\n        price: elem.price,\r\n        total: elem.quantity * elem.price,\r\n      };\r\n    });\r\n    const fdata = {\r\n      tc_customer_id: param.id,\r\n      task_period_from_date: startDate,\r\n      task_period_to_date: endDate,\r\n      date: isoDate,\r\n      due_date: isoDueDate,\r\n      sub_total: sub_totalInp,\r\n      status:\"pending\",\r\n      tax: tax.toString(),\r\n      discount: e.discount,\r\n      total: total.toString(),\r\n      tc_invoice_file: image,\r\n      invoice_remarks: e.remarks.toString(),\r\n      line_items: [],\r\n      // status:\"pending\",\r\n      // sub_total: sub_totalInp,\r\n      // tax: tax.toString(),\r\n      // discount: 0,\r\n      // total: total.toString(),\r\n      // line_items: listNew,\r\n\r\n    };\r\n    // const fdata = {\r\n    //   tc_customer_id:2,\r\n    //   date:\"2022-12-31\",\r\n    //   due_date:\"2023-01-01\",\r\n    //   sub_total:50,\r\n    //   tax:\"3.5000000000000004\",\r\n    //   discount: 0,\r\n    //   status:\"pending\",\r\n    //   total:53.5,\r\n    //   line_items: [\r\n    //     {key: 1, \r\n    //     name: \"h\", \r\n    //     quantity: 5, \r\n    //     price: 5, \r\n    //     total: 25},\r\n    //     {key: 2, \r\n    //     name: \"hg\", \r\n    //     quantity: 5, \r\n    //     price: 5, \r\n    //     total: 25}\r\n    //     ]\r\n    // };\r\n    \r\n\r\n    axios({\r\n      method: \"post\",\r\n      url: \"/api/tc/new-invoice\",\r\n      data: fdata,\r\n      headers: {\r\n        // \"Content-Type\": \"multipart/form-data; boundary=-- --WebKitFormBoundary7MA4YWxkTrZu0gW\",\r\n        Authorization: `Bearer ${tok}`,\r\n      },\r\n    }).then((response) => {\r\n      console.log(response.data);\r\n      if (response.data.success) {\r\n        console.log(response.data.data);\r\n        setShowDeletedSuccess(true);\r\n      } else {\r\n        console.log(response);\r\n      }\r\n    }).catch((err)=>{\r\n      message.warn(err.response.data.message)\r\n      console.log(err.response);\r\n    })\r\n  };\r\n\r\n  const handleUploadChange = ({ fileList: newFileList }) => {\r\n    setFileList(newFileList)\r\n    console.log(FileList)\r\n  };\r\n  const getBase64 = (file) =>\r\n  new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = (error) => reject(error);\r\n  });\r\n\r\n  const handlePreview = async (file) => {\r\n    console.log(file)\r\n    if (!file.url && !file.preview) {\r\n        file.preview = await getBase64(file.originFileObj);\r\n    }\r\n    // setPreviewImage(file.url || file.preview);\r\n    // setPreviewOpen(true);\r\n    // setPreviewTitle(\r\n    //     file.name || file.url.substring(file.url.lastIndexOf(\"/\") + 1)\r\n    // );\r\n    console.log(file.preview)\r\n    if(file.preview) {\r\n      const newTab = window.open();\r\n      newTab.document.write('<embed width=\"100%\" height=\"100%\" src=\"' + file.preview + '\" type=\"application/pdf\">');\r\n    }\r\n};\r\n\r\n  const AddRow = () => {\r\n    const newData = {\r\n      key: data.length + 1,\r\n      name: \"\",\r\n      quantity: 0,\r\n      price: 0,\r\n    };\r\n    setData([...data, newData]);\r\n  };\r\n\r\n  const getAllCustomers = () => {\r\n    axios({\r\n      method: 'post',\r\n      url: \"/api/tc/get-customers\",\r\n      headers: {\r\n          Authorization: `Bearer ${tok}`\r\n      },\r\n      data: {\r\n          page_index: 1,\r\n          page_size: 100000,\r\n          search : null\r\n      },\r\n    }).then((response) => {\r\n        console.log(response.data)\r\n        if (response.data.success) {\r\n          setCustomers(response.data.data.data);\r\n        } else {\r\n            console.log(response)\r\n        }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setsub_totalInp(calculatesubtotal());\r\n    console.log(sub_totalInp);\r\n  }, [handleSave]);\r\n\r\n  useEffect(() => {\r\n    getAllCustomers();\r\n    form.setFieldsValue({\r\n      customer: toInteger(param.id)\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <PageHeading\r\n        icon={UserManagementIcon}\r\n        title=\"Customer Management / Customer Accounts / Customer Details / Create New Invoice\"\r\n      />\r\n      <Form\r\n        form={form}\r\n        labelCol={{\r\n          span: 10,\r\n        }}\r\n        wrapperCol={{\r\n          span: 18,\r\n        }}\r\n        layout=\"vertical\"\r\n        // onValuesChange={onFormLayoutChange}\r\n        onFinish={finishHandler}\r\n      >\r\n        <Row>\r\n          <Col className=\"mr-4\" span={24}>\r\n            <Card className=\"mt-3\">\r\n              {/* <p\r\n                style={{ color: \"#000B23\" }}\r\n                className=\"d-flex align-items-center font-size-md font-weight-bold mb-4\"\r\n              >\r\n                {\" \"}\r\n                <Icon className=\"mr-2\" component={PaymentsActiveIcon} /> Create New Invoice\r\n              </p> */}\r\n              <p\r\n                style={{ color: \"#000B23\" }}\r\n                className=\"d-flex align-items-center font-size-md font-weight-bold mb-4\"\r\n              >\r\n                {\" \"}\r\n                Create New Invoice\r\n              </p>\r\n              <Row align=\"bottom\">\r\n              <Col span={12}>\r\n                  <Form.Item name=\"customer\" label=\"Customer\">\r\n                    <Select disabled>\r\n                      {customers.map((elem, index) => {\r\n                        return (\r\n                          <Select.Option key={index} value={elem.id}>\r\n                            {elem.name}\r\n                          </Select.Option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n              <Row align=\"bottom\">\r\n                <Col span={12}>\r\n                  <Form.Item name=\"jobsite\" label=\"Select Job Site\">\r\n                    <Select>\r\n                      {jobs.map((elem, index) => {\r\n                        return (\r\n                          <Select.Option key={index} value={elem.id}>\r\n                            {elem.jobSite}\r\n                          </Select.Option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col span={12}>\r\n                  <Form.Item name=\"taskPeriod\" label=\"Task period\">\r\n                    <RangePicker />\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n              <Row align=\"bottom\">\r\n                <Col span={12}>\r\n                  <Form.Item name=\"amount\" label=\"Amount\">\r\n                    <Input />\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col span={12}>\r\n                  <Form.Item name=\"discount\" label=\"Discount\">\r\n                    <Input />\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n              <Row align=\"bottom\">\r\n                <Col span={12}>\r\n                  <Form.Item name=\"tax\" label=\"Tax/GST\">\r\n                    <Input />\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col span={12}>\r\n                  <Form.Item name=\"total\" label=\"Net Total\">\r\n                    <Input />\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n              <Row align=\"bottom\">\r\n                <Col span={12}>\r\n                  <Form.Item name=\"due_date\" label=\"Due Date\">\r\n                    <DatePicker\r\n                      defaultValue={moment(new Date()).add(1,\"month\")}\r\n                      format={\"DD-MM-YYYY\"}\r\n                    />\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n              <Row align=\"bottom\">\r\n                <Col span={12}>\r\n                  <Form.Item name=\"remarks\" label=\"Remarks\">\r\n                    <TextArea rows={4} />\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n              <Row align=\"bottom\">\r\n                <Col span={24}>\r\n                  <Form.Item name=\"invoice\" label=\"Upload Invoice\"  style={{alignContent: 'start'}}>\r\n                    <Dragger\r\n                        beforeUpload={() => {\r\n                        return false;\r\n                    }}\r\n                    listType=\"text\"\r\n                    style={{ minHeight: '50px', minWidth: '150%', maxHeight: \"150px\",  marginBottom: '10px' }}\r\n                    maxCount={1}\r\n                    accept=\".pdf\"\r\n                    onPreview={handlePreview}\r\n                    onChange={handleUploadChange}\r\n                    fileList={FileList}\r\n                    className='dragUpload'>\r\n                    <p className=\"ant-upload-drag-icon\">\r\n                        <InboxOutlined />\r\n                    </p>\r\n                    <p className=\"font-weight-bold text-size-md\">Drag & drop files here or <span className='text-danger'>Choose Files</span></p>\r\n                    </Dragger>\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n              {/* <Row>\r\n                <Col span={24}>\r\n                  <Table dataSource={data}>\r\n                    <Column\r\n                      title=\"Name\"\r\n                      dataIndex=\"name\"\r\n                      key=\"name\"\r\n                      render={(text, record) => (\r\n                        <Input\r\n                          value={text}\r\n                          onChange={(e) =>\r\n                            handleSave({ ...record, name: e.target.value })\r\n                          }\r\n                        />\r\n                      )}\r\n                    />\r\n                    <Column\r\n                      title=\"Quantity\"\r\n                      dataIndex=\"quantity\"\r\n                      key=\"quantity\"\r\n                      render={(text, record) => (\r\n                        <InputNumber\r\n                          value={text}\r\n                          onChange={(value) =>\r\n                            handleSave({ ...record, quantity: value })\r\n                          }\r\n                        />\r\n                      )}\r\n                    />\r\n                    <Column\r\n                      title=\"Price\"\r\n                      dataIndex=\"price\"\r\n                      key=\"price\"\r\n                      render={(text, record) => (\r\n                        <InputNumber\r\n                          value={text}\r\n                          onChange={(value) =>\r\n                            handleSave({ ...record, price: value })\r\n                          }\r\n                        />\r\n                      )}\r\n                    />\r\n                    <Column\r\n                      title=\"Total\"\r\n                      dataIndex=\"total\"\r\n                      key=\"total\"\r\n                      render={(text, record) => (\r\n                        <span>{record.quantity * record.price}</span>\r\n                      )}\r\n                    />\r\n                    <Column\r\n                      title=\"Action\"\r\n                      key=\"action\"\r\n                      render={(text, record) => (\r\n                        <span>\r\n                          <a href=\"#\" onClick={() => handleDelete(record.key)}>\r\n                            Delete\r\n                          </a>\r\n                        </span>\r\n                      )}\r\n                    />\r\n                  </Table>\r\n                  <Button className=\"mt-3 mb-4\" type=\"default\" onClick={AddRow}>\r\n                    Add Item\r\n                  </Button>\r\n                </Col>\r\n              </Row> */}\r\n              {/* <Row align=\"bottom\">\r\n                <Col span={24}>\r\n                  <div className=\"d-flex justify-content-between px-5\">\r\n                    <h5>Sub Total</h5>\r\n                    <h5>{sub_totalInp}</h5>\r\n                  </div>\r\n                </Col>\r\n                <Col span={24}>\r\n                  <div className=\"d-flex justify-content-between pl-5\">\r\n                    <h5>Discount</h5>\r\n                    <Form.Item name=\"discount\" label=\" \">\r\n                      <InputNumber />\r\n                    </Form.Item>\r\n                  </div>\r\n                </Col>\r\n                <Col span={24}>\r\n                  <div className=\"d-flex justify-content-between px-5\">\r\n                    <h5>Tax 8%</h5>\r\n                    <h5>{sub_totalInp * 0.08}</h5>\r\n                  </div>\r\n                </Col>\r\n                <Col span={24}>\r\n                  <div className=\"d-flex justify-content-between px-5\">\r\n                    <h5>Total</h5>\r\n                    <h5>{sub_totalInp + sub_totalInp * 0.08}</h5>\r\n                  </div>\r\n                </Col>\r\n              </Row> */}\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Form.Item className={`d-flex align-items-end Button`}>\r\n          <Button>Back</Button>\r\n          <Button\r\n            onClick={() => form.resetFields()}\r\n            className=\"mx-3\"\r\n          >\r\n            Clear All\r\n          </Button>\r\n\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Save\r\n          </Button>\r\n        </Form.Item>\r\n        <Modal\r\n          centered\r\n          visible={showDeletedSuccess}\r\n          footer={[null]}\r\n          onCancel={() => {\r\n            setShowDeletedSuccess(false);\r\n          }}\r\n        >\r\n          <SuccessSubmit\r\n            icon={Successfully}\r\n            title=\"Invoice Added Successfully!\"\r\n            desc=\"Invoice has been added in the system\"\r\n          />\r\n        </Modal>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddNewInvoice;\r\n","import PageHeading from \"components/shared-components/PageHeading/PageHeading\";\r\nimport React,{useCallback} from \"react\";\r\nimport axios from \"axios\";\r\nimport UserManagementIcon from \"assets/svg/usermManagementPage.svg\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Table,\r\n  Card,\r\n  Col,\r\n  DatePicker,\r\n  Form,\r\n  Input,\r\n  InputNumber,\r\n  Popconfirm,\r\n  message,\r\n  Modal,\r\n  Row,\r\n  Select,\r\n} from \"antd\";\r\nimport Icon from \"@ant-design/icons\";\r\nimport { PaymentsActiveIcon } from \"views/app-views/UserManagement/SvgIcons\";\r\nimport dayjs from \"dayjs\";\r\nimport Dragger from \"antd/lib/upload/Dragger\";\r\nimport { InboxOutlined } from \"@ant-design/icons\";\r\nimport { Successfully } from \"configs/svgIcons\";\r\nimport SuccessSubmit from \"views/app-views/UserManagement/AddNewStaffV2/AsiignShift/SuccessSubmit\";\r\nimport moment from \"moment\";\r\nimport { useForm } from \"antd/lib/form/Form\";\r\nimport history from \"history\";\r\n\r\nconst { Column } = Table;\r\nfunction EditInvoice() {\r\n  const param = useParams();\r\n\r\n  const [form] = useForm()\r\n  const [invoiceget, setInvoiceget] = useState(null)\r\n  const [data, setData] = useState([]);\r\n  const [sub_totalInp, setsub_totalInp] = useState(0);\r\n  const [showDeletedSuccess, setShowDeletedSuccess] = useState(false);\r\n  const dateFormatList = [\"DD/MM/YYYY\", \"DD/MM/YY\", \"YYYY-MM-DD\", \"DD-MM-YY\"];\r\n  const tok = localStorage.getItem(\"token\");\r\n  console.log(param.id, \"id\");\r\n\r\n  const calculatesubtotal = () => {\r\n    const total = data.reduce(\r\n      (accumulator, current) => accumulator + current.quantity * current.price,\r\n      0\r\n    );\r\n    console.log(total);\r\n    return total;\r\n  };\r\n\r\n  const handleSave = useCallback((row) => {\r\n    setData(prevData => {\r\n      const newData = [...prevData];\r\n      const index = newData.findIndex((item) => row.key === item.key);\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        newData.splice(index, 1, { ...item, ...row });\r\n        return newData;\r\n      } else {\r\n        newData.push(row);\r\n        return newData;\r\n      }\r\n    });\r\n  }, [data]);\r\n  \r\n\r\n//   const handleSave = (row) => {\r\n//     const newData = [...data];\r\n//     const index = newData.findIndex((item) => row.key === item.key);\r\n//     if (index > -1) {\r\n//       const item = newData[index];\r\n//       newData.splice(index, 1, { ...item, ...row });\r\n//       setData(newData);\r\n//     } else {\r\n//       newData.push(row);\r\n//       setData(newData);\r\n//     }\r\n   \r\n//     console.log(invoiceget);\r\n//   };\r\n\r\n  const handleDelete = (key) => {\r\n    const newData = data.filter((item) => item.key !== key);\r\n    setData(newData);\r\n  };\r\n\r\n  const history = useHistory()\r\n\r\n  const finishHandler = (e) => {\r\n    const tax = sub_totalInp * 0.8;\r\n    const total = sub_totalInp + sub_totalInp * 0.08;\r\n    console.log(\"event\",e)\r\n    // const date = new Date(\"01/01/2023\");\r\n\r\n    // const dueDate = new Date(\"01/02/2023\");\r\n\r\n    const isoDate = moment(e.date).format(\"YYYY-MM-DD\")\r\n    const isoDueDate = moment(e.dueDate).format(\"YYYY-MM-DD\")\r\n    setShowDeletedSuccess(true);\r\n    const listNew = data.map((elem) => {\r\n      return {\r\n        key: elem.key,\r\n        name: elem.name,\r\n        quantity: elem.quantity,\r\n        price: elem.price,\r\n        total: elem.quantity * elem.price,\r\n      };\r\n    });\r\n    const fdata = {\r\n        id:invoiceget.id,\r\n      tc_customer_id: param.id,\r\n      date: isoDate,\r\n      due_date: isoDueDate,\r\n      status:\"pending\",\r\n      sub_total: sub_totalInp,\r\n      tax: tax.toString(),\r\n      discount: 0,\r\n      total: total.toString(),\r\n      line_items: listNew,\r\n    };\r\n    \r\n\r\n    axios({\r\n      method: \"post\",\r\n      url: \"/api/tc/update-invoice\",\r\n      data: fdata,\r\n      headers: {\r\n        // \"Content-Type\": \"multipart/form-data; boundary=-- --WebKitFormBoundary7MA4YWxkTrZu0gW\",\r\n        Authorization: `Bearer ${tok}`,\r\n      },\r\n    }).then((response) => {\r\n      console.log(response.data);\r\n      if (response.data.success) {\r\n        console.log(response.data.data);\r\n      } else {\r\n        console.log(response);\r\n      }\r\n    }).then((err)=>{\r\n      console.log(err);\r\n    })\r\n  };\r\n\r\n  const AddRow = () => {\r\n    const newData = {\r\n      key: data.length + 1,\r\n      name: \"\",\r\n      quantity: 0,\r\n      price: 0,\r\n    };\r\n    setData([...data, newData]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (invoiceget==null) {\r\n        axios({\r\n            method: \"post\",\r\n            url: \"/api/tc/get-invoice\",\r\n            data: { id: param.id },\r\n            headers: {\r\n              // \"Content-Type\": \"multipart/form-data; boundary=-- --WebKitFormBoundary7MA4YWxkTrZu0gW\",\r\n              Authorization: `Bearer ${tok}`,\r\n            },\r\n          })\r\n            .then((response) => {\r\n              setInvoiceget(response.data.data);\r\n              setData(response.data.data.line_items.map((elem,ind) => {\r\n                return {\r\n                  key: ind,\r\n                  name: elem.name,\r\n                  quantity: elem.quantity,\r\n                  price: elem.price,\r\n                  total: elem.quantity * elem.price,\r\n                };\r\n              }))\r\n              setsub_totalInp(response.data.data.sub_total)\r\n              console.log(response.data.data);\r\n            })\r\n            .then((err) => {\r\n              console.log(err);\r\n            });\r\n        \r\n    }\r\n    setsub_totalInp(calculatesubtotal());\r\n    console.log(data);\r\n  }, [handleSave]);\r\n\r\n  return (\r\n    <div>\r\n      <PageHeading\r\n        icon={UserManagementIcon}\r\n        title=\"Customer Management / Customer Accounts / Customer Details / Edit Invoice\"\r\n      />\r\n      <Form\r\n        form={form}\r\n        labelCol={{\r\n          span: 10,\r\n        }}\r\n        wrapperCol={{\r\n          span: 18,\r\n        }}\r\n        layout=\"vertical\"\r\n        // onValuesChange={onFormLayoutChange}\r\n        onFinish={finishHandler}\r\n      >\r\n        <Row>\r\n          <Col className=\"mr-4\" span={24}>\r\n            <Card className=\"mt-3\">\r\n              <p\r\n                style={{ color: \"#000B23\" }}\r\n                className=\"d-flex align-items-center font-size-md font-weight-bold mb-4\"\r\n              >\r\n                {\" \"}\r\n                <Icon className=\"mr-2\" component={PaymentsActiveIcon} /> Edit Invoice\r\n              </p>\r\n              <Row align=\"bottom\">\r\n                <Col span={8}>\r\n                  <Form.Item name=\"customer\" label=\"Customer\">\r\n                    <Input />\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col span={8}>\r\n                  <Form.Item name=\"date\" label=\"Date\">\r\n                    <DatePicker\r\n                      // defaultValue={dayjs(\"01/01/2023\", dateFormatList[0])}\r\n                      format={dateFormatList}\r\n                    />\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col span={8}>\r\n                  <Form.Item name=\"due_date\" label=\"Due Date\">\r\n                    <DatePicker\r\n                      // defaultValue={dayjs(\"01/01/2023\", dateFormatList[2])}\r\n                      format={dateFormatList}\r\n                    />\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col span={24}>\r\n                  <Table dataSource={invoiceget!=null && data}>\r\n                    <Column\r\n                      title=\"Name\"\r\n                      dataIndex=\"name\"\r\n                      key=\"name\"\r\n                      render={(text, record) => (\r\n                        <Input\r\n                          value={text}\r\n                          onChange={(e) =>\r\n                            handleSave({ ...record, name: e.target.value })\r\n                          }\r\n                        />\r\n                      )}\r\n                    />\r\n                    <Column\r\n                      title=\"Quantity\"\r\n                      dataIndex=\"quantity\"\r\n                      key=\"quantity\"\r\n                      render={(text, record) => (\r\n                        <InputNumber\r\n                          value={text}\r\n                          onChange={(value) =>\r\n                            handleSave({ ...record, quantity: value })\r\n                          }\r\n                        />\r\n                      )}\r\n                    />\r\n                    <Column\r\n                      title=\"Price\"\r\n                      dataIndex=\"price\"\r\n                      key=\"price\"\r\n                      render={(text, record) => (\r\n                        <InputNumber\r\n                          value={text}\r\n                          onChange={(value) =>\r\n                            handleSave({ ...record, price: value })\r\n                          }\r\n                        />\r\n                      )}\r\n                    />\r\n                    <Column\r\n                      title=\"Total\"\r\n                      dataIndex=\"total\"\r\n                      key=\"total\"\r\n                      render={(text, record) => (\r\n                        <span>{record.quantity * record.price}</span>\r\n                      )}\r\n                    />\r\n                    <Column\r\n                      title=\"Action\"\r\n                      key=\"action\"\r\n                      render={(text, record) => (\r\n                        <span>\r\n                          <a href=\"#\" onClick={() => handleDelete(record.key)}>\r\n                            Delete\r\n                          </a>\r\n                        </span>\r\n                      )}\r\n                    />\r\n                  </Table>\r\n                  <Button className=\"mt-3 mb-4\" type=\"default\" onClick={AddRow}>\r\n                    Add Row\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n              <Row align=\"bottom\">\r\n                <Col span={24}>\r\n                  {/* <Form.Item name=\"sub_total\" label=\"Sub Total\"> */}\r\n                  {/* <InputNumber defaultValue={sub_totalInp} /> */}\r\n                  {/* </Form.Item> */}\r\n                  <div className=\"d-flex justify-content-between px-5\">\r\n                    <h5>Sub Total</h5>\r\n                    <h5>{invoiceget!=null && sub_totalInp}</h5>\r\n                  </div>\r\n                </Col>\r\n                <Col span={24}>\r\n                  <div className=\"d-flex justify-content-between pl-5\">\r\n                    <h5>Discount</h5>\r\n                    <Form.Item name=\"discount\" label=\" \">\r\n                      <Input defaultValue={invoiceget!=null && invoiceget.discount.toString()} />\r\n                    </Form.Item>\r\n                  </div>\r\n                </Col>\r\n                <Col span={24}>\r\n                  {/* <Form.Item name=\"tax\" label=\"Tax\">\r\n                    <Input defaultValue={\"7%\"} />\r\n                  </Form.Item> */}\r\n                  <div className=\"d-flex justify-content-between px-5\">\r\n                    <h5>Tax 8%</h5>\r\n                    <h5>{invoiceget!=null && sub_totalInp * 0.08}</h5>\r\n                  </div>\r\n                </Col>\r\n                <Col span={24}>\r\n                  {/* <Form.Item name=\"total\" label=\"Total\">\r\n                    <InputNumber />\r\n                  </Form.Item> */}\r\n                  <div className=\"d-flex justify-content-between px-5\">\r\n                    <h5>Total</h5>\r\n                    <h5>{invoiceget!=null && sub_totalInp + sub_totalInp * 0.08}</h5>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Form.Item className={`d-flex align-items-end Button`}>\r\n          <Button onClick={history.goBack}>Back</Button>\r\n          <Button\r\n            onClick={() => {form.resetFields(); setData([{\r\n              key: 0,\r\n              name: \"\",\r\n              quantity: \"\",\r\n              price: \"\",\r\n              total: \"elem.quantity * elem.price\",\r\n            }])}}\r\n            className=\"mx-3\"\r\n          >\r\n            Clear All\r\n          </Button>\r\n\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Save\r\n          </Button>\r\n        </Form.Item>\r\n        <Modal\r\n          centered\r\n          visible={showDeletedSuccess}\r\n          footer={[null]}\r\n          onCancel={() => {\r\n            setShowDeletedSuccess(false);\r\n          }}\r\n        >\r\n          <SuccessSubmit\r\n            icon={Successfully}\r\n            title=\"Invoice Edited Successfully!\"\r\n            desc=\"Invoice has been edited and saved in the system\"\r\n          />\r\n        </Modal>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditInvoice;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"SendInvoice_card__7wVnK\",\"textColor\":\"SendInvoice_textColor__-0hXV\",\"add_details\":\"SendInvoice_add_details__OV1md\",\"total_amt\":\"SendInvoice_total_amt__hRs3R\",\"tag\":\"SendInvoice_tag__v7EC4\",\"send_btn\":\"SendInvoice_send_btn__WRNCC\",\"action\":\"SendInvoice_action__NHlfs\"};","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\n\r\nimport {\r\n  Card,\r\n  Typography,\r\n  Col,\r\n  Row,\r\n  List,\r\n  Avatar,\r\n  Divider,\r\n  Tag,\r\n  Button,\r\n} from \"antd\";\r\nimport { Table, Input, InputNumber } from \"antd\";\r\nimport Icon from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\n\r\nimport PageHeading from \"components/shared-components/PageHeading/PageHeading\";\r\nimport Modal from \"components/UI/Modal\";\r\n\r\nimport logo from \"assets/grand-energy-logo-small.png\";\r\nimport { ItemsAndServicesPageIcon } from \"assets/svg/icon\";\r\nimport HandBagImg from \"assets/HandBag.png\";\r\nimport SneakersImg from \"assets/Sneakers.png\";\r\n// import { SendIcon } from \"../../svgIcons\";\r\n// import { PdfIcon } from \"../../svgIcons\";\r\n\r\nimport classes from \"../../ItemsAndServices/Invoices/SendInvoice/SendInvoice.module.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// import SendQuotationModal from \"./SendQuotationModal\";\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nconst dataItems = [\r\n  {\r\n    title: \"1. Seawoods North\",\r\n    // image: HandBagImg\r\n  },\r\n  {\r\n    title: \"1. Seawoods North\",\r\n    // image: SneakersImg\r\n  },\r\n];\r\n\r\nconst dataServices = [\"Leather Replacement\", \"Shoe Shine & Polish\"];\r\n\r\nconst dataQty = [1, 1];\r\n\r\nconst dataPrice = [\"S$100.00\", \"S$100.00\"];\r\n\r\nconst dataTotal = [\"S$100.00\", \"S$100.00\"];\r\n\r\nconst dataGrandTotal = [\r\n  { text: \"Subtotal\", amt: \"S$100.00\" },\r\n  {\r\n    text: \"Discount\",\r\n    amt: \"S$100.00\",\r\n    // tag: { text: \"10%\", color: \"#0099A8\" }\r\n  },\r\n  {\r\n    text: \"Tax/GST\",\r\n    amt: \"S$100.00\",\r\n    // tag: { text: \"10%\", color: \"#E82E2E\" }\r\n  },\r\n];\r\nconst { Column } = Table;\r\nconst dataPaymentDetails = [\r\n  { text: \"Transaction Id:\", val: \"N/A\" },\r\n  { text: \"Payment Date:\", val: \"06/11/2022, 10:00 Am\" },\r\n  { text: \"Payment Method\", val: \"Cash\" },\r\n];\r\nconst Invoice = () => {\r\n  const param = useParams();\r\n  const tok = localStorage.getItem(\"token\");\r\n  const [invdata, setInvdata] = useState({});\r\n  // const [showModal , setShowModal] = useState(false);\r\n  const history = useHistory()\r\n  // const showModalHandler = () => {\r\n  //   setShowModal(prev => !prev);\r\n  // }\r\n\r\n  function printDiv(divName) {\r\n    var printContents = document.getElementById(divName).innerHTML;\r\n    var originalContents = document.body.innerHTML;\r\n    // console.log(printContents)\r\n    document.body.innerHTML =\r\n      \"<html><head><title></title></head><body>\" + printContents + \"</body>\";\r\n\r\n    window.print();\r\n\r\n    document.body.innerHTML = originalContents;\r\n  }\r\n\r\n  useEffect(() => {\r\n    const data = { id: param.id };\r\n    axios({\r\n      method: \"post\",\r\n      url: \"/api/tc/get-invoice\",\r\n      data: data,\r\n      headers: {\r\n        // \"Content-Type\": \"multipart/form-data; boundary=-- --WebKitFormBoundary7MA4YWxkTrZu0gW\",\r\n        Authorization: `Bearer ${tok}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        console.log(\"rse\", response.data);\r\n        if (response.data.success) {\r\n          setInvdata(response.data.data);\r\n        } else {\r\n          console.log(response);\r\n        }\r\n      })\r\n      .then((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  console.log(invdata);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* {showModal && <Modal onClose={showModalHandler}><SendQuotationModal/></Modal>} */}\r\n      <PageHeading\r\n        svg={ItemsAndServicesPageIcon}\r\n        title=\"Customer Management / Customer Accounts / Customer Details / Invoices\"\r\n      />\r\n\r\n      <Card id=\"print\">\r\n        <Card className={classes.card}>\r\n          <div className=\"mt-2 mb-2\">\r\n            <img src={logo} alt=\"logo\" />\r\n          </div>\r\n        </Card>\r\n        <Card className={classes.add_details}>\r\n          <div className=\"d-flex justify-content-between\">\r\n            <div style={{ maxWidth: \"300px\" }} className=\"\">\r\n              <p\r\n                className={`${classes.textColor} m-0 font-weight-bolder font-size-lg`}\r\n              >\r\n                INV-12326565\r\n              </p>\r\n              <p\r\n                className={`${classes.textColor} m-0 mt-4  font-weight-bolder`}\r\n              >\r\n                Grand Energy pte ltd\r\n              </p>\r\n              <p className=\"m-0 mt-2\">sales@grandenergy.com</p>\r\n              <p className=\"m-0 my-2\">\r\n                510, Kampong Bahru Rd, Street 123,Singapore 456589{\" \"}\r\n              </p>\r\n              <p className=\"m-0\">Phone:(123) 456-7890</p>\r\n            </div>\r\n            <div className=\"mr-5 text-right\">\r\n              <p\r\n                className={`${classes.textColor} m-0 font-weight-bolder font-size-lg`}\r\n              >\r\n                Customer Details\r\n              </p>\r\n              <p\r\n                className={`${classes.textColor} m-0 mt-4  font-weight-bolder`}\r\n              >\r\n                Evergreen Hotel\r\n              </p>\r\n              <p className=\"m-0 mt-2\">#12324</p>\r\n              <p className=\"m-0 my-2\">1111 ABC Road,XYZ Tower</p>\r\n              <p className=\"m-0\">Singapore, 0023</p>\r\n            </div>\r\n          </div>\r\n        </Card>\r\n\r\n        <div>\r\n          {/* <Row>\r\n            <Col span={9}>\r\n              <p\r\n                style={{ color: \"#1A3353\" }}\r\n                classname=\"font-weight-bolder font-size-md\"\r\n              >\r\n                JOB SITES\r\n              </p>\r\n              <List\r\n                dataSource={dataItems}\r\n                renderItem={(item) => (\r\n                  <List.Item key={item.title} className=\" pl-0 border-0\">\r\n                    <div\r\n                      className={`d-flex font-weight-bolder align-items-center ${classes.textColor}`}\r\n                    >\r\n                      <img className=\"mr-3\" src={item.image} />\r\n                      {item.title}\r\n                    </div>\r\n                  </List.Item>\r\n                )}\r\n              />\r\n            </Col>\r\n            <Col span={15}>\r\n              <Row>\r\n                <Col span={8}>\r\n                  <p\r\n                    style={{ color: \"#1A3353\" }}\r\n                    classname=\"font-weight-bolder font-size-md\"\r\n                  >\r\n                    TASK TYPES\r\n                  </p>\r\n                  <List\r\n                    dataSource={dataServices}\r\n                    renderItem={(item) => (\r\n                      <List.Item key={item} className=\"pl-0 border-0\">\r\n                        <div\r\n                          style={{ height: \"32px\" }}\r\n                          className={`d-flex align-items-center ${classes.textColor} font-weight-semibold `}\r\n                        >\r\n                          {item}\r\n                        </div>\r\n                      </List.Item>\r\n                    )}\r\n                  />\r\n                </Col>\r\n                <Col span={4}>\r\n                  <p\r\n                    classname={`font-weight-bolder font-size-md ${classes.textColor}`}\r\n                  >\r\n                    TASKS QTY\r\n                  </p>\r\n                  <List\r\n                    dataSource={dataQty}\r\n                    renderItem={(item) => (\r\n                      <List.Item key={item} className=\"border-0\">\r\n                        <div\r\n                          style={{ height: \"32px\" }}\r\n                          className={`d-flex align-items-center ${classes.textColor} font-weight-semibold `}\r\n                        >\r\n                          {item}\r\n                        </div>\r\n                      </List.Item>\r\n                    )}\r\n                  />\r\n                </Col>\r\n                <Col span={6}>\r\n                  <p\r\n                    classname={`font-weight-bolder font-size-md ${classes.textColor}`}\r\n                  >\r\n                    PRICE\r\n                  </p>\r\n                  <List\r\n                    dataSource={dataPrice}\r\n                    renderItem={(item) => (\r\n                      <List.Item key={item} className=\"pl-0 border-0\">\r\n                        <div\r\n                          style={{ height: \"32px\" }}\r\n                          className={`d-flex align-items-center ${classes.textColor} font-weight-semibold `}\r\n                        >\r\n                          {item}\r\n                        </div>\r\n                      </List.Item>\r\n                    )}\r\n                  />\r\n                </Col>\r\n                <Col span={6}>\r\n                  <p\r\n                    classname={`font-weight-bolder font-size-md ${classes.textColor}`}\r\n                  >\r\n                    TOTAL\r\n                  </p>\r\n                  <List\r\n                    dataSource={dataTotal}\r\n                    renderItem={(item) => (\r\n                      <List.Item key={item} className=\"pl-0 border-0\">\r\n                        <div\r\n                          style={{ height: \"32px\" }}\r\n                          className={`d-flex align-items-center ${classes.textColor} font-weight-semibold `}\r\n                        >\r\n                          {item}\r\n                        </div>\r\n                      </List.Item>\r\n                    )}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row> */}\r\n          <Table dataSource={invdata.line_items}>\r\n            {/* <Column\r\n              title=\"ID\"\r\n              dataIndex=\"id\"\r\n              key=\"id\"\r\n              render={(text, record) => <p>{text}</p>}\r\n            /> */}\r\n            <Column\r\n              title=\"Name\"\r\n              dataIndex=\"name\"\r\n              key=\"name\"\r\n              render={(text, record) => <p>{text}</p>}\r\n            />\r\n            <Column\r\n              title=\"Quantity\"\r\n              dataIndex=\"quantity\"\r\n              key=\"quantity\"\r\n              render={(text, record) => <p>{text}</p>}\r\n            />\r\n            <Column\r\n              title=\"Price\"\r\n              dataIndex=\"price\"\r\n              key=\"price\"\r\n              render={(text, record) => <p>{text}</p>}\r\n            />\r\n            <Column\r\n              title=\"Total\"\r\n              dataIndex=\"total\"\r\n              key=\"total\"\r\n              render={(text, record) => <p>{text}</p>}\r\n            />\r\n          </Table>\r\n        </div>\r\n        <Divider />\r\n        <div className=\"d-flex justify-content-end\">\r\n          <Row\r\n            style={{ width: \"40%\" }}\r\n            className=\"d-flex justify-content-center\"\r\n          >\r\n            {/* <Col span={12}>\r\n              <List\r\n                dataSource={dataGrandTotal}\r\n                renderItem={(item) => (\r\n                  <List.Item\r\n                    key={item.text}\r\n                    className=\"pl-0 border-0 d-flex justify-content-center\"\r\n                  >\r\n                    <div style={{ color: '#72849A' }} className=\"d-flex align-items-center \">\r\n                      <p style={{ color: '#72849A' }} className=\"m-0\">{item.text}</p>\r\n                      {item.tag && (\r\n                        <div className={`${classes.total_amt}`}>\r\n                          <Tag\r\n                            color={item.tag.color}\r\n                            className={`h-100 w-100 ${classes.tag}`}\r\n                          >\r\n                            {item.tag.text}\r\n                          </Tag>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </List.Item>\r\n                )}\r\n              />\r\n            </Col> */}\r\n            <Col span={12}>\r\n              <List>\r\n                <List.Item className=\"pl-0 border-0 d-flex justify-content-between w-100\">\r\n                  <p style={{ color: \"#72849A\" }} className=\"m-0\">\r\n                    Sub Total :\r\n                  </p>\r\n                  <p\r\n                    className={`m-0 d-flex align-items-center ${classes.textColor} font-weight-bold`}\r\n                  >\r\n                    {invdata.sub_total}\r\n                  </p>\r\n                </List.Item>\r\n                <List.Item className=\"pl-0 border-0 d-flex justify-content-between w-100\">\r\n                  <p style={{ color: \"#72849A\" }} className=\"m-0\">\r\n                    Discount :\r\n                  </p>\r\n                  <p\r\n                    className={`m-0 d-flex align-items-center ${classes.textColor} font-weight-bold`}\r\n                  >\r\n                    {invdata.discount}\r\n                  </p>\r\n                </List.Item>\r\n                <List.Item className=\"pl-0 border-0 d-flex justify-content-between w-100\">\r\n                  <p style={{ color: \"#72849A\" }} className=\"m-0\">\r\n                    Tax 7% :\r\n                  </p>\r\n                  <p\r\n                    className={`m-0 d-flex align-items-center ${classes.textColor} font-weight-bold`}\r\n                  >\r\n                    {invdata.tax}\r\n                  </p>\r\n                </List.Item>\r\n              </List>\r\n            </Col>\r\n            <Divider />\r\n            <p\r\n              className={`${classes.textColor} font-size-lg font-weight-bolder`}\r\n            >\r\n              Net Total : {invdata.total}\r\n            </p>\r\n          </Row>\r\n        </div>\r\n        {/* <Divider /> */}\r\n      </Card>\r\n      <div className={`d-flex justify-content-end ${classes.action}`}>\r\n        <Button onClick={history.goBack}>\r\n          {/* <Icon component={PdfIcon} /> */}\r\n          Cancel\r\n        </Button>\r\n\r\n        <Button\r\n          type=\"primary\"\r\n          className={classes.send_btn}\r\n          onClick={() => {\r\n            printDiv(\"print\");\r\n          }}\r\n        >\r\n          {/* <Icon component={SendIcon} /> */}\r\n          Download\r\n        </Button>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Invoice;\r\n","import React, { useState, useEffect } from 'react'\r\nimport UserManagementIcon from \"assets/svg/usermManagementPage.svg\";\r\nimport SearchBox from 'components/shared-components/SearchBox';\r\nimport { Button, Space, Menu, Dropdown, Table, Modal } from 'antd'\r\nimport filterIcon from \"assets/svg/filterIcon.svg\";\r\nimport exportIcon from \"assets/svg/exportIcon.svg\";\r\nimport PageHeading from 'components/shared-components/PageHeading/PageHeading';\r\nimport axios from 'axios';\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport EllipsisDropdown from \"components/shared-components/EllipsisDropdown/index\";\r\nimport { Avatar } from 'antd';\r\nimport Icon from \"@ant-design/icons\";\r\nimport { VisibilityIcon, DeleteIcon, EditIcon } from \"assets/svg/ActionsSvg\";\r\nimport { BoyIcon, GirlIcon } from \"assets/svg/icon\";\r\nimport { IN, SG, CN } from 'country-flag-icons/react/3x2'\r\n\r\n\r\nfunction CustomerUsersAll() {\r\n\r\n  const [searchText, setSearchText] = useState('')\r\n  const [companyList, setCompanyList] = useState([])\r\n  const tok = localStorage.getItem('token')\r\n  const [current, setCurrent] = useState(['All'])\r\n  const [companyFilter, setCompanyFilter] = useState([])\r\n  const [openDeleteModal, setOpenDeleteModal] = useState(false);\r\n  const [userData, setUserData] = useState([]);\r\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [cpage, setCpage] = useState(0)\r\n  const [showAddedSuccess, setShowAddedSuccess] = useState(false);\r\n  const history = useHistory()\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Sr No\",\r\n      dataIndex: \"key\",\r\n      render: (item) => {\r\n        return (\r\n          <div className='d-flex align-items-center'>\r\n           {+item + 1}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"User ID\",\r\n      dataIndex: \"userId\",\r\n      render: (_,record) => {\r\n        return (\r\n          <div className='d-flex align-items-center'>\r\n           #{record.userId}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"\",\r\n      dataIndex: \"img\",\r\n      render: (item) => {\r\n        const { image, name } = item;\r\n        return (\r\n          <div className='d-flex align-items-center'>\r\n           <Avatar src={image} />\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"User Name\",\r\n      dataIndex: \"userName\",\r\n    },\r\n    {\r\n      title: \"Customer Name\",\r\n      dataIndex: \"cust_name\",\r\n    },\r\n    {\r\n      title: \"Gender\",\r\n      // dataIndex: \"gender\",\r\n      render: (_,record) => {\r\n        return (\r\n          <div className='d-flex align-items-center'>\r\n           <Icon component={record.gender === 1 ? BoyIcon : GirlIcon} />\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"Nationality\",\r\n      dataIndex: \"nationality\",\r\n    },\r\n\r\n    {\r\n      title: \"Mobile Number\",\r\n      dataIndex: \"mobileNumber\",\r\n    },\r\n    {\r\n      title: \"Email ID\",\r\n      dataIndex: \"emailId\",\r\n    },\r\n    {\r\n      title: \"Job Sites\",\r\n      dataIndex: \"jobSite\",\r\n      render: (item) =>{\r\n        let str = ''\r\n        for(let data of item) {\r\n          if(str.length > 1) str += ', '\r\n          str += \"\"+data\r\n        }\r\n        return (\r\n          <div>{str}</div>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      title: \"Status\",\r\n      dataIndex: \"status\",\r\n      render: (_,record) => {\r\n        if(record.status==='Active') return <span style={{color: \"#00AB6F\", backgroundColor: \"#EDFFF9\", padding: '4px 8px', borderRadius:'6px', fontWeight:'600', fontSize: '14px'}}>Active</span>\r\n        else return <span style={{color: '#F53434', backgroundColor: '#FFF2F2', padding: '4px 8px', borderRadius:'6px', fontWeight:'600', fontSize: '14px'}}>Inactive</span>\r\n      }\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      render: (_,record) => {\r\n        return (\r\n          <>\r\n            <EllipsisDropdown\r\n              menu={\r\n                <Menu>\r\n                  <Menu.Item>\r\n                    <Link\r\n                      to={`/app/customer-management/customer-accounts/edit-customer-user/${record.userId}`}\r\n                      className=\"d-flex align-items-center\"\r\n                    >\r\n                      <Icon className=\"mr-2\" component={EditIcon} />\r\n                      Edit\r\n                    </Link>\r\n                  </Menu.Item>\r\n                  <Menu.Item\r\n                    onClick={() => {\r\n                      ShowDeleteModal();\r\n                    }}\r\n                  >\r\n                    <span className=\"d-flex align-items-center\">\r\n                      <Icon className=\"mr-2\" component={DeleteIcon} />\r\n                      Delete\r\n                    </span>\r\n                  </Menu.Item>\r\n\r\n                  <Modal\r\n                    visible={openDeleteModal}\r\n                    // onOk={handleOk}\r\n                    onCancel={handleCancel}\r\n                    centered\r\n                    footer={[\r\n                      <Button\r\n                        style={{ color: \"#000B23\" }}\r\n                        onClick={handleCancel}\r\n                        className=\"font-weight-bold\"\r\n                      >\r\n                        No, Cancel\r\n                      </Button>,\r\n                      <Button\r\n                        type=\"primary\"\r\n                        className=\"font-weight-bold\"\r\n                        onClick={()=>handleOk(record.id)}\r\n                      >\r\n                        Yes, Confirm\r\n                      </Button>,\r\n                    ]}\r\n                  >\r\n                    <div\r\n                      style={{ color: \"#000B23\" }}\r\n                      className=\"font-weight-bolder font-size-md\"\r\n                    >\r\n                      Are you sure you want to delete this customer user?\r\n                    </div>\r\n                  </Modal>\r\n                </Menu>\r\n              }\r\n            />\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const handleCancel = () => {\r\n    setOpenDeleteModal(false);\r\n  };\r\n  const handleOk = (id) => {\r\n    setOpenDeleteModal(false);\r\n    axios\r\n      .post(\r\n        \"/api/tc/delete-customer-users\",\r\n        {\r\n          id: id\r\n        },\r\n        {\r\n          headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${tok}`\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        let res = response.data\r\n        if(res.success) {\r\n          getUsers()\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  const handlechange = (pagination) => {\r\n    if (cpage <= pagination.current) {\r\n      setPage(pagination.current)\r\n      setCpage(pagination.current)\r\n    }\r\n  }\r\n\r\n  const getUsers = () => {\r\n    axios\r\n      .post(\r\n        \"/api/tc/get-customer-users\",\r\n        {\r\n          page_index: page,\r\n          page_size: 10,\r\n          search: searchText ? searchText : null,\r\n          customer_id: companyFilter[0] || null\r\n        },\r\n        {\r\n          headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${tok}`\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        let res = response.data.data.data;\r\n        console.log(res)\r\n        let fdata = res.map((elem, ind) => {\r\n          return {\r\n            key: ind,\r\n            userId: elem.id,\r\n            userName: elem.name,\r\n            gender: elem.gender === 'Male' ? 1 : 2,\r\n            nationality: \r\n              elem.nationality === 'India' ? <IN title=\"SG\" className=\"countrtFlag\" />\r\n              : elem.nationality === 'Singapore' ? <SG title=\"SG\" className=\"countrtFlag\" />\r\n              : <CN title=\"SG\" className=\"countrtFlag\" />\r\n            ,\r\n            img: { image: elem.profile_pic, name: elem.name },\r\n            mobileNumber: elem.phone,\r\n            emailId: elem.email,\r\n            jobSite: elem.job_sites,\r\n            status: elem.status,\r\n            cust_name: elem.customer_name,\r\n            cust_pic: elem.customer_pic,\r\n          };\r\n        });\r\n        // setUserData(userData.concat(fdata));\r\n        setUserData(fdata);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const ShowDeleteModal = () => {\r\n    setOpenDeleteModal(true);\r\n  };\r\n\r\n  const getPdf = async () => {\r\n    try {\r\n      const response = await axios.post(\r\n        \"/api/tc/get-customer-users\",\r\n        {\r\n          page_index: 1,\r\n          page_size: 100000,\r\n          search: searchText ? searchText : null,\r\n          export_type: \"pdf\"\r\n        },\r\n        {\r\n          headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${tok}`\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data.url); // add this line to log the PDF URL\r\n      if (response.data.status) {\r\n        return response.data.url;\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getCompanyList = ()=> {\r\n    axios\r\n      .post(\r\n        \"/api/tc/get-customers\",\r\n        {\r\n          page_index: 1,\r\n          page_size: 100000,\r\n          statuses: [\"ACTIVE\", \"INACTIVE\"],\r\n          search : null,\r\n        },\r\n        {\r\n          headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${tok}`\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        let res = response.data.data.data;\r\n        setCompanyList(res);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  async function downloadPDF() {\r\n    try {\r\n      const pdfUrl = await getPdf();\r\n      if (pdfUrl) {\r\n        window.open(pdfUrl);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error downloading PDF:\", error);\r\n    }\r\n  }\r\n\r\n  const handleFilterClick = (e) => {\r\n    setCurrent([e.key])\r\n    if(e.key != 'All' && e.key != 'AllCompany') {\r\n      setCompanyFilter([+e.key])\r\n    }else {\r\n      setCompanyFilter([])\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getCompanyList()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    getUsers()\r\n  }, [page]);\r\n\r\n  useEffect(() => {\r\n    getUsers()\r\n  }, [companyFilter]);\r\n\r\n  useEffect(() => {\r\n    getUsers()\r\n  }, [searchText]);\r\n  \r\n\r\n  const menuFilter = (\r\n    <Menu onClick={handleFilterClick} selectedKeys={current}>\r\n      <Menu.Item key={'All'}>All</Menu.Item>\r\n      <Menu.SubMenu title=\"Company\">\r\n        <Menu.Item key={\"AllCompany\"}>All</Menu.Item>\r\n        {companyList.map((item)=> {\r\n          return <Menu.Item key={item.id}>{item.name}</Menu.Item>\r\n        })}\r\n      </Menu.SubMenu>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <PageHeading\r\n          icon={UserManagementIcon}\r\n          title=\"Customer Management / Customer Users\"\r\n        />\r\n      </div>\r\n      <div className=\"d-flex justify-content-between mb-3\">\r\n        <div className=\" d-flex align-items-center justify-content-between\">\r\n          <SearchBox setSearchText={setSearchText}/>\r\n          <Dropdown overlay={menuFilter} trigger={['click']}>\r\n            <Button className=\"d-flex align-items-center ml-2\">\r\n              <img className=\"mr-2\" src={filterIcon} alt=\"filterIcon\"></img>\r\n              Filters\r\n            </Button>\r\n          </Dropdown>\r\n\r\n          <Button onClick={downloadPDF} className=\"d-flex align-items-center ml-2\" >\r\n            <img className=\"mr-2\" src={exportIcon} alt=\"exportIcon\"></img>Export\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <Table\r\n          scroll={{\r\n            x: 1500,\r\n          }}\r\n          columns={columns}\r\n          dataSource={userData}\r\n          onChange={handlechange}\r\n        />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CustomerUsersAll","import { Button, Card, Col, Form, Input, InputNumber, Row, Upload, Switch, message, } from \"antd\";\r\nimport React from \"react\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport { Modal } from \"antd\";\r\nimport { useState, useEffect } from \"react\";\r\nimport \"./BasicDetails.css\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst getBase64 = (file) =>\r\n  new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = (error) => reject(error);\r\n  });\r\n\r\nfunction BasicDetails(props) {\r\n  const [form] = Form.useForm();\r\n  const [previewOpen, setPreviewOpen] = useState(false);\r\n  const history = useHistory()\r\n  const [previewImage, setPreviewImage] = useState(\"\");\r\n  const [previewTitle, setPreviewTitle] = useState(\"\");\r\n  const [fileList, setFileList] = useState([]);\r\n  const [documentUrl, setDocumentUrl] = useState(\"\");\r\n  const [statusActive, setStatusActive] = useState(false);\r\n  const tok = localStorage.getItem('token')\r\n  const handleCancel = () => setPreviewOpen(false);\r\n  const handlePreview = async (file) => {\r\n    console.log(file)\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await getBase64(file.originFileObj);\r\n    }\r\n    setPreviewImage(file.url || file.preview);\r\n    // console.log(file.url || file.preview)\r\n    setPreviewOpen(true);\r\n    setPreviewTitle(\r\n      file.name || file.url.substring(file.url.lastIndexOf(\"/\") + 1)\r\n    );\r\n  };\r\n  const handleChange = ({ fileList: newFileList }) => {\r\n    setFileList(newFileList);\r\n    console.log(newFileList);\r\n    const formData = new FormData();\r\n    if(newFileList[0].url){\r\n      setDocumentUrl(newFileList[0].url);\r\n      return;\r\n    }\r\n    formData.append(\"file\", newFileList[0].originFileObj);\r\n    axios({\r\n      method: \"post\",\r\n      url: \"/api/tc/upload-document\",\r\n      data: formData,\r\n      headers: {\r\n        \"content-type\": `multipart/form-data`,\r\n        Authorization: `Bearer ${tok}`,\r\n      },\r\n    })\r\n      .then(function (response) {\r\n        console.log(response);\r\n        if (response.data.success) {\r\n          setDocumentUrl(response.data.url);\r\n          // console.log(response.data.url);\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n  const uploadButton = (\r\n    <div>\r\n      <PlusOutlined />\r\n      <div\r\n        style={{\r\n          marginTop: 8,\r\n          width: \"250px\",\r\n        }}\r\n      >\r\n        Upload Picture\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const finishHandler = (e) => {\r\n\r\n    console.log(e.status)\r\n    if (props.id) {\r\n      axios\r\n        .post(\r\n          \"/api/tc/update-customer\",\r\n          {\r\n            id: props.id,\r\n            name: e.name,\r\n            profile_pic: documentUrl,\r\n            email: e.email,\r\n            phone: String(e.phone),\r\n            status: statusActive ? \"ACTIVE\" : \"INACTIVE\",\r\n          },\r\n          {\r\n            headers: {\r\n              \"content-type\": \"application/json\",\r\n              Authorization: `Bearer ${tok}`\r\n            },\r\n          }\r\n        )\r\n        .then((response) => {\r\n          if(!response.data.success){\r\n            message.warn(response.data.msg)\r\n            return;\r\n          }\r\n          props.onNext();\r\n          props.setCId(props.id);\r\n          props.onNext();\r\n          console.log(props.id)\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n      return\r\n    }\r\n    if (props.id) {\r\n      axios\r\n        .post(\r\n          \"/api/tc/new-customer\",\r\n          {\r\n            id: props.id,\r\n            name: e.name,\r\n            profile_pic: documentUrl,\r\n            email: e.email,\r\n            phone: String(e.phone),\r\n            status: statusActive ? 'ACTIVE':'INACTIVE',\r\n          },\r\n          {\r\n            headers: {\r\n              \"content-type\": \"application/json\",\r\n              Authorization: `Bearer ${tok}`\r\n            },\r\n          }\r\n        )\r\n        .then((response) => {\r\n          if(!response.data.success){\r\n            message.warn(response.data.msg)\r\n            return;\r\n          }\r\n          props.onNext();\r\n          props.setCId(response.data.id);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      axios\r\n        .post(\r\n          \"/api/tc/new-customer\",\r\n          {\r\n            name: e.name,\r\n            profile_pic: documentUrl,\r\n            email: e.email,\r\n            phone: String(e.phone),\r\n            status: statusActive ? \"ACTIVE\" : \"INACTIVE\",\r\n          },\r\n          {\r\n            headers: {\r\n              \"content-type\": \"application/json\",\r\n              Authorization: `Bearer ${tok}`\r\n            },\r\n          }\r\n        )\r\n        .then((response) => {\r\n          console.log(response)\r\n          if(!response.data.success){\r\n            message.warn(response.data.msg)\r\n            return;\r\n          }\r\n          props.onNext();\r\n          props.setCId(response.data.id);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n\r\n  };\r\n\r\n  const checkStatus = () => {\r\n    if(form.getFieldValue().status === 'Active') {\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  const handleStatusChange = (checked) => {\r\n    let status = form.getFieldValue().status;\r\n    setStatusActive(checked)\r\n    console.log(status)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!props.id) {\r\n      form.setFieldsValue({\r\n        status: true\r\n      })\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if(props.id) {\r\n      axios\r\n      .post(\r\n        \"/api/tc/get-customer\",\r\n        {\r\n          id: props.id,\r\n        },\r\n        {\r\n          headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${tok}`\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        let res = response.data.data;\r\n        console.log(res)\r\n          form.setFieldsValue({\r\n            customerId: res.id,\r\n            email: res.email,\r\n            name: res.name,\r\n            phone: res.phone,\r\n            status: res.status === 'ACTIVE',\r\n            profile_pic: res?.profile_pic,\r\n          })\r\n          if(res.profile_pic) setFileList([{url:res.profile_pic}])\r\n          setStatusActive(res.status === 'ACTIVE')\r\n        // );\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    }\r\n  }, [props.id]);\r\n\r\n  return (\r\n    <div>\r\n      <Form\r\n        form={form}\r\n        labelCol={{\r\n          span: 10,\r\n        }}\r\n        wrapperCol={{\r\n          span: 18,\r\n        }}\r\n        layout=\"vertical\"\r\n        // onValuesChange={onFormLayoutChange}\r\n        onFinish={finishHandler}\r\n      >\r\n        <Card className=\"mt-3\">\r\n          <Row align=\"bottom\">\r\n            <Col span={12}>\r\n              <Form.Item name=\"profile_pic\">\r\n                <Upload\r\n                  // action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                  listType=\"picture-card\"\r\n                  fileList={fileList}\r\n                  onPreview={handlePreview}\r\n                  onChange={handleChange}\r\n                  beforeUpload={() => {\r\n                    return false;\r\n                  }}\r\n                >\r\n                  {fileList.length >= 1 ? null : uploadButton}\r\n                </Upload>\r\n\r\n              </Form.Item>\r\n              <Form.Item name=\"customerId\" label=\"Customer ID\" >\r\n                <Input disabled />\r\n              </Form.Item>\r\n              <Form.Item name=\"email\" label=\"Email Id\" rules={[{ required: true, type: 'email', message: 'Please input your valid Email Id!' }]}>\r\n                <Input />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item name=\"name\" label=\"Company Name\" rules={[{ required: true, message: 'Please input Company Name!' }]}>\r\n                <Input />\r\n              </Form.Item>\r\n              <Form.Item name=\"phone\" label=\"Phone Number\" rules={[{ required: true, message: 'Please input your valid Phone Number!' },\r\n              {\r\n                message: 'Phone number must have atleast 8 digits',\r\n                validator: (_, value) => {\r\n                  if (/^\\d{8,}$/.test(value)) {\r\n                    return Promise.resolve();\r\n                  } else {\r\n                    return Promise.reject('Some message here');\r\n                  }\r\n                }\r\n              }]}>\r\n                <Input style={{ width: \"100%\" }} minLength={8} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row align=\"bottom\">\r\n            <Col span={12}>\r\n              <Form.Item name=\"status\" label=\"Status\" style={{alignContent: 'start'}}>\r\n                {statusActive ? \"ACTIVE\":\"INACTIVE\"}<Switch checked={statusActive} onClick={handleStatusChange} className=\"ml-2\"/>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Card>\r\n        <Form.Item className={`d-flex align-items-end Button`}>\r\n          <Button onClick={history.goBack}>Back</Button>\r\n          <Button\r\n            onClick={() => form.resetFields()}\r\n            className=\"mx-3\"\r\n          >\r\n            Clear All\r\n          </Button>\r\n\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Next\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n      <Modal\r\n        visible={previewOpen}\r\n        title={previewTitle}\r\n        footer={null}\r\n        onCancel={handleCancel}\r\n              \r\n      >\r\n        <img\r\n        className=\"myimg\"\r\n          alt=\"example\"\r\n          style={{\r\n            width: \"100%\",\r\n          }}\r\n          src={previewImage}\r\n        />\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BasicDetails;\r\n","import { AutoComplete, Button, Card, Col, Form, Input, InputNumber, Row, Switch, Select } from \"antd\";\r\nimport Title from \"antd/lib/typography/Title\";\r\nimport { PlusIconBlue } from \"assets/svg/icon\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./BasicDetails.css\";\r\nimport Icon from \"@ant-design/icons\";\r\nimport country from \"./country\";\r\nimport axios from \"axios\";\r\nimport JobSiteTable from \"../JobSites/JobSiteTable\";\r\nimport { useLocation } from 'react-router-dom'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction JobSiteDetails(props) {\r\n  const [editjobfield, setEditjobfield] = useState(null)\r\n  const [tog, setTog] = useState(true)\r\n  const [cus_tc_id, setCus_tc_id] = useState(null)\r\n  // const streetRef = useRef(null);\r\n  // const blockRef = useRef(null);\r\n  // const postalRef = useRef(null);\r\n  const [streetField, setStreetField] = useState(null)\r\n  const [blockField, setBlockfield] = useState(null)\r\n  const [postalField, setPostalField] = useState(null)\r\n  const [statusActive, setStatusActive] = useState(false);\r\n  const [JobSites, setJobSites] = useState([]);\r\n  const [shiftLocations, setShiftLocations] = useState([]);\r\n  // let shiftLocations= [];\r\n  const [form] = Form.useForm();\r\n  const history = useHistory()\r\n  const search = useLocation().search;\r\n  const jobsite = new URLSearchParams(search).get('jobsite');\r\n  // console.log(\"debug\", props.id, jobsite);\r\n  const tok = localStorage.getItem('token')\r\n  // console.log(props.cId);\r\n  // console.log(props.id);\r\n  const finishHandler = (e) => {\r\n    props.onNext();\r\n    // console.log(e);\r\n    axios\r\n      .post(\r\n        \"/api/tc/new-customer-job-site\",\r\n        // {\r\n        //   tc_customer_id: props.cId,\r\n        //   name: e.name,\r\n        //   block_number: e.block_number,\r\n        //   street_number: e.street_number,\r\n        //   level_number: e.level_number,\r\n        //   unit_number: e.unit_number,\r\n        //   postal_code: e.postal_code,\r\n        //   country: e.country,\r\n        //   status: statusActive ? \"ACTIVE\":\"INACTIVE\",\r\n        // },\r\n        {\r\n          tc_customer_id: cus_tc_id,\r\n          name: e.name,\r\n          block_number: '',\r\n          street_number: '',\r\n          level_number: '',\r\n          unit_number: '',\r\n          postal_code: '',\r\n          country: '',\r\n          address: e.address,\r\n          status: statusActive ? \"ACTIVE\":\"INACTIVE\",\r\n        },\r\n        {\r\n          headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${tok}`\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        console.log(response);\r\n        form.resetFields();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  \r\n  const addmore = () => {\r\n    let e = form.getFieldsValue();\r\n    console.log(editjobfield, props.id, jobsite)\r\n    if (editjobfield || jobsite) {\r\n      console.log(\"update\");\r\n      axios\r\n        .post(\r\n          \"/api/tc/update-customer-job-site\",\r\n          // {\r\n          //   id: editjobfield ? editjobfield : jobsite,\r\n          //   tc_customer_id: props.id ? props.id : cus_tc_id,\r\n          //   name: e.name,\r\n          //   block_number: e.block_number,\r\n          //   street_number: e.street_number,\r\n          //   level_number: e.level_number,\r\n          //   unit_number: e.unit_number,\r\n          //   postal_code: e.postal_code,\r\n          //   country: e.country,\r\n          //   status: statusActive ? \"ACTIVE\":\"INACTIVE\",\r\n          // },\r\n          {\r\n            id: editjobfield ? editjobfield : jobsite,\r\n            tc_customer_id: cus_tc_id,\r\n            name: e.name,\r\n            block_number: '',\r\n            street_number: '',\r\n            level_number: '',\r\n            unit_number: '',\r\n            postal_code: '',\r\n            country: '',\r\n            address: e.address,\r\n            status: statusActive ? \"ACTIVE\":\"INACTIVE\",\r\n          },\r\n          {\r\n            headers: {\r\n              \"content-type\": \"application/json\",\r\n              Authorization: `Bearer ${tok}`\r\n            },\r\n          }\r\n        )\r\n        .then((response) => {\r\n          console.log(response);\r\n          setTog(tog ? false : true)\r\n          setEditjobfield(null)\r\n          form.resetFields();\r\n          if (jobsite) {\r\n            // history.push('/app/customer-management/job-sites')\r\n            history.goBack();\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n      return\r\n    }\r\n    if (props.id) {\r\n      const passId = props.id;\r\n      console.log(passId);\r\n      axios\r\n        .post(\r\n          \"/api/tc/new-customer-job-site\",\r\n          {\r\n            tc_customer_id: passId,\r\n            name: e.name,\r\n            block_number: e.block_number,\r\n            street_number: e.street_number,\r\n            level_number: e.level_number,\r\n            unit_number: e.unit_number,\r\n            postal_code: e.postal_code,\r\n            country: e.country,\r\n            status: statusActive ? \"ACTIVE\":\"INACTIVE\",\r\n          },\r\n          {\r\n            headers: {\r\n              \"content-type\": \"application/json\",\r\n              Authorization: `Bearer ${tok}`\r\n            },\r\n          }\r\n        )\r\n        .then((response) => {\r\n          console.log(response);\r\n          setTog(tog ? false : true)\r\n          form.resetFields();\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      axios\r\n        .post(\r\n          \"/api/tc/new-customer-job-site\",\r\n          {\r\n            tc_customer_id: props.cId,\r\n            name: e.name,\r\n            block_number: e.block_number,\r\n            street_number: e.street_number,\r\n            level_number: e.level_number,\r\n            unit_number: e.unit_number,\r\n            postal_code: e.postal_code,\r\n            country: e.country,\r\n            status: statusActive ? \"ACTIVE\":\"INACTIVE\",\r\n          },\r\n          {\r\n            headers: {\r\n              \"content-type\": \"application/json\",\r\n              Authorization: `Bearer ${tok}`\r\n            },\r\n          }\r\n        )\r\n        .then((response) => {\r\n          console.log(response);\r\n          setTog(tog ? false : true)\r\n          form.resetFields();\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n\r\n\r\n  };\r\n\r\n  const back = ()=> {\r\n    history.goBack()\r\n  }\r\n\r\n  useEffect(() => {\r\n    // console.log(\"edit\", editjobfield);\r\n    // if (editjobfield) {\r\n\r\n    //   axios\r\n    //     .post(\r\n    //       \"/api/tc/get-customer-job-site\",\r\n    //       {\r\n    //         id: jobsite\r\n    //       },\r\n    //       {\r\n    //         headers: {\r\n    //           \"content-type\": \"application/json\",\r\n    //           Authorization: `Bearer ${tok}`\r\n    //         },\r\n    //       }\r\n    //     )\r\n    //     .then((response) => {\r\n    //       const e = response.data.data;\r\n    //       console.log(\"e\",e);\r\n    //       form.setFieldsValue({\r\n    //         name: e.name,\r\n    //         block_number: e.block_number,\r\n    //         street_number: e.street_number,\r\n    //         level_number: e.level_number,\r\n    //         unit_number: e.unit_number,\r\n    //         postal_code: e.postal_code,\r\n    //         country: e.country,\r\n    //       })\r\n    //     })\r\n    //     .catch((error) => {\r\n    //       console.log(error);\r\n    //     });\r\n    //   return\r\n    // }\r\n    if (jobsite) {\r\n      axios\r\n        .post(\r\n          \"/api/tc/get-customer-job-site\",\r\n          {\r\n            id: jobsite\r\n          },\r\n          {\r\n            headers: {\r\n              \"content-type\": \"application/json\",\r\n              Authorization: `Bearer ${tok}`\r\n            },\r\n          }\r\n        )\r\n        .then((response) => {\r\n          const e = response.data.data;\r\n          console.log(\"e\", e);\r\n          setCus_tc_id(e.tc_customer_id)\r\n          // form.setFieldsValue({\r\n          //   name: e.name,\r\n          //   block_number: e.block_number,\r\n          //   street_number: e.street_number,\r\n          //   level_number: e.level_number,\r\n          //   unit_number: e.unit_number,\r\n          //   postal_code: e.postal_code,\r\n          //   country: e.country,\r\n          //   address: e.address,\r\n          // })\r\n          console.log(e.address)\r\n          let shift = shiftLocations.find((elem) => elem.location_address === e.address)\r\n          console.log(shiftLocations)\r\n          form.setFieldsValue({\r\n            name: e.name,\r\n            address: e.address,\r\n            shift_name: e.address,\r\n          })\r\n          setStatusActive(e.status === 'ACTIVE')\r\n\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n      return\r\n    }\r\n    axios\r\n      .post(\r\n        \"/api/tc/get-customer-job-site\",\r\n        {\r\n          id: editjobfield\r\n        },\r\n        {\r\n          headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${tok}`\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        const e = response.data.data;\r\n        // form.setFieldsValue({\r\n        //   name: e.name,\r\n        //   block_number: e.block_number,\r\n        //   street_number: e.street_number,\r\n        //   level_number: e.level_number,\r\n        //   unit_number: e.unit_number,\r\n        //   postal_code: e.postal_code,\r\n        //   country: e.country,\r\n        //   address: e.address,\r\n        //   status: e.status,\r\n        // })\r\n        let shift = shiftLocations.find((elem) => elem.location_address == e.address)\r\n        form.setFieldsValue({\r\n          name: e.name,\r\n          address: e.address,\r\n          shift_name: e.address,\r\n        })\r\n        setStatusActive(e.status === 'ACTIVE')\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n  }, [editjobfield])\r\n\r\n  const [value, setValue] = useState('');\r\n  const [pincodeUpdate, setPincodeUpdate] = useState('');\r\n  const [options, setOptions] = useState([]);\r\n\r\n  const onSelect = (data) => {\r\n    console.log('onSelect', data);\r\n  };\r\n\r\n  const getPostalCode = (text) => {\r\n    axios\r\n      .post(\r\n        \"/api/get-pincode\",\r\n        {\r\n          pin_code: text\r\n        },\r\n        {\r\n          headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${tok}`\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        // console.log(response.data)\r\n        if (response.data.success) {\r\n          let result = response.data.results;\r\n          result = result.filter(item => item.POSTAL && (item.POSTAL).toUpperCase() != 'NIL');\r\n          setOptions(result)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const selectAddress = (postal) => {\r\n    const address = options.filter((item) => item.POSTAL == postal)\r\n    console.log('check -1')\r\n    console.log(address)\r\n\r\n    if (address.length > 0) {\r\n      let street_no = ''\r\n      if (address[0].ROAD_NAME) {\r\n        street_no = address[0].ROAD_NAME\r\n      }\r\n\r\n      form.setFieldsValue({\r\n        block_number: address[0].BLK_NO,\r\n        street_number: street_no,\r\n        postal_code: address[0].POSTAL,\r\n      });\r\n    }\r\n    \r\n  }\r\n\r\n  const handleStatusChange = (checked) => {\r\n    let status = form.getFieldValue().status;\r\n    setStatusActive(checked)\r\n    console.log(status)\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n   getPostalCode(value)\r\n   console.log(value)\r\n  }, [value])\r\n\r\n  const getShiftLocations = (text) => {\r\n    axios\r\n      .post(\r\n        \"/api/hrms/all-shift-locations\",\r\n        {\r\n          search: ''\r\n        },\r\n        {\r\n          headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${tok}`\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        // console.log(response.data)\r\n        if (response.data.success) {\r\n          let result = response.data.shift_locations;\r\n          // shiftLocations = result\r\n          setShiftLocations(result)\r\n          console.log(shiftLocations)\r\n          // let address = form.getFieldValue(\"name\")\r\n          // let shift = result.find((elem) => elem.location_address == address)\r\n          // form.setFieldsValue({\r\n          //   shift_name: shift.location_address\r\n          // })\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const getJobSites = (text) => {\r\n    axios\r\n      .post(\r\n        \"/api/all-user-groups\",\r\n        {\r\n          search: ''\r\n        },\r\n        {\r\n          headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${tok}`\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          let result = response.data.user_groups;\r\n          result = result.filter(item => item.location_id != null);\r\n          setJobSites(result)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const handleJobsiteClick = (event)=> {\r\n    let jobsiteObj = JobSites.find((e) => e.name == event)\r\n    if(jobsiteObj) {\r\n      let location = shiftLocations.find(e => e.id == jobsiteObj.location_id)\r\n    form.setFieldsValue({\r\n      shift_name: location.location_name,\r\n      address: location.location_address\r\n    })\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(props.cId)\r\n    console.log(props.id)\r\n    setCus_tc_id(+props.cId)\r\n    if(props.id) setCus_tc_id(+props.id)\r\n    getShiftLocations()\r\n    getJobSites()\r\n    // let address = form.getFieldValue(\"name\")\r\n    // let shift = shiftLocations.find((elem) => elem.location_address == address)\r\n    //   form.setFieldsValue({\r\n    //   shift_name: shift.location_address\r\n    // })\r\n  }, [])\r\n  \r\n\r\n\r\n  // console.log(props.cId)\r\n  return (\r\n    <div>\r\n      {/* <Form\r\n        form={form}\r\n        labelCol={{\r\n          span: 10,\r\n        }}\r\n        wrapperCol={{\r\n          span: 18,\r\n        }}\r\n        layout=\"vertical\"\r\n        // onValuesChange={onFormLayoutChange}\r\n        onFinish={finishHandler}\r\n      >\r\n        <Card className=\"mt-3\">\r\n          <p className=\"font-weight-bold font-size-md mb-4\">Job Site Details</p>\r\n          <Row align=\"bottom\">\r\n            <Col span={12}>\r\n              <Form.Item name=\"name\" label=\"Job Site Name\" rules={[{ required: true, message: 'Please input job site name!' }]}>\r\n                <Input />\r\n              </Form.Item>\r\n              <Form.Item name=\"block_number\" label=\"Block Number\" rules={[{ required: true, message: 'Please input block number!' }]}>\r\n                <Input value={blockField} />\r\n              </Form.Item>\r\n\r\n              <Form.Item name=\"level_number\" label=\"Level Number\" rules={[{ required: true, message: 'Please input level number!' }]}>\r\n                <Input />\r\n              </Form.Item>\r\n              <Form.Item name=\"postal_code\" label=\"Postal Code\" rules={[{ required: true, message: 'Please input your postal code!' }]}>\r\n                <Select\r\n                  // suffixIcon={<AddUserIcon/>}\r\n                  // style={{\r\n                  //       width: 200,\r\n                  //   }}\r\n                  //   mode='multiple'\r\n                  //   placeholder=\"postal code\"\r\n                  showSearch\r\n                  optionFilterProp=\"children\"\r\n                  filterOption={(input, option) => (option?.title ?? '').toString().toLowerCase()?.includes(input?.toLowerCase())}\r\n                  filterSort={(optionA, optionB) =>\r\n                    (optionA?.label ?? '').toString().toLowerCase().localeCompare((optionB?.label ?? '').toString().toLowerCase())\r\n                  }\r\n                  value={value}\r\n                  onSearch={setValue}\r\n                  onChange={setValue}\r\n                  onSelect={selectAddress(value)}\r\n                > {options.map((val, id) => (\r\n                    <Select.Option title={val.POSTAL} key={id} value={val?.POSTAL}>{val.ADDRESS}</Select.Option>\r\n                  ))} \r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item name=\"street_number\" label=\"Street Number\" rules={[{ required: true, message: 'Please input street number!' }]}>\r\n                <Input value={streetField}/>\r\n              </Form.Item>\r\n\r\n              <Form.Item name=\"unit_number\" label=\"Unit Number\" rules={[{ required: true, message: 'Please input unit number!' }]}>\r\n                <Input />\r\n              </Form.Item>\r\n              <Form.Item name=\"country\" label=\"Country\">\r\n                <Select>\r\n                  {country.map((elem, index) => {\r\n                    return (\r\n                      <Select.Option key={index} value={elem}>\r\n                        {elem}\r\n                      </Select.Option>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row align=\"bottom\">\r\n            <Col span={12}>\r\n              <Form.Item name=\"status\" label=\"Status\" style={{alignContent: 'start'}}>\r\n              {statusActive ? \"ACTIVE\":\"INACTIVE\"}<Switch checked={statusActive} onClick={handleStatusChange} className=\"ml-2\"/>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Card>\r\n        {!jobsite && <Card className=\"mt-2\">\r\n          <Button\r\n            block\r\n            type=\"dashed\"\r\n            className=\"d-flex align-items-center justify-content-center pt-4 pb-4\"\r\n            onClick={addmore}\r\n          >\r\n            <Icon component={PlusIconBlue} />\r\n            <Title level={3} className=\"mb-0\" bold style={{ color: \"#0E7CEB\" }}>\r\n              Add New Job Site\r\n            </Title>\r\n          </Button>\r\n        </Card>}\r\n        <Form.Item className={`d-flex align-items-end Button`}>\r\n          {!jobsite ? <Button onClick={props.onPre}>Back</Button>:\r\n          <Button onClick={back}>Back</Button>}\r\n          <Button\r\n            onClick={() => form.resetFields()}\r\n            className=\"mx-3\"\r\n          >\r\n            Clear All\r\n          </Button>\r\n\r\n          {!jobsite ? <Button type=\"primary\" htmlType=\"submit\">\r\n            Next\r\n          </Button> :\r\n            <Button onClick={addmore} type=\"primary\" htmlType=\"button\">\r\n              Save\r\n            </Button>\r\n          }\r\n        </Form.Item>\r\n      </Form> */}\r\n      <Form\r\n        form={form}\r\n        labelCol={{\r\n          span: 10,\r\n        }}\r\n        wrapperCol={{\r\n          span: 18,\r\n        }}\r\n        layout=\"vertical\"\r\n        // onValuesChange={onFormLayoutChange}\r\n        onFinish={finishHandler}\r\n      >\r\n        <Card className=\"mt-3\">\r\n          <p className=\"font-weight-bold font-size-md mb-4\">Job Site Details</p>\r\n          <Row align=\"bottom\">\r\n            <Col span={12}>\r\n              <Form.Item name=\"name\" label=\"Job Site\" rules={[{ required: true, message: 'Please input job site name!' }]}>\r\n              <Select onSelect={handleJobsiteClick}>\r\n                  {JobSites.map((elem, index) => {\r\n                    return (\r\n                      <Select.Option key={elem.name} value={elem.name}>\r\n                        {elem.name}\r\n                      </Select.Option>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item name=\"shift_name\" label=\"Shift location Name\">\r\n              <Select disabled={true}>\r\n                  {shiftLocations.map((elem, index) => {\r\n                    return (\r\n                      <Select.Option key={index} value={elem.location_address}>\r\n                        {elem.location_name}\r\n                      </Select.Option>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row align=\"bottom\">\r\n            <Col span={12}>\r\n            <Form.Item name=\"address\" label=\"Job Site Address\">\r\n                <Input disabled/>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row align=\"bottom\">\r\n            <Col span={12}>\r\n              <Form.Item name=\"status\" label=\"Status\" style={{alignContent: 'start'}}>\r\n              {statusActive ? \"ACTIVE\":\"INACTIVE\"}<Switch checked={statusActive} onClick={handleStatusChange} className=\"ml-2\"/>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Card>\r\n        {!jobsite && <Card className=\"mt-2\">\r\n          <Button\r\n            block\r\n            type=\"dashed\"\r\n            className=\"d-flex align-items-center justify-content-center pt-4 pb-4\"\r\n            onClick={addmore}\r\n          >\r\n            <Icon component={PlusIconBlue} />\r\n            <Title level={3} className=\"mb-0\" bold style={{ color: \"#0E7CEB\" }}>\r\n              Add New Job Site\r\n            </Title>\r\n          </Button>\r\n        </Card>}\r\n        <Form.Item className={`d-flex align-items-end Button`}>\r\n          {!jobsite ? <Button onClick={props.onPre}>Back</Button>:\r\n          <Button onClick={back}>Back</Button>}\r\n          <Button\r\n            onClick={() => form.resetFields()}\r\n            className=\"mx-3\"\r\n          >\r\n            Clear All\r\n          </Button>\r\n\r\n          {!jobsite ? <Button type=\"primary\" htmlType=\"submit\">\r\n            Next\r\n          </Button> :\r\n            <Button onClick={addmore} type=\"primary\" htmlType=\"button\">\r\n              Save\r\n            </Button>\r\n          }\r\n        </Form.Item>\r\n      </Form>\r\n\r\n      {!jobsite && <div>\r\n        {props.id ? <JobSiteTable id={props.id} tog={tog} setEditjobfield={setEditjobfield} /> : \r\n          <JobSiteTable id={props.cId} tog={tog} setEditjobfield={setEditjobfield} />}\r\n      </div>}\r\n      {/* <div>{jobsite ? <JobSiteTable id={cus_tc_id} tog={tog} setEditjobfield={setEditjobfield}/> : \"\"}</div> */}\r\n      {/* <div>{props.cId ? <JobSiteTable id={props.cId} tog={tog} setEditjobfield={setEditjobfield} /> : \"\"}</div> */}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JobSiteDetails;\r\n","import React from \"react\";\r\n// import avatar from \"assets/Avatar2.png\";\r\nimport { Avatar } from 'antd';\r\nimport Icon from \"@ant-design/icons\";\r\nimport { BoyIcon, GirlIcon } from \"assets/svg/icon\";\r\nimport { Successfully } from \"configs/svgIcons\";\r\nimport { Button, Modal, Space, Table } from \"antd\";\r\nimport SuccessSubmit from \"views/app-views/UserManagement/AddNewStaffV2/AsiignShift/SuccessSubmit\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { IN, SG, CN } from 'country-flag-icons/react/3x2'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport EllipsisDropdown from \"components/shared-components/EllipsisDropdown/index\";\r\nimport { Menu } from \"antd\";\r\nimport { VisibilityIcon, DeleteIcon, EditIcon } from \"assets/svg/ActionsSvg\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nlet data = [\r\n];\r\n\r\n// for (let i = 2; i < 9; i++) {\r\n//   data.push({\r\n//     key: i,\r\n//     userId: \"TC-123\" + i,\r\n//     userName: \"Jane Copper\",\r\n//     gender: <Icon component={BoyIcon} />,\r\n//     nationality: \"icon\",\r\n//     img: { image: avatar, name: \"John Smith\" },\r\n//     mobileNumber: \"+91 936492648\",\r\n//     emailId: \"jane@gmail.com\",\r\n//     jobSite: \"5061 Ang Mo Kio Industrial Park 2 #01-1319 Singapore\",\r\n//     status: \"Active\",\r\n//   });\r\n// }\r\n\r\nfunction CustomerUsers(props) {\r\n  const [userData, setUserData] = useState(data);\r\n  const tok = localStorage.getItem('token')\r\n  const [openDeleteModal, setOpenDeleteModal] = useState(false);\r\n\r\n  const handleCancel = () => {\r\n    setOpenDeleteModal(false);\r\n  };\r\n\r\n  const handleOk = (associate_id) => {\r\n    console.log(associate_id)\r\n    setOpenDeleteModal(false);\r\n    axios\r\n      .post(\r\n        \"/api/tc/delete-customer-users\",\r\n        {\r\n          id: associate_id\r\n        },\r\n      )\r\n      .then((response) => {\r\n        let res = response.data\r\n        console.log(res)\r\n        if(res.success) {\r\n          getUsers()\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const ShowDeleteModal = () => {\r\n    setOpenDeleteModal(true);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Sr No\",\r\n      dataIndex: \"key\",\r\n      render: (item) => {\r\n        return (\r\n          <div className='d-flex align-items-center'>\r\n           {+item + 1}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"User ID\",\r\n      dataIndex: \"userId\",\r\n    },\r\n    {\r\n      title: \"\",\r\n      dataIndex: \"img\",\r\n      render: (item) => {\r\n        const { image, name } = item;\r\n        return (\r\n          <div className='d-flex align-items-center'>\r\n           <Avatar src={image} />\r\n           {/* <p className='m-0 p-0 ml-3 '>{name}</p> */}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"User Name\",\r\n      dataIndex: \"userName\",\r\n    },\r\n    {\r\n      title: \"Gender\",\r\n      dataIndex: \"gender\",\r\n    },\r\n    {\r\n      title: \"Nationality\",\r\n      dataIndex: \"nationality\",\r\n    },\r\n\r\n    {\r\n      title: \"Mobile Number\",\r\n      dataIndex: \"mobileNumber\",\r\n    },\r\n    {\r\n      title: \"Email ID\",\r\n      dataIndex: \"emailId\",\r\n    },\r\n    {\r\n      title: \"Job Sites\",\r\n      dataIndex: \"jobSite\",\r\n      render: (item) =>{\r\n        console.log(item)\r\n        let str = ''\r\n        for(let data of item) {\r\n          if(str.length > 1) str += ', '\r\n          str += \"\"+data\r\n        }\r\n        return (\r\n          <div>{str}</div>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      title: \"Status\",\r\n      dataIndex: \"status\",\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      // dataIndex: \"action\",\r\n      render: (_,record) => {\r\n        return (\r\n          <>\r\n            <EllipsisDropdown\r\n              menu={\r\n                <Menu>\r\n                  <Menu.Item>\r\n                    <Link\r\n                      to={`/app/customer-management/customer-accounts/edit-customer-user/${record.userId}`}\r\n                      className=\"d-flex align-items-center\"\r\n                    >\r\n                      <Icon className=\"mr-2\" component={EditIcon} />\r\n                      Edit\r\n                    </Link>\r\n                  </Menu.Item>\r\n                  <Menu.Item\r\n                    onClick={() => {\r\n                      ShowDeleteModal();\r\n                    }}\r\n                  >\r\n                    <span className=\"d-flex align-items-center\">\r\n                      <Icon className=\"mr-2\" component={DeleteIcon} />\r\n                      Delete\r\n                    </span>\r\n                  </Menu.Item>\r\n\r\n                  <Modal\r\n                    visible={openDeleteModal}\r\n                    onCancel={handleCancel}\r\n                    centered\r\n                    footer={[\r\n                      <Button\r\n                        key={'cancel'}\r\n                        style={{ color: \"#000B23\" }}\r\n                        onClick={handleCancel}\r\n                        className=\"font-weight-bold\"\r\n                      >\r\n                        No, Cancel\r\n                      </Button>,\r\n                      <Button\r\n                        key={'confirm'}\r\n                        type=\"primary\"\r\n                        className=\"font-weight-bold\"\r\n                        onClick={()=>handleOk(record.id)}\r\n                      >\r\n                        Yes, Confirm\r\n                      </Button>,\r\n                    ]}\r\n                  >\r\n                    <div\r\n                      style={{ color: \"#000B23\" }}\r\n                      className=\"font-weight-bolder font-size-md\"\r\n                    >\r\n                      Are you sure you want to delete this customer user?\r\n                    </div>\r\n                  </Modal>\r\n                </Menu>\r\n              }\r\n            />\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [cpage, setCpage] = useState(0)\r\n  const [showAddedSuccess, setShowAddedSuccess] = useState(false);\r\n  const history = useHistory()\r\n  const handleSave = async () => {\r\n    setShowAddedSuccess(true);\r\n    setTimeout(() => {\r\n      setShowAddedSuccess(false);\r\n      history.push('/app/customer-management/customer-accounts')\r\n    }, 2000);\r\n  };\r\n\r\n  const selectChangeHandler = (newSelectedRowKeys) => {\r\n    console.log(\"selectedRowKeys changed: \", newSelectedRowKeys);\r\n    setSelectedRowKeys(newSelectedRowKeys);\r\n  };\r\n\r\n  const rowSelection = {\r\n    selectedRowKeys,\r\n    onChange: selectChangeHandler,\r\n  };\r\n  const handlechange = (pagination) => {\r\n    if (cpage <= pagination.current) {\r\n      setPage(pagination.current)\r\n      setCpage(pagination.current)\r\n    }\r\n  }\r\n\r\n  const getUsers = () => {\r\n    axios\r\n      .post(\r\n        \"/api/tc/get-customer-users\",\r\n        {\r\n          page_index: page,\r\n          page_size: 10,\r\n          customer_id: props.id\r\n          // statuses: [\"Active\", \"Inactive\"],\r\n        },\r\n        {\r\n          headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${tok}`\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        let res = response.data.data.data;\r\n\r\n        let fdata = res.map((elem, ind) => {\r\n          return {\r\n            key: ind,\r\n            userId: elem.id,\r\n            userName: elem.name,\r\n            gender: <Icon component={elem.gender === 'Male' ? BoyIcon : GirlIcon} />,\r\n            nationality: \r\n              elem.nationality === 'India' ? <IN title=\"SG\" className=\"countrtFlag\" />\r\n              : elem.nationality === 'Singapore' ? <SG title=\"SG\" className=\"countrtFlag\" />\r\n              : <CN title=\"SG\" className=\"countrtFlag\" />\r\n            ,\r\n            img: { image: elem.profile_pic, name: elem.name },\r\n            mobileNumber: elem.phone,\r\n            emailId: elem.email,\r\n            jobSite: elem.job_sites,\r\n            status: elem.status,\r\n          };\r\n        });\r\n        console.log(res)\r\n        setUserData(userData.concat(fdata));\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getUsers()\r\n  }, [page]);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Table\r\n          scroll={{\r\n            x: 1300,\r\n          }}\r\n          // rowSelection={rowSelection}\r\n          columns={columns}\r\n          dataSource={userData}\r\n          onChange={handlechange}\r\n        />\r\n      </div>\r\n\r\n      <div className={`d-flex w-full justify-content-end Button mt-4`}>\r\n        <Button className=\"mx-3\" onClick={props.onPre}>Back</Button>\r\n\r\n        <Button type=\"primary\" htmlType=\"submit\" onClick={handleSave}>\r\n          Save\r\n        </Button>\r\n\r\n      </div>\r\n      <Modal\r\n        centered\r\n        visible={showAddedSuccess}\r\n        footer={[null]}\r\n        onCancel={() => {\r\n          setShowAddedSuccess(false);\r\n        }}\r\n      >\r\n        <SuccessSubmit\r\n          icon={Successfully}\r\n          title=\"Customer Added Successfully!\"\r\n          desc=\"Customer was added in the system\"\r\n        />\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CustomerUsers;\r\n","import PageHeading from \"components/shared-components/PageHeading/PageHeading\";\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport {\r\n  AddressDetailsActiveIcon,\r\n  AddressDetailsIcon,\r\n  AttendanceManagementActiveIcon,\r\n  AttendanceManagementIcon,\r\n  BasicDetailsActiveIcon,\r\n  BasicDetailsIcon,\r\n} from \"views/app-views/UserManagement/SvgIcons\";\r\n// import AttendanceManagementIcons from 'assets/svg/AttendanceManagement.svg'\r\nimport { Button, Tabs } from \"antd\";\r\nimport Icon from \"@ant-design/icons\";\r\nimport BasicDetails from \"./BasicDetails\";\r\nimport JobSiteDetails from \"./JobSiteDetails\";\r\nimport CustomerUsers from \"./CustomerUsers\";\r\nimport { UserManagementIcon } from \"configs/svgIcons\";\r\nimport plusIcon from \"assets/svg/plus.svg\";\r\nimport { Link,useParams } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst tabs = [\r\n  {\r\n    title: \"Basic Details\",\r\n    icon: BasicDetailsIcon,\r\n    activeIcon: BasicDetailsActiveIcon,\r\n  },\r\n  {\r\n    title: \"Job Site Details\",\r\n    icon: AddressDetailsIcon,\r\n    activeIcon: AddressDetailsActiveIcon,\r\n  },\r\n  {\r\n    title: \"Customer Users\",\r\n    icon: UserManagementIcon,\r\n    activeIcon: UserManagementIcon,\r\n  },\r\n];\r\n\r\nfunction ViewCustomer() {\r\n  const param = useParams()\r\n  const [cId, setCId] = useState(null);\r\n\r\n  const [currActiveKey, setCurrActiveKey] = useState(\"1\");\r\n  const tabChangeHandler = (key) => {\r\n    setCurrActiveKey(key);\r\n  };\r\n\r\n  const nextHandler = () => {\r\n    if (+currActiveKey < 3) {\r\n      const newKey = +currActiveKey + 1;\r\n\r\n      setCurrActiveKey(newKey.toString());\r\n    }\r\n  };\r\n  const preHandler = () => {\r\n    if (+currActiveKey <= 3) {\r\n      const newKey = +currActiveKey - 1;\r\n\r\n      setCurrActiveKey(newKey.toString());\r\n    }\r\n  };\r\n\r\n  const content = [\r\n    <BasicDetails onNext={nextHandler} setCId={setCId} id={param.id} />,\r\n    <JobSiteDetails onPre={preHandler} onNext={nextHandler} cId={cId} id={param.id} />,\r\n    <CustomerUsers onPre={preHandler} onNext={nextHandler} cId={cId} id={param.id} />,\r\n  ];\r\n\r\n  const extraBottons = (\r\n    <Link to={`/app/customer-management/customer-accounts/add-new-customer-user/${param.id}`}>\r\n      <Button className=\"d-flex align-items-center\" type=\"primary\" size=\"large\">\r\n        <img className=\"mr-2\" src={plusIcon} alt=\"plusIcon\"></img>\r\n        Add New\r\n      </Button>\r\n    </Link>\r\n  );\r\n\r\n  const [hideBasicDetail, setHideBasicDetail] = useState(false)\r\n  const location = useLocation()\r\n  \r\n  useEffect(() => {\r\n      if(location.search){\r\n        console.log(location.search)\r\n          console.log(\"jobsite\")\r\n          setHideBasicDetail(true)\r\n          setCurrActiveKey('2')\r\n      }else{\r\n          console.log(\"CustomerAccount\")\r\n          setHideBasicDetail(false)\r\n      }\r\n  }, [location.search])\r\n  \r\n\r\n  return (\r\n    <>\r\n      <PageHeading\r\n        title={!hideBasicDetail ? \"Customer Management / Customer Account / Add New Customer\" : \"Customer Management / Job Sites / Edit Job Site\"}\r\n        svg={UserManagementIcon}\r\n      />\r\n\r\n      <Tabs\r\n        activeKey={currActiveKey}\r\n        size=\"large\"\r\n        onChange={tabChangeHandler}\r\n        tabBarExtraContent={currActiveKey == 3 && extraBottons}\r\n      >\r\n        {!hideBasicDetail && <Tabs.TabPane\r\n          tab={\r\n            <span className=\"d-flex align-items-center hover-color\">\r\n              <Icon\r\n                component={\r\n                  currActiveKey === \"1\" ? tabs[0].activeIcon : tabs[0].icon\r\n                }\r\n              />\r\n              {tabs[0].title}\r\n            </span>\r\n          }\r\n          key=\"1\"\r\n          // disabled={disable[0]}\r\n        >\r\n          {content[0]}\r\n        </Tabs.TabPane>}\r\n        <Tabs.TabPane\r\n          tab={\r\n            <span className=\"d-flex align-items-center hover-color\">\r\n              <Icon\r\n                component={\r\n                  currActiveKey === \"2\" ? tabs[1].activeIcon : tabs[1].icon\r\n                }\r\n              />\r\n              {tabs[1].title}\r\n            </span>\r\n          }\r\n          key=\"2\"\r\n          // disabled={disable[1]}\r\n        >\r\n          {content[1]}\r\n        </Tabs.TabPane>\r\n        {!hideBasicDetail && <Tabs.TabPane\r\n          tab={\r\n            <span\r\n              className={`d-flex align-items-center hover-color ${\r\n                currActiveKey === \"3\" ? \"activePink\" : \"\"\r\n              }`}\r\n            >\r\n              <Icon\r\n                component={\r\n                  currActiveKey === \"3\" ? tabs[2].activeIcon : tabs[2].icon\r\n                }\r\n              />\r\n              {tabs[2].title}\r\n            </span>\r\n          }\r\n          key=\"3\"\r\n          // disabled={disable[2]}\r\n        >\r\n          {content[2]}\r\n        </Tabs.TabPane>}\r\n      </Tabs>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ViewCustomer;\r\n","const Country = [\r\n    \"Singapore\",\r\n    \"Malaysia\",\r\n    \"India\",\r\n    \"Bangladesh\",\r\n    \"Myanmar\",\r\n    \"Brunei Darussalam\",\r\n    \"Afghanistan\",\r\n    \"Algeria\",\r\n    \"American Samoa\",\r\n    \"Andorra\",\r\n    \"Angola\",\r\n    \"Anguilla\",\r\n    \"Antarctica\",\r\n    \"Antigua and Barbuda\",\r\n    \"Argentina\",\r\n    \"Armenia\",\r\n    \"Aruba\",\r\n    \"Australia\",\r\n    \"Austria\",\r\n    \"Azerbaijan\",\r\n    \"Bahamas\",\r\n    \"Bahrain\",\r\n    \"Barbados\",\r\n    \"Belarus\",\r\n    \"Belgium\",\r\n    \"Belize\",\r\n    \"Benin\",\r\n    \"Bermuda\",\r\n    \"Bhutan\",\r\n    \"Bolivia (Plurinational State of)\",\r\n    \"Bonaire, Sint Eustatius and Saba\",\r\n    \"Bosnia and Herzegovina\",\r\n    \"Botswana\",\r\n    \"Bouvet Island\",\r\n    \"Brazil\",\r\n    \"British Indian Ocean Territory\",\r\n    \"Bulgaria\",\r\n    \"Burkina Faso\",\r\n    \"Burundi\",\r\n    \"Cabo Verde\",\r\n    \"Cambodia\",\r\n    \"Cameroon\",\r\n    \"Canada\",\r\n    \"Cayman Islands\",\r\n    \"Central African Republic\",\r\n    \"Chad\",\r\n    \"Chile\",\r\n    \"China\",\r\n    \"Christmas Island\",\r\n    \"Cocos (Keeling) Islands\",\r\n    \"Colombia\",\r\n    \"Comoros\",\r\n    \"Congo (the Democratic Republic of the)\",\r\n    \"Congo\",\r\n    \"Cook Islands\",\r\n    \"Costa Rica\",\r\n    \"Croatia\",\r\n    \"Cuba\",\r\n    \"Curaçao\",\r\n    \"Cyprus\",\r\n    \"Czechia\",\r\n    \"Côte d\\\"Ivoire\",\r\n    \"Denmark\",\r\n    \"Djibouti\",\r\n    \"Dominica\",\r\n    \"Dominican Republic\",\r\n    \"Ecuador\",\r\n    \"Egypt\",\r\n    \"El Salvador\",\r\n    \"Equatorial Guinea\",\r\n    \"Eritrea\",\r\n    \"Estonia\",\r\n    \"Eswatini\",\r\n    \"Ethiopia\",\r\n    \"Falkland Islands [Malvinas]\",\r\n    \"Faroe Islands\",\r\n    \"Fiji\",\r\n    \"Finland\",\r\n    \"France\",\r\n    \"French Guiana\",\r\n    \"French Polynesia\",\r\n    \"French Southern Territories\",\r\n    \"Gabon\",\r\n    \"Gambia\",\r\n    \"Georgia\",\r\n    \"Germany\",\r\n    \"Ghana\",\r\n    \"Gibraltar\",\r\n    \"Greece\",\r\n    \"Greenland\",\r\n    \"Grenada\",\r\n    \"Guadeloupe\",\r\n    \"Guam\",\r\n    \"Guatemala\",\r\n    \"Guernsey\",\r\n    \"Guinea\",\r\n    \"Guinea-Bissau\",\r\n    \"Guyana\",\r\n    \"Haiti\",\r\n    \"Heard Island and McDonald Islands\",\r\n    \"Holy See\",\r\n    \"Honduras\",\r\n    \"Hong Kong\",\r\n    \"Hungary\",\r\n    \"Iceland\",\r\n    \"Indonesia\",\r\n    \"Iran (Islamic Republic of)\",\r\n    \"Iraq\",\r\n    \"Ireland\",\r\n    \"Isle of Man\",\r\n    \"Israel\",\r\n    \"Italy\",\r\n    \"Jamaica\",\r\n    \"Japan\",\r\n    \"Jersey\",\r\n    \"Jordan\",\r\n    \"Kazakhstan\",\r\n    \"Kenya\",\r\n    \"Kiribati\",\r\n    \"Korea (the Democratic People\\\"s Republic of)\",\r\n    \"Korea (the Republic of)\",\r\n    \"Kuwait\",\r\n    \"Kyrgyzstan\",\r\n    \"Lao People\\\"s Democratic Republic\",\r\n    \"Latvia\",\r\n    \"Lebanon\",\r\n    \"Lesotho\",\r\n    \"Liberia\",\r\n    \"Libya\",\r\n    \"Liechtenstein\",\r\n    \"Lithuania\",\r\n    \"Luxembourg\",\r\n    \"Macao\",\r\n    \"Madagascar\",\r\n    \"Malawi\",\r\n    \"Maldives\",\r\n    \"Mali\",\r\n    \"Malta\",\r\n    \"Marshall Islands\",\r\n    \"Martinique\",\r\n    \"Mauritania\",\r\n    \"Mauritius\",\r\n    \"Mayotte\",\r\n    \"Mexico\",\r\n    \"Micronesia (Federated States of)\",\r\n    \"Moldova (the Republic of)\",\r\n    \"Monaco\",\r\n    \"Mongolia\",\r\n    \"Montenegro\",\r\n    \"Montserrat\",\r\n    \"Morocco\",\r\n    \"Mozambique\",\r\n    \"Namibia\",\r\n    \"Nauru\",\r\n    \"Nepal\",\r\n    \"Netherlands\",\r\n    \"New Caledonia\",\r\n    \"New Zealand\",\r\n    \"Nicaragua\",\r\n    \"Niger\",\r\n    \"Nigeria\",\r\n    \"Niue\",\r\n    \"Norfolk Island\",\r\n    \"Northern Mariana Islands\",\r\n    \"Norway\",\r\n    \"Oman\",\r\n    \"Pakistan\",\r\n    \"Palau\",\r\n    \"Palestine, State of\",\r\n    \"Panama\",\r\n    \"Papua New Guinea\",\r\n    \"Paraguay\",\r\n    \"Peru\",\r\n    \"Philippines\",\r\n    \"Pitcairn\",\r\n    \"Poland\",\r\n    \"Portugal\",\r\n    \"Puerto Rico\",\r\n    \"Qatar\",\r\n    \"Republic of North Macedonia\",\r\n    \"Romania\",\r\n    \"Russian Federation\",\r\n    \"Rwanda\",\r\n    \"Réunion\",\r\n    \"Saint Barthélemy\",\r\n    \"Saint Helena, Ascension and Tristan da Cunha\",\r\n    \"Saint Kitts and Nevis\",\r\n    \"Saint Lucia\",\r\n    \"Saint Martin (French part)\",\r\n    \"Saint Pierre and Miquelon\",\r\n    \"Saint Vincent and the Grenadines\",\r\n    \"Samoa\",\r\n    \"San Marino\",\r\n    \"Sao Tome and Principe\",\r\n    \"Saudi Arabia\",\r\n    \"Senegal\",\r\n    \"Serbia\",\r\n    \"Seychelles\",\r\n    \"Sierra Leone\",\r\n    \"Sint Maarten (Dutch part)\",\r\n    \"Slovakia\",\r\n    \"Slovenia\",\r\n    \"Solomon Islands\",\r\n    \"Somalia\",\r\n    \"South Africa\",\r\n    \"South Georgia and the South Sandwich Islands\",\r\n    \"South Sudan\",\r\n    \"Spain\",\r\n    \"Sri Lanka\",\r\n    \"Sudan\",\r\n    \"Suriname\",\r\n    \"Svalbard and Jan Mayen\",\r\n    \"Sweden\",\r\n    \"Switzerland\",\r\n    \"Syrian Arab Republic\",\r\n    \"Taiwan\",\r\n    \"Tajikistan\",\r\n    \"Tanzania, United Republic of\",\r\n    \"Thailand\",\r\n    \"Timor-Leste\",\r\n    \"Togo\",\r\n    \"Tokelau\",\r\n    \"Tonga\",\r\n    \"Trinidad and Tobago\",\r\n    \"Tunisia\",\r\n    \"Turkey\",\r\n    \"Turkmenistan\",\r\n    \"Turks and Caicos Islands\",\r\n    \"Tuvalu\",\r\n    \"Uganda\",\r\n    \"Ukraine\",\r\n    \"United Arab Emirates\",\r\n    \"United Kingdom of Great Britain and Northern Ireland\",\r\n    \"United States Minor Outlying Islands\",\r\n    \"United States of America\",\r\n    \"Uruguay\",\r\n    \"Uzbekistan\",\r\n    \"Vanuatu\",\r\n    \"Venezuela (Bolivarian Republic of)\",\r\n    \"Viet Nam\",\r\n    \"Virgin Islands (British)\",\r\n    \"Virgin Islands (U.S.)\",\r\n    \"Wallis and Futuna\",\r\n    \"Western Sahara\",\r\n    \"Yemen\",\r\n    \"Zambia\",\r\n    \"Zimbabwe\",\r\n    \"Åland Islands\"\r\n];\r\n\r\nexport default Country ;","import PageHeading from \"components/shared-components/PageHeading/PageHeading\";\r\nimport React from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { Button, Card, Col, Form, Input, Row, Upload, Select, InputNumber, Switch, message } from \"antd\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport { Modal } from \"antd\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// import {\r\n//   AddressDetailsActiveIcon,\r\n//   AddressDetailsIcon,\r\n//   BasicDetailsActiveIcon,\r\n//   BasicDetailsIcon,\r\n// } from \"views/app-views/UserManagement/SvgIcons\";\r\n// import Icon from \"@ant-design/icons\";\r\n// import { UserManagementIcon } from \"configs/svgIcons\";\r\n// import { API_BASE_URL, GE_API_STAGING_URL } from \"configs/AppConfig\";\r\n\r\nimport country from \"./country\";\r\nimport { InboxOutlined } from '@ant-design/icons';\r\nconst { Dragger } = Upload;\r\n\r\nfunction AddUpdateCustomer(props) {\r\n  const param = useParams()\r\n  const isEdit = (window.location.href).includes('edit') ? true : false;\r\n  // const [cId, setCId] = useState(null);\r\n  // const [currActiveKey, setCurrActiveKey] = useState(\"1\");\r\n  // const [isUpdate, setIsUpdate] = useState(false);\r\n\r\n  const [form] = Form.useForm();\r\n  const [previewOpen, setPreviewOpen] = useState(false);\r\n  const history = useHistory()\r\n  const [previewImage, setPreviewImage] = useState(\"\");\r\n  const [previewTitle, setPreviewTitle] = useState(\"\");\r\n  const [fileList, setFileList] = useState([]);\r\n  const [fileUploadedList, setFileUploadedList] = useState([]);\r\n  const [profilePictureUrl, setProfilePictureUrl] = useState(\"\");\r\n  const [statusActive, setStatusActive] = useState(false);\r\n  const tok = localStorage.getItem('token');\r\n\r\n  const dragger_props = {\r\n    name: 'file',\r\n    multiple: false,\r\n    // fileList: fileUploadedList,\r\n    action: `${axios.defaults.baseURL}/api/tc/upload-document`,\r\n    headers: {\r\n      Authorization: `Bearer ${tok}`,\r\n    },\r\n    onChange(info) {\r\n      const { status } = info.file;\r\n      if (status !== 'uploading') {\r\n        console.log(fileUploadedList);\r\n        console.log(info.file, info.fileList);\r\n      }\r\n      if (status === 'done') {\r\n        message.success(`${info.file.name} file uploaded successfully.`);\r\n        form.setFieldsValue({\r\n          uploaded_file: {\r\n            name: info.file.name,\r\n            url: info.file.response.url,\r\n          }\r\n        })\r\n      } else if (status === 'error') {\r\n        message.error(`${info.file.name} file upload failed.`);\r\n      }\r\n    },\r\n    onDrop(e) {\r\n      message.success(`${e.dataTransfer.files} file is deleted.`);\r\n      console.log('Dropped files', e.dataTransfer.files);\r\n      form.setFieldsValue({\r\n        uploaded_file: null\r\n      })\r\n    },\r\n  };\r\n\r\n  // const [pincodeUpdate, setPincodeUpdate] = useState('');\r\n  const [value, setValue] = useState('');\r\n  const [options, setOptions] = useState([]);\r\n\r\n  const getPostalCode = (text) => {\r\n    axios\r\n      .post(\r\n        \"/api/get-pincode\",\r\n        {\r\n          pin_code: text\r\n        },\r\n        {\r\n          headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${tok}`\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          let result = response.data.results;\r\n          if(response.data.results.length) console.log(response.data.results)\r\n          // result = result.filter(item => item.POSTAL && (item.POSTAL).toUpperCase() != 'NIL');\r\n          setOptions(result)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const selectAddress = (postal) => {\r\n    const address = options.filter((item) => item.POSTAL == postal)\r\n    // console.log(address)\r\n\r\n    if (address.length > 0) {\r\n      let street_no = ''\r\n      if (address[0].ROAD_NAME) {\r\n        street_no = address[0].ROAD_NAME\r\n      }\r\n\r\n      form.setFieldsValue({\r\n        block_number: address[0].BLK_NO,\r\n        street_number: street_no,\r\n        postal_code: address[0].POSTAL,\r\n      });\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getPostalCode(value)\r\n    console.log(value)\r\n  }, [value])\r\n\r\n  const handleCancel = () => setPreviewOpen(false);\r\n  const handlePreview = async (file) => {\r\n    console.log(file)\r\n    if (!file.url && !file.preview) {\r\n    //   file.preview = await getBase64(file.originFileObj);\r\n    }\r\n    setPreviewImage(file.url || file.preview);\r\n    // console.log(file.url || file.preview)\r\n    setPreviewOpen(true);\r\n    setPreviewTitle(\r\n      file.name || file.url.substring(file.url.lastIndexOf(\"/\") + 1)\r\n    );\r\n  };\r\n  const handleChange = ({ fileList: newFileList }) => {\r\n    setFileList(newFileList);\r\n    console.log(newFileList);\r\n    const formData = new FormData();\r\n    if(newFileList[0].url){\r\n      setProfilePictureUrl(newFileList[0].url);\r\n      return;\r\n    }\r\n    formData.append(\"file\", newFileList[0].originFileObj);\r\n    axios({\r\n      method: \"post\",\r\n      url: \"/api/tc/upload-document\",\r\n      data: formData,\r\n      headers: {\r\n        \"content-type\": `multipart/form-data`,\r\n        Authorization: `Bearer ${tok}`,\r\n      },\r\n    })\r\n      .then(function (response) {\r\n        console.log(response);\r\n        if (response.data.success) {\r\n          setProfilePictureUrl(response.data.url);\r\n          // console.log(response.data.url);\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n  const uploadButton = (\r\n    <div>\r\n      <PlusOutlined />\r\n      <div\r\n        style={{\r\n          marginTop: 8,\r\n          width: \"250px\",\r\n        }}\r\n      >\r\n        Upload Picture\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const finishHandler = (e) => {\r\n    console.log(e.status)\r\n    let data_creater = localStorage.getItem('name');\r\n    if (isEdit && (param.id || props.id)) {\r\n      axios\r\n        .post(\r\n          \"/api/tc/update-customer\",\r\n          {\r\n            id: param.id,\r\n            name: e.name,\r\n            profile_pic: profilePictureUrl,\r\n            email: e.email,\r\n            phone: String(e.phone),\r\n            status: e.status,\r\n            other_details: JSON.stringify({\r\n              contact_name: e.contact_name,\r\n              office_contact_number: e.office_contact_number,\r\n              uen_number: e.uen_number,\r\n              postal_code: e.postal_code,\r\n              block_number: e.block_number,\r\n              level_number: e.level_number,\r\n              unit_number: e.unit_number,\r\n              street_number: e.street_number,\r\n              country: e.country,\r\n              created_by: e.created_by || data_creater,\r\n              uploaded_file: e.uploaded_file || '',\r\n            })\r\n          },\r\n          {\r\n            headers: {\r\n              \"content-type\": \"application/json\",\r\n              Authorization: `Bearer ${tok}`\r\n            },\r\n          }\r\n        )\r\n        .then((response) => {\r\n          if(!response.data.success){\r\n            message.warn(response.data.msg)\r\n            return;\r\n          }\r\n          history.goBack();\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n      return\r\n    } else {\r\n      axios\r\n        .post(\r\n          \"/api/tc/new-customer\",\r\n          {\r\n            name: e.name,\r\n            profile_pic: profilePictureUrl,\r\n            email: e.email,\r\n            phone: String(e.phone),\r\n            status: \"Pending Approval\",\r\n            other_details: JSON.stringify({\r\n              contact_name: e.contact_name,\r\n              office_contact_number: e.office_contact_number,\r\n              uen_number: e.uen_number,\r\n              postal_code: e.postal_code,\r\n              block_number: e.block_number,\r\n              level_number: e.level_number,\r\n              unit_number: e.unit_number,\r\n              street_number: e.street_number,\r\n              country: e.country,\r\n              created_by: data_creater,\r\n              uploaded_file: e.uploaded_file || '',\r\n            })\r\n          },\r\n          {\r\n            headers: {\r\n              \"content-type\": \"application/json\",\r\n              Authorization: `Bearer ${tok}`\r\n            },\r\n          }\r\n        )\r\n        .then((response) => {\r\n          console.log(response)\r\n          if(!response.data.success){\r\n            if(response.data.msg) message.warn(response.data.msg)\r\n            else message.error('Something went wrong');\r\n            return;\r\n          }\r\n          history.goBack();\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  // const checkStatus = () => {\r\n  //   if(form.getFieldValue().status === 'Active') {\r\n  //     return true\r\n  //   }\r\n  //   return false\r\n  // }\r\n  // const handleStatusChange = (checked) => {\r\n  //   let status = form.getFieldValue().status;\r\n  //   setStatusActive(checked)\r\n  // }\r\n  // const getFilledFields = (type) => {};\r\n\r\n  useEffect(() => {\r\n    if(!isEdit) {\r\n      form.setFieldsValue({\r\n        status: true\r\n      })\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log('Is Customer Edit :',isEdit)\r\n    if(isEdit && param.id) {\r\n      axios\r\n      .post(\r\n        \"/api/tc/get-customer\",\r\n        {\r\n          id: param.id,\r\n        },\r\n        {\r\n          headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${tok}`\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        let res = response.data.data;\r\n        if(res.other_details) {\r\n          let other_details = JSON.parse(res.other_details);\r\n          res = {...res, ...other_details}\r\n        }\r\n        console.log(res)\r\n        let data_creater = localStorage.getItem('name');\r\n\r\n          form.setFieldsValue({\r\n            customerId: res.id,\r\n            email: res.email,\r\n            name: res.name,\r\n            phone: res.phone,\r\n            status: res.status,\r\n            profile_pic: res?.profile_pic,\r\n            contact_name: res?.contact_name,\r\n            office_contact_number: res?.office_contact_number,\r\n            uen_number: res?.uen_number,\r\n            postal_code: res?.postal_code,\r\n            block_number: res?.block_number,\r\n            level_number: res?.level_number,\r\n            unit_number: res?.unit_number,\r\n            street_number: res?.street_number,\r\n            country: res?.country,\r\n            created_by: res?.created_by || data_creater,\r\n          })\r\n          if(res.profile_pic) setFileList([{url:res.profile_pic}])\r\n          setStatusActive(res.status);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    }\r\n  }, [props.id]);\r\n\r\n  return (\r\n    <>\r\n      <PageHeading\r\n        title={!isEdit ? \"Add New Customer\" : \"Edit Customer\"}\r\n      />\r\n\r\n      <div>\r\n        <div>\r\n            <Form\r\n                form={form}\r\n                labelCol={{\r\n                span: 10,\r\n                }}\r\n                wrapperCol={{\r\n                span: 18,\r\n                }}\r\n                layout=\"vertical\"\r\n                onFinish={finishHandler}\r\n            >\r\n                <Card className=\"mt-2\">\r\n                  <div className=\"d-flex justify-content-end\" style={{color: 'red'}}>\r\n                      <div>* Indicates Mandatory Fields</div>\r\n                  </div>\r\n\r\n                  <div className=\"d-flex justify-content-between heading-container my-3\">\r\n                      <div className=\"heading\">Customer Details</div>\r\n                      {/* <div>0 out of 15 fields completed</div> */}\r\n                  </div>\r\n\r\n                  <Row align=\"bottom\">\r\n                      <Col span={12}>\r\n                      <Form.Item name=\"profile_pic\">\r\n                          <Upload\r\n                          listType=\"picture-card\"\r\n                          fileList={fileList}\r\n                          accept=\"image/*\"\r\n                          // onPreview={handlePreview}\r\n                          onChange={handleChange}\r\n                          beforeUpload={() => {\r\n                              return false;\r\n                          }}\r\n                          >\r\n                          {fileList.length >= 1 ? null : uploadButton}\r\n                          </Upload>\r\n                      </Form.Item>\r\n                      </Col>\r\n                  </Row>\r\n                  \r\n                  <Row align=\"top\">\r\n                      <Col span={12}>\r\n                      {isEdit && <Form.Item name=\"customerId\" label=\"Customer ID\" >\r\n                          <Input disabled />\r\n                      </Form.Item>}\r\n                      <Form.Item name=\"contact_name\" label=\"Contact Person Name\" >\r\n                          <Input />\r\n                      </Form.Item>\r\n                      <Form.Item name=\"office_contact_number\" label=\"Office Contact Number\">\r\n                          <Input />\r\n                      </Form.Item>\r\n                      <Form.Item name=\"uen_number\" label=\"UEN Number\" rules={[{ required: true, message: 'Please input Company Name!' }]}>\r\n                          <Input />\r\n                      </Form.Item>\r\n                      </Col>\r\n                      <Col span={12}>\r\n                      <Form.Item name=\"name\" label=\"Company Name\" rules={[{ required: true, message: 'Please input Company Name!' }]}>\r\n                          <Input />\r\n                      </Form.Item>\r\n                      <Form.Item name=\"phone\" label=\"Phone Number\" rules={[{ required: true, message: 'Please input your valid Phone Number!' },\r\n                      {\r\n                          message: 'Phone number must have atleast 8 digits',\r\n                          validator: (_, value) => {\r\n                          if (/^\\d{8,}$/.test(value)) {\r\n                              return Promise.resolve();\r\n                          } else {\r\n                              return Promise.reject('Some message here');\r\n                          }\r\n                          }\r\n                      }]}>\r\n                          <Input style={{ width: \"100%\" }} minLength={8} />\r\n                      </Form.Item>\r\n                      <Form.Item name=\"email\" label=\"Email Id\" rules={[{ required: true, type: 'email', message: 'Please input your valid Email Id!' }]}>\r\n                          <Input />\r\n                      </Form.Item>\r\n                      </Col>\r\n                  </Row>\r\n\r\n                  <div className=\"d-flex justify-content-start heading-container\">\r\n                      <div className=\"heading\">Other Details</div>\r\n                  </div>\r\n\r\n                  <div className=\"heading mt-3 mb-2\">\r\n                      Company Address\r\n                  </div>\r\n\r\n                  <div>\r\n                      <Row align=\"top\">\r\n                      <Col span={12}>\r\n                          <Form.Item name=\"country\" label=\"Country\" rules={[{ required: true, message: 'Please input Country!' }]} >\r\n                              <Select showSearch>\r\n                                {country.map((elem, index) => {\r\n                                  return (\r\n                                    <Select.Option key={index} value={elem}>\r\n                                      {elem}\r\n                                    </Select.Option>\r\n                                  );\r\n                                })}\r\n                              </Select>\r\n                          </Form.Item>\r\n                          \r\n                          <Form.Item name=\"street_number\" label=\"Street Name\" rules={[{ required: true, message: 'Please input Street Number!' }]} >\r\n                              <Input />\r\n                          </Form.Item>\r\n                          <Form.Item name=\"level_number\" label=\"Level - Unit No\" rules={[{ required: true, message: 'Please input Level Number!' }]} >\r\n                              <Input />\r\n                          </Form.Item>\r\n                      </Col>\r\n                      <Col span={12}>\r\n                          <Form.Item name=\"postal_code\" label=\"Postal Code\" rules={[{ required: true, message: 'Please input Postal code!' }]}>\r\n                              <Input />\r\n                              {/* <Select\r\n                                placeholder=\"postal code\"\r\n                                showSearch\r\n                                value={value}\r\n                                onSearch={setValue}\r\n                                onChange={setValue}\r\n                                onSelect={selectAddress(value)}\r\n                              > {options.map((val, id) => (\r\n                                  <Select.Option title={val.POSTAL} key={id} value={val?.POSTAL}>{val.ADDRESS}</Select.Option>\r\n                                ))} \r\n                              </Select> */}\r\n                          </Form.Item>\r\n                          <Form.Item name=\"block_number\" label=\"Block No\" rules={[{ required: true, message: 'Please input Block Number!' }]} >\r\n                              <Input />\r\n                          </Form.Item>\r\n                          {/* <Form.Item name=\"unit_number\" label=\"Unit No\" rules={[{ required: true, message: 'Please input Unit Number!' }]} >\r\n                              <Input />\r\n                          </Form.Item> */}\r\n                      </Col>\r\n                      </Row>\r\n                  </div>\r\n\r\n                  <div className=\"heading mb-3\">\r\n                      Upload Files\r\n                  </div>\r\n\r\n                  <Dragger {...dragger_props}>\r\n                    <p className=\"ant-upload-drag-icon\">\r\n                      <InboxOutlined />\r\n                    </p>\r\n                    <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\r\n                    <p className=\"ant-upload-hint\">\r\n                    Files supported: pdf,doc,etc.\r\n                    </p>\r\n                  </Dragger>\r\n\r\n                </Card>\r\n                \r\n\r\n                <Form.Item className={`d-flex align-items-end Button`}>\r\n                  <Button onClick={history.goBack}>Cancel</Button>\r\n                  <Button\r\n                      onClick={() => {\r\n                        form.resetFields();\r\n                        setFileList([]);\r\n                        setFileUploadedList([]);\r\n                      }}\r\n                      className=\"mx-3\"\r\n                  >\r\n                      Clear All\r\n                  </Button>\r\n\r\n                  <Button type=\"primary\" htmlType=\"submit\">\r\n                      Save\r\n                  </Button>\r\n                </Form.Item>\r\n            </Form>\r\n            <Modal\r\n                visible={previewOpen}\r\n                title={previewTitle}\r\n                footer={null}\r\n                onCancel={handleCancel}     \r\n            >\r\n                <img\r\n                className=\"myimg\"\r\n                alt=\"example\"\r\n                style={{\r\n                    width: \"100%\",\r\n                }}\r\n                src={previewImage}\r\n                />\r\n            </Modal>\r\n        </div>\r\n        \r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddUpdateCustomer;\r\n","import React from 'react'\r\nimport { APP_PREFIX_PATH, AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\nimport { Redirect, Route, useRouteMatch } from 'react-router-dom'\r\nimport CustomerAccounts from './CustomerAccounts/CustomerAccounts'\r\nimport JobSites from './JobSites/JobSites'\r\n// import AddNewCustomer from './AddNewCustomer'\r\nimport AddNewUser from './AddNewUser'\r\nimport CustomerDetails from './CustomerAccounts/CustomerDetails'\r\nimport AddNewPayments from './CustomerAccounts/AddNewPayments'\r\nimport AddNewInvoice from './CustomerAccounts/AddNewInvoice'\r\nimport EditInvoice from './CustomerAccounts/EditInvoice'\r\nimport Invoice from './CustomerAccounts/Invoice'\r\nimport { useLocation } from 'react-router-dom'\r\nimport CustomerUsersAll from './CustomerUsersAll/CustomerUsersAll'\r\nimport ViewCustomer from './ViewCustomer'\r\nimport AddUpdateCustomer from './AddUpdateCustomer'\r\n\r\n\r\nfunction CustomerManagement() {\r\n\r\n    const match = useRouteMatch();\r\n    return (\r\n        <div>\r\n            <Route path={`${APP_PREFIX_PATH}/customer-management`} exact>\r\n                <Redirect to={`${match.path}/customer-accounts`} />\r\n            </Route>\r\n            {/* <Route path={`${match.path}/customer-accounts/:user_id`} exact>\r\n                <DailyAttendanceProfile />\r\n            </Route> */}\r\n            <Route path={`${match.path}/customer-accounts`} exact>\r\n                <CustomerAccounts />\r\n            </Route>\r\n            <Route path={`${match.path}/customer-accounts/customer-details/:id`} exact>\r\n                <CustomerDetails/>\r\n            </Route>\r\n            <Route path={`${match.path}/customer-accounts/customer-details/:id/invoice`} exact>\r\n                <Invoice/>\r\n            </Route>\r\n            <Route path={`${match.path}/customer-accounts/add-new-payments`} exact>\r\n                <AddNewPayments/>\r\n            </Route>\r\n            <Route path={`${match.path}/customer-accounts/add-new-invoice/:id`} exact>\r\n                <AddNewInvoice/>\r\n            </Route>\r\n            <Route path={`${match.path}/customer-accounts/edit-invoice/:id`} exact>\r\n                <EditInvoice/>\r\n            </Route>\r\n            {/* <Route path={`${match.path}/customer-accounts/add-new`} exact>\r\n                <AddNewCustomer   />\r\n            </Route> */}\r\n            <Route path={`${match.path}/customer-accounts/add-new`} exact>\r\n                <AddUpdateCustomer   />\r\n            </Route>\r\n            <Route path={`${match.path}/customer-accounts/edit/:id`} exact>\r\n                <AddUpdateCustomer />\r\n            </Route>\r\n            <Route path={`${match.path}/customer-accounts/view/:id`} exact>\r\n                <ViewCustomer />\r\n            </Route>\r\n            {/* <Route path={`${match.path}/customer-accounts/add-new-customer-user/:customer_id`} exact> */}\r\n            <Route path={`${match.path}/customer-accounts/add-new-associate-customer/:customer_id`} exact>\r\n                <AddNewUser />\r\n            </Route>\r\n            {/* <Route path={`${match.path}/customer-accounts/edit-customer-user/:id`} exact> */}\r\n            <Route path={`${match.path}/customer-accounts/edit-associate-customer/:id`} exact>\r\n                <AddNewUser />\r\n            </Route>\r\n            <Route path={`${match.path}/job-sites`} exact>\r\n                <JobSites  />\r\n            </Route>\r\n            <Route path={`${match.path}/customer-users-all`} exact>\r\n                <CustomerUsersAll  />\r\n            </Route>\r\n            {/* <Route path={`${match.path}/job-sites/add-shift`} exact>\r\n                <AddNewShift />\r\n            </Route> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomerManagement"],"names":["_ref","searchText","custId","_useState","useState","_useState2","_slicedToArray","invoiceData","setInvoiceData","_useState3","_useState4","openDeleteModal","setOpenDeleteModal","tok","localStorage","getItem","columns","title","dataIndex","render","_","record","_jsx","children","amount_paid","moment","created_at","format","status","style","color","backgroundColor","padding","borderRadius","fontWeight","fontSize","_Fragment","EllipsisDropdown","menu","_jsxs","Menu","Link","to","concat","id","className","Icon","component","InvoiceIcon","EditIcon","onClick","ShowDeleteModal","DeleteIcon","Modal","visible","centered","footer","Button","handleCancel","type","handleOk","deleteInvoice","console","log","axios","method","url","data","headers","Authorization","then","response","filter","elem","err","useEffect","customer_id","success","map","ind","_objectSpread","index","search","Table","dataSource","paymentsData","setPaymentsData","TextArea","Input","customerData","onDelete","getCustomers","openStatusModal","setOpenStatusModal","_useState5","_useState6","setStatus","_useState7","_useState8","remark","setRemark","VisibilityIcon","AccountStatus","res","catch","error","maskClosable","onCancel","name","company","message","Radio","size","onChange","e","target","value","defaultValue","rows","statuses","customerAccountData","setCustomerAccountData","customerDeletedData","setCustomeDeletedData","page","setPage","cpage","setCpage","sorter","a","b","localeCompare","Action","deleteHandler","_useState9","_useState10","showDeletedSuccess","setShowDeletedSuccess","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","deletedData","wrap","_context","prev","next","item","find","setTimeout","stop","_x","apply","arguments","page_index","page_size","fdata","other_details","JSON","parse","srNo","key","phoneNumber","phone","emailId","email","created_by","scroll","x","pageSize","pagination","current","SuccessSubmit","icon","Successfully","desc","allCustomerAccountData","setAllCustomerAccountData","setSearchText","statusFilter","sr_no","PageHeading","SearchBox","CSVLink","label","filename","src","exportIcon","alt","plusIcon","CustomerTable","setShowModal","viewDetails","form","JobSites","shiftLocations","onEdit","getJobSites","idFromProp","history","useHistory","tc_customer_id","push","jobsiteObj","address","location","location_address","setFieldsValue","shift_name","location_name","props","setAllJobSiteData","width","ActionForJobSiteOnly","editHandler","jobSite","jobSiteAddress","unit_number","street_number","block_number","postal_code","country","customer_name","noOfUsers","total_customer_users","img","image","staffAssign","tasks","revenue","outstandingAmt","total_tasks","total_staffs","action","outstanding","setEditjobfield","companyList","setCompanyList","companyFilter","setCompanyFilter","allJobsitesData","setAllJobsitesData","jobsite","Select","placeholder","JobSiteTable","_Form$useForm","Form","previewOpen","setPreviewOpen","previewImage","previewTitle","fileList","setFileList","selectedAssociateType","setSelectedAssociateType","param","useParams","_useState11","_useState12","documentUrl","setDocumentUrl","_useState13","_useState14","setCustomerData","_useState15","_useState16","statusActive","setStatusActive","_useState17","_useState18","isEdit","setIsEdit","uploadButton","PlusOutlined","marginTop","_useState19","_useState20","showAddedSuccess","setShowAddedSuccess","getCustomerData","customerName","EmailId","userName","PhoneNumber","residency","residnecy_status","nrixfin","nric_fin","nationality","dob","gender","job_sites","profile_pic","associate_type","uen_number","office_contact_number","getFieldValue","labelCol","span","wrapperCol","layout","onFinish","String","goBack","msg","Card","Row","align","Col","Upload","listType","accept","newFileList","formData","FormData","length","append","originFileObj","maxCount","beforeUpload","showUploadList","showPreviewIcon","open","showSearch","optionFilterProp","filterOption","input","option","_toString$toLowerCase","_option$title","toString","toLowerCase","includes","filterSort","optionA","optionB","_optionA$label","_optionB$label","rules","required","validator","test","Number","Promise","resolve","reject","minLength","alignContent","Switch","checked","resetFields","htmlType","userData","setUserData","useRouteMatch","userId","associate_id","getAllAssociateCustomers","BoyIcon","GirlIcon","IN","SG","CN","mobileNumber","uen_neumber","block","PlusIconBlue","Title","level","Typography","background","textAlign","contact_name","uploaded_file","window","autoComplete","jobSiteData","setjobSiteData","currPage","_toConsumableArray","rowKey","row","overflow","setLocationData","query","setQuery","autoCompleteRef","useRef","handlePlaceSelect","updateQuery","_addressObject$geomet","_addressObject$geomet2","_addressObject$geomet3","_addressObject$geomet4","addressObject","latLng","getPlace","sent","formatted_address","latitude","geometry","lat","longitude","lng","callback","script","document","createElement","readyState","onreadystatechange","onload","getElementsByTagName","appendChild","loadScript","google","maps","places","Autocomplete","componentRestrictions","addListener","handleScriptLoad","ref","border","event","editjobfield","showModal","setJobSites","setShiftLocations","locationData","useLocation","URLSearchParams","get","_usePlacesWidget","usePlacesWidget","apiKey","onPlaceSelected","place","googleMapsScriptBaseUrl","saveShiftLocation","autocompleteRef","radius","loc_id","hrms_location_id","contact_number","level_number","getAllJobSites","newJobSite","updateShiftLocation","updateJobSite","shift","result","shift_locations","user_groups","location_id","LocationSearch","disabled","tabs","BasicDetailsIcon","activeIcon","BasicDetailsActiveIcon","AddressDetailsIcon","AddressDetailsActiveIcon","UserManagementIcon","UserManagementActiveIcon","InvoiceActiveIcon","PaymentsIcon","PaymentsActiveIcon","setHeaders","currActiveKey","setCurrActiveKey","setExportData","isExporting","setIsExporting","setJobsitesData","setAssociatesData","setInvoicesData","content","CustomerBasicDetails","CustomerUsers","InvoiceTable","Payments","extraBottons","Tabs","activeKey","tabBarExtraContent","tab","exportData","gutter","CustomerDetailRight","multiple","info","file","DatePicker","dayjs","Dragger","InboxOutlined","RangePicker","setData","customers","setCustomers","jobs","setJobs","sub_totalInp","setsub_totalInp","FileList","imageConverterToUrl","abrupt","t0","finishHandler","_callee2","tax","total","startDate","endDate","isoDate","isoDueDate","_context2","taskPeriod","date","dueDate","quantity","price","task_period_from_date","task_period_to_date","due_date","sub_total","discount","tc_invoice_file","invoice_remarks","remarks","line_items","_x2","getBase64","reader","FileReader","readAsDataURL","onerror","handlePreview","_ref4","_callee3","_context3","preview","write","_x3","reduce","accumulator","newData","findIndex","splice","customer","toInteger","Date","add","minHeight","minWidth","maxHeight","marginBottom","onPreview","_ref3","Column","_useForm","useForm","invoiceget","setInvoiceget","dateFormatList","handleSave","useCallback","prevData","calculatesubtotal","listNew","text","InputNumber","href","handleDelete","invdata","setInvdata","React","svg","ItemsAndServicesPageIcon","classes","logo","maxWidth","Divider","List","divName","printContents","getElementById","innerHTML","originalContents","body","print","printDiv","setCurrent","Avatar","_step","str","_iterator","_createForOfIteratorHelper","s","n","done","f","getUsers","cust_name","cust_pic","customer_pic","getPdf","export_type","_downloadPDF","pdfUrl","menuFilter","selectedKeys","Dropdown","overlay","trigger","filterIcon","setPreviewImage","setPreviewTitle","substring","lastIndexOf","customerId","onNext","setCId","tog","setTog","cus_tc_id","setCus_tc_id","addmore","getFieldsValue","passId","cId","_useState21","_useState22","_useState23","_useState24","setOptions","pin_code","results","POSTAL","toUpperCase","onSelect","bold","onPre","nextHandler","preHandler","BasicDetails","JobSiteDetails","hideBasicDetail","setHideBasicDetail","fileUploadedList","setFileUploadedList","profilePictureUrl","setProfilePictureUrl","dragger_props","onDrop","dataTransfer","files","_res","_res2","_res3","_res4","_res5","_res6","_res7","_res8","_res9","_res10","_res11","data_creater","stringify","match","Route","path","APP_PREFIX_PATH","exact","Redirect","CustomerAccounts","CustomerDetails","Invoice","AddNewPayments","AddNewInvoice","EditInvoice","AddUpdateCustomer","ViewCustomer","AddNewUser","CustomerUsersAll"],"sourceRoot":""}