{"version":3,"file":"static/js/69.351a19d4.chunk.js","mappings":"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","sources":["views/app-views/InquiryManagement/ActionsIcons.js","views/app-views/InquiryManagement/Export-Dropdown.js","views/app-views/InquiryManagement/Export-InquiryManagement.js","views/app-views/InquiryManagement/Actions.js","views/app-views/InquiryManagement/InquiryListTable.js","views/app-views/InquiryManagement/InquiryList.js","views/app-views/InquiryManagement/AllInbox.js","../node_modules/@ant-design/icons-svg/es/asn/SendOutlined.js","../node_modules/@ant-design/icons/es/icons/SendOutlined.js","views/app-views/InquiryManagement/ChatingSection.js","views/app-views/InquiryManagement/InquiryChats.js","views/app-views/InquiryManagement/Inquiries.js","views/app-views/InquiryManagement/AddNewInquiry/index.js","views/app-views/InquiryManagement/InquiryManagement.js"],"sourcesContent":["export const CrossIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<g clip-path=\"url(#clip0_215_9541)\">\r\n<path d=\"M18.2995 5.70948C17.9095 5.31948 17.2795 5.31948 16.8895 5.70948L11.9995 10.5895L7.10948 5.69948C6.71948 5.30948 6.08948 5.30948 5.69948 5.69948C5.30948 6.08948 5.30948 6.71948 5.69948 7.10948L10.5895 11.9995L5.69948 16.8895C5.30948 17.2795 5.30948 17.9095 5.69948 18.2995C6.08948 18.6895 6.71948 18.6895 7.10948 18.2995L11.9995 13.4095L16.8895 18.2995C17.2795 18.6895 17.9095 18.6895 18.2995 18.2995C18.6895 17.9095 18.6895 17.2795 18.2995 16.8895L13.4095 11.9995L18.2995 7.10948C18.6795 6.72948 18.6795 6.08948 18.2995 5.70948Z\" fill=\"#455560\"/>\r\n</g>\r\n<defs>\r\n<clipPath id=\"clip0_215_9541\">\r\n<rect width=\"24\" height=\"24\" fill=\"white\"/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n\r\n)\r\n\r\nexport const ChangeAssigneeIcon = () => (\r\n  <svg width=\"20\" height=\"18\" viewBox=\"0 0 20 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<path d=\"M8 8C10.21 8 12 6.21 12 4C12 1.79 10.21 0 8 0C5.79 0 4 1.79 4 4C4 6.21 5.79 8 8 8ZM8 2C9.1 2 10 2.9 10 4C10 5.1 9.1 6 8 6C6.9 6 6 5.1 6 4C6 2.9 6.9 2 8 2Z\" fill=\"#455560\"/>\r\n<path d=\"M2 14C2.22 13.28 5.31 12 8 12C8 11.3 8.13 10.63 8.35 10.01C5.62 9.91002 0 11.27 0 14V16H9.54C9.02 15.42 8.61 14.75 8.35 14H2Z\" fill=\"#455560\"/>\r\n<path d=\"M17.43 14.02C17.79 13.43 18 12.74 18 12C18 9.79 16.21 8 14 8C11.79 8 10 9.79 10 12C10 14.21 11.79 16 14 16C14.74 16 15.43 15.78 16.02 15.43C16.95 16.36 17.64 17.05 18.59 18L20 16.59C18.5 15.09 19.21 15.79 17.43 14.02ZM14 14C12.9 14 12 13.1 12 12C12 10.9 12.9 10 14 10C15.1 10 16 10.9 16 12C16 13.1 15.1 14 14 14Z\" fill=\"#455560\"/>\r\n</svg>\r\n\r\n)\r\n\r\nexport const ReportEnquiryIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<g clip-path=\"url(#clip0_215_9556)\">\r\n<path d=\"M12.36 6L12.76 8H18V14H14.64L14.24 12H7V6H12.36ZM14 4H5V21H7V14H12.6L13 16H20V6H14.4L14 4Z\" fill=\"#455560\"/>\r\n</g>\r\n<defs>\r\n<clipPath id=\"clip0_215_9556\">\r\n<rect width=\"24\" height=\"24\" fill=\"white\"/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n\r\n)\r\nexport const CreateQuotationIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n  <g clip-path=\"url(#clip0_886_13832)\">\r\n  <path d=\"M14 2H6C4.9 2 4 2.9 4 4V20C4 21.1 4.9 22 6 22H18C19.1 22 20 21.1 20 20V8L14 2ZM6 20V4H13V8H18V20H6ZM11 19H13V18H14C14.55 18 15 17.55 15 17V14C15 13.45 14.55 13 14 13H11V12H15V10H13V9H11V10H10C9.45 10 9 10.45 9 11V14C9 14.55 9.45 15 10 15H13V16H9V18H11V19Z\" fill=\"#475569\"/>\r\n  </g>\r\n  <defs>\r\n  <clipPath id=\"clip0_886_13832\">\r\n  <rect width=\"24\" height=\"24\" fill=\"white\"/>\r\n  </clipPath>\r\n  </defs>\r\n  </svg>\r\n)\r\nexport const InquiryStatusIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n  <g clip-path=\"url(#clip0_886_13838)\">\r\n  <path d=\"M11 12C13.21 12 15 10.21 15 8C15 5.79 13.21 4 11 4C8.79 4 7 5.79 7 8C7 10.21 8.79 12 11 12ZM11 6C12.1 6 13 6.9 13 8C13 9.1 12.1 10 11 10C9.9 10 9 9.1 9 8C9 6.9 9.9 6 11 6ZM5 18C5.2 17.37 7.57 16.32 9.96 16.06L12 14.06C11.61 14.02 11.32 14 11 14C8.33 14 3 15.34 3 18V20H12L10 18H5ZM20.6 12.5L15.47 17.67L13.4 15.59L12 17L15.47 20.5L22 13.91L20.6 12.5Z\" fill=\"#475569\"/>\r\n  </g>\r\n  <defs>\r\n  <clipPath id=\"clip0_886_13838\">\r\n  <rect width=\"24\" height=\"24\" fill=\"white\"/>\r\n  </clipPath>\r\n  </defs>\r\n  </svg>\r\n)","import CustomDropdown from 'components/shared-components/CustomDropdown/CustomDropdown'\r\nimport React from 'react'\r\nimport { Menu } from 'antd';\r\n\r\nconst menu = (\r\n  <Menu\r\n    items={[\r\n      {\r\n        label: <p>1st menu</p>,\r\n        key: '0',\r\n      },\r\n      {\r\n        label: <a href=\"https://www.aliyun.com\">2nd menu item</a>,\r\n        key: '1',\r\n      },\r\n      {\r\n        type: 'divider',\r\n      },\r\n      {\r\n        label: '3rd menu item',\r\n        key: '3',\r\n      },\r\n    ]}\r\n  />\r\n);\r\n\r\nconst ExportDropdown = () => {\r\n  return (\r\n    <CustomDropdown text=\"Select\" menu={menu}/>\r\n  )\r\n}\r\n\r\nexport default ExportDropdown;","import React from 'react'\r\nimport { Button, Typography } from 'antd';\r\nimport ExportDropdown from './Export-Dropdown';\r\n\r\nimport exportIcon from 'assets/svg/file-export.svg'\r\n\r\nconst {Title} = Typography;\r\n\r\nconst Export = (props) => {\r\n  const {onClose} = props;\r\n  return (\r\n    <div className='text-center p-3'>\r\n      <div className='text-right'>\r\n        <Button onClick={onClose}>close</Button>\r\n      </div>\r\n      <div className='mb-4'>\r\n        <img src={exportIcon} alt=\"ExportIcon\"></img>\r\n        <Title>Export/Download Data</Title>\r\n      </div>\r\n      <div className='text-left mb-4'>\r\n        <p>Select Department</p>\r\n        <ExportDropdown/>\r\n      </div>\r\n      <div>\r\n        <Button className='m-1 mr-3' type=\"primary\">Yes, Confirm</Button>\r\n        <Button className='m-1' onClick={onClose}>No, Cancel</Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Export;","import React, { useState } from \"react\";\r\n// import EllipsisDropdown from 'components/shared-components/EllipsisDropdown'\r\nimport EllipsisDropdown from \"components/shared-components/EllipsisDropdown/index\";\r\nimport Modal from \"components/UI/Modal\";\r\n\r\nimport { Menu, Typography, Button } from \"antd\";\r\nimport Icon from \"@ant-design/icons\";\r\n\r\nimport {\r\n  CrossIcon,\r\n  ChangeAssigneeIcon,\r\n  ReportEnquiryIcon,\r\n  CreateQuotationIcon,\r\n  InquiryStatusIcon\r\n} from \"./ActionsIcons\";\r\n\r\nimport { InquiryIcon } from \"./svgIcons\";\r\nimport { useHistory, useParams, useRouteMatch } from \"react-router-dom\";\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nconst Actions = ({setInquiryData,openStatusModal,inquiry_id}) => {\r\n  const history = useHistory();\r\n  const match = useRouteMatch();\r\n\r\n  const InquiryStatusHandler = () => {\r\n    openStatusModal((prev) => !prev);\r\n  };\r\n\r\n  const CreateQuotationHandler = () => {\r\n    history.push(`/app/contract-management/quotations/add-new-quotation/${inquiry_id}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <EllipsisDropdown\r\n        menu={\r\n          <Menu>\r\n            {/* <Menu.Item onClick={CreateQuotationHandler}>\r\n              <span className=\"d-flex align-items-center\">\r\n                <Icon className=\"mr-2\" component={CreateQuotationIcon}  />\r\n                Create Quotation\r\n              </span>\r\n            </Menu.Item> */}\r\n            <Menu.Item  onClick={InquiryStatusHandler}>\r\n              <span className=\"d-flex align-items-center\">\r\n                <Icon className=\"mr-2\" component={InquiryStatusIcon}  />\r\n                Inquiry Status\r\n              </span>\r\n            </Menu.Item>\r\n          </Menu>\r\n        }\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Actions;\r\n","import React , {useState, useEffect} from 'react'\r\n\r\nimport {Input, Table , Button, Tag, Modal, Radio, message} from 'antd';\r\nimport Icon from '@ant-design/icons'\r\nimport { WhatsappIcon } from 'assets/svg/icon';\r\nimport Actions from './Actions';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\n\r\nconst { TextArea } = Input;\r\n\r\n\r\n// const data = [\r\n//   {\r\n//     key: 1,\r\n//     inquiryId: \"GE-123456\",\r\n//     userName: \"John Smith\",\r\n//     phoneNumber: \"+65 123456789\",\r\n//     emailId: \"johnsmith@gmail.com\",\r\n//     dateOfInquiry: \"20/08/22\",\r\n//     assignedTo: \"Wade Warren\",\r\n//     inquiryChanel: WhatsappIcon,\r\n//     status: \"closed\",\r\n//   }\r\n// ];\r\n\r\nconst InquiryListTable = ({allInquiries, setAllInquiries, setPage, searchText, selectedFilter, selectedInquiryModeFilter, selectedStatusFilter }) => {\r\n  // const [selectedRowKeys , setSelectedRowKeys] = useState([]);\r\n  const [inquiryData, setInquiryData] = useState({});\r\n  const [openStatusModal, setOpenStatusModal] = useState(false);\r\n  const [status, setStatus] = useState(\"Open\");\r\n  const [remark, setRemark] = useState(false);\r\n  const columns = [\r\n    {\r\n      title: 'Inquiry Id',\r\n      dataIndex: 'id',\r\n    },\r\n    {\r\n      title: 'Customer Name',\r\n      dataIndex: 'customer_name',\r\n      // defaultSortOrder: 'descend',\r\n      // sorter: (a, b) => a.customer_name - b.customer_name,\r\n    },\r\n    {\r\n      title: 'Email Id',\r\n      dataIndex: 'email',\r\n      // defaultSortOrder: 'descend',\r\n      // sorter: (a, b) => a.emailId - b.emailId,\r\n      \r\n    },\r\n    {\r\n      title: 'Mobile Number',\r\n      dataIndex: 'mobile',\r\n      // defaultSortOrder: 'descend',\r\n      // sorter: (a, b) => a.phoneNuber - b.phoneNuber,\r\n    },\r\n    {\r\n      title: 'Inquiry Date',\r\n      dataIndex: 'dateOfInquiry',\r\n      // defaultSortOrder: 'descend',\r\n      // sorter: (a, b) => a.dateOfInquiry - b.dateOfInquiry,\r\n    },\r\n    // {\r\n    //   title: 'Inquiry Chanel',\r\n    //   dataIndex: 'inquiryChanel',\r\n    //   render: (icon) => {\r\n    //     return(\r\n    //     <span className='d-flex justify-content-center'>\r\n    //       <Icon component={icon}/>\r\n    //       </span>\r\n    //       )\r\n    //   }\r\n    // },\r\n    {\r\n      title: 'Status',\r\n      dataIndex: 'status',\r\n      render: (status) => {\r\n        return(\r\n          <span>\r\n            <Tag color=\"green\" key={status}>\r\n              {status}\r\n            </Tag>\r\n          </span>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      title:\"Action\",\r\n      dataIndex: \"action\",\r\n      render: (_,record) => {\r\n        return (\r\n          <Actions setInquiryData={setInquiryData} inquiryData={record} openStatusModal={openStatusModal} inquiry_id={record.id}/>\r\n        )\r\n      }\r\n    }\r\n      \r\n      \r\n  ];\r\n\r\n  const handleStatusOk = () => {\r\n    console.log(inquiryData);\r\n    axios\r\n    .post(\r\n      \"/api/tc/update-inquiry\",\r\n      {\r\n        ...inquiryData,\r\n        id: inquiryData.id,\r\n        tc_customer_id: inquiryData.customer_id,\r\n        status: status\r\n      },\r\n    )\r\n    .then((response) => {\r\n      let res = response.data;\r\n      console.log(res);\r\n      setOpenStatusModal(false);\r\n      getData();\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n      \r\n  };\r\n  const handleStatusCancel = () => {\r\n      setStatus(\"\")\r\n      setRemark(\"\")\r\n      setOpenStatusModal(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [searchText]);\r\n\r\n  useEffect(() => {\r\n    getData()\r\n  }, [selectedFilter]);\r\n\r\n\r\n  const getData = () => {\r\n    axios\r\n      .post(\r\n        \"/api/tc/get-inquiries\",\r\n        {\r\n          page_index: 1,\r\n          page_size: 10,\r\n          statuses: null,\r\n          search: searchText ? searchText : null,\r\n          inquiry_mode: selectedInquiryModeFilter || null,\r\n          status: selectedStatusFilter || null,\r\n        },\r\n      )\r\n      .then((response) => {\r\n        let res = response.data.data.data;\r\n        // console.log(res);\r\n\r\n        let fdata = res.map((elem, ind) => {\r\n          return {\r\n            ...elem,\r\n            sr_no: ind+1,\r\n            key: elem.id,\r\n            id: elem.id,\r\n            customer_name: elem.customer_name || elem.tc_customer_id,\r\n            email: elem.email || '-',\r\n            mobile: elem.mobile || '-',\r\n            dateOfInquiry: moment(elem.created_at).format(\"DD-MM-YYYY\"),\r\n            status: elem.status,\r\n          };\r\n        });\r\n        setAllInquiries(fdata);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  \r\n  return (\r\n    <div className='mt-3'>\r\n      {/* <Table rowSelection={rowSelection} columns={columns} dataSource={data} className=\"w-100\"/> */}\r\n      <Table columns={columns} dataSource={allInquiries} className=\"w-100\"/>\r\n\r\n      <Modal\r\n        visible={openStatusModal}\r\n        centered\r\n        maskClosable\r\n        onCancel={() => {setOpenStatusModal(false);}}\r\n        title={'Inquiry Status'}\r\n        footer={[\r\n            <Button key={'submit'} style={{ color: '#F5F5F5' }} type=\"primary\" className='font-weight-bold' onClick={handleStatusOk}>Save</Button>,\r\n            <Button key={'cancel'} style={{ color: '#000B23' }} onClick={handleStatusCancel} className='font-weight-bold'>Cancel</Button>,\r\n        ]}\r\n        >   \r\n        <div>\r\n            <Radio.Group\r\n                size=\"small\" \r\n                onChange={(e) => setStatus(e.target.value)}\r\n                defaultValue={\"Open\"}\r\n            >\r\n                <Radio value=\"Open\" defaultChecked> Open </Radio>\r\n                <Radio value=\"Close\"> Close</Radio>\r\n            </Radio.Group>\r\n        </div>\r\n\r\n        <div>\r\n            <h4 className=\"mb-2 mt-4\">Remarks</h4>\r\n            <TextArea rows={4} onChange={(e) => setRemark(e.target.value)} value={remark} />\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InquiryListTable","import React , {useState, useEffect} from \"react\";\r\n\r\nimport { Button, Drawer, Select } from \"antd\";\r\nimport Icon from \"@ant-design/icons\"\r\n\r\nimport SearchBox from \"components/shared-components/SearchBox\";\r\nimport Filter from \"components/shared-components/Filter\";\r\nimport PageHeading from \"components/shared-components/PageHeading/PageHeading\";\r\nimport Export from \"./Export-InquiryManagement\";\r\nimport Modal from \"components/UI/Modal\";\r\nimport InquiryListTable from \"./InquiryListTable\";\r\nimport { Link , useRouteMatch  } from \"react-router-dom\";\r\nimport { PlusIcon } from \"assets/svg/icon\";\r\nimport { InquiryManagementPageIcon , FilterIcon , ExportIcon} from \"assets/svg/icon\";\r\nimport axios from \"axios\";\r\nimport exportIcon from \"assets/svg/exportIcon.svg\";\r\nimport { CSVLink } from \"react-csv\";\r\nimport moment from \"moment\";\r\n\r\nconst InquiryList = () => {\r\n\r\n  const [showExportOption, setShowExportOption] = useState(false);\r\n  const [searchText, setSearchText] = useState('');\r\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n  const [selectedCustomerFilter , setSelectedCustomerFilter] = useState(false);\r\n  const [selectedInquiryModeFilter , setSelectedInquiryModeFilter] = useState(false);\r\n  const [selectedStatusFilter , setSelectedStatusFilter] = useState(false);\r\n  const [selectedFilter , setSelectedFilter] = useState(false);\r\n  const [allJobsites , setAllJobsites] = useState(false);\r\n  const [allCustomers , setAllCustomers] = useState(false);\r\n  const customer_id = localStorage.getItem(\"customer_id\");\r\n\r\n  const [allInquiries , setAllInquiries] = useState([]);\r\n  const headers = [\r\n    { label: \"Sr. No\", key: \"sr_no\" },\r\n    { label: \"Inquiry ID\", key: \"id\" },\r\n    { label: \"Customer Name\", key: \"customer_name\" },\r\n    { label: \"Email Id\", key: \"email\" },\r\n    { label: \"Mobile Number\", key: \"mobile\" },\r\n    { label: \"Inquiry Date\", key: \"inquiry_date\" },\r\n    { label: \"Inquiry Channel\", key: \"inquiry_channel\" },\r\n    { label: \"Status\", key: \"status\" }\r\n  ];\r\n  \r\n\r\n  const exportHandler = () => {\r\n    setShowExportOption((prev) => !prev);\r\n  };\r\n\r\n  const exportModal = (\r\n    <Modal onclose={exportHandler}>\r\n      <Export onClose={exportHandler} />\r\n    </Modal>\r\n  );\r\n  \r\n  const drawerHandler = () => {\r\n    setDrawerIsOpen((prevState) => !prevState);\r\n  };\r\n\r\n  const handleDrawerOk = () => {\r\n    setSelectedFilter((previousState) => !previousState)\r\n    setDrawerIsOpen(false);\r\n  };\r\n\r\n  const handleDrawerReset = () => {\r\n    setSelectedFilter((previousState) => !previousState)\r\n    setSelectedInquiryModeFilter(false)\r\n    setSelectedStatusFilter(false)\r\n\r\n    setDrawerIsOpen(false);\r\n  };\r\n\r\n  const onDrawerClose = () => {\r\n    console.log(\"Closed\")\r\n    setDrawerIsOpen(false);\r\n  };\r\n\r\n  const getAllInquiries = () => {\r\n    axios\r\n    .post(\r\n      \"/api/tc/get-inquiries\",\r\n      {\r\n        page_index: 1,\r\n        page_size: 100000,\r\n        search : null,\r\n        customer_id: customer_id\r\n      },\r\n    )\r\n    .then((response) => {\r\n      let res = response.data.data.data;\r\n\r\n      let fdata = res.map((elem, index) => {\r\n        return {\r\n          ...elem,\r\n            sr_no: index+1,\r\n            key: elem.id,\r\n            id: elem.id,\r\n            customer_name: elem.customer_name || elem.tc_customer_id,\r\n            email: elem.email || '-',\r\n            mobile: elem.mobile || '-',\r\n            dateOfInquiry: moment(elem.created_at).format(\"DD-MM-YYYY\"),\r\n            status: elem.status,\r\n        };\r\n      });\r\n\r\n      setAllInquiries(fdata);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAllInquiries();\r\n  }, [])\r\n  \r\n\r\n\r\n  return (\r\n    <>\r\n      {showExportOption && exportModal}\r\n      <div className=\"d-flex justify-content-between align-items-center\">\r\n        <PageHeading\r\n          // icon={InquiryManagementPageIcon}\r\n          // svg={InquiryManagementPageIcon}\r\n          title=\"Inquiry List\"\r\n        />\r\n        <div className=\" d-flex align-items-center justify-content-end\">\r\n          <SearchBox setSearchText={setSearchText} />\r\n\r\n          <Button className=\"d-flex align-items-center ml-2\" onClick={drawerHandler}>\r\n            <Icon className=\"mr-2\" component={FilterIcon} />\r\n              Filters\r\n          </Button>\r\n          \r\n          <CSVLink data={allInquiries} \r\n              headers={headers} \r\n              filename={\"All-Inquiries.csv\"}\r\n            >\r\n              <Button className=\"d-flex align-items-center ml-2\" >\r\n                <img className=\"mr-2\" src={exportIcon} alt=\"exportIcon\"></img>Export\r\n              </Button>\r\n          </CSVLink>\r\n\r\n          {/* <Link to=\"/app/inquiry-management/add-new-inquiry\">\r\n              <Button\r\n                className=\"ml-2 d-flex align-items-center\"\r\n                type=\"primary\"\r\n                size=\"medium\"\r\n              >\r\n                <Icon component={PlusIcon}/>\r\n                Add new\r\n              </Button>\r\n          </Link> */}\r\n        </div>\r\n      </div>\r\n\r\n      <InquiryListTable allInquiries={allInquiries} setAllInquiries={setAllInquiries}\r\n      selectedInquiryModeFilter={selectedInquiryModeFilter} \r\n      selectedStatusFilter={selectedStatusFilter} \r\n      selectedFilter={selectedFilter} />\r\n\r\n      <Drawer title=\"Filter\"\r\n          placement=\"right\"\r\n          onClose={onDrawerClose} \r\n          open={drawerIsOpen}\r\n          closable={true}\r\n          // getContainer={false}\r\n          visible={drawerIsOpen}\r\n          footer={[\r\n            <Button key={'submit'} style={{ color: '#F5F5F5' }} type=\"primary\" className='font-weight-bold mr-2' onClick={handleDrawerOk}>Apply</Button>,\r\n            <Button key={'cancel'} style={{ color: '#000B23' }} onClick={() => {handleDrawerReset()}} className='font-weight-bold'>Reset</Button>,\r\n          ]}\r\n        >\r\n          {/* <div>\r\n            <h4>Inquiry Channel</h4>\r\n            <Select\r\n                showSearch\r\n                placeholder=\"Status\"\r\n                value={selectedStatusFilter}\r\n                onChange={(e) => {setSelectedStatusFilter(e)}}\r\n                className=\"w-100\"\r\n            >\r\n                <Select.Option title={'Whatsapp'} key={'Whatsapp'} value={'Whatsapp'}>{'Whatsapp'}</Select.Option>\r\n                <Select.Option title={'Email'} key={'Email'} value={'Email'}>{'Email'}</Select.Option>\r\n                <Select.Option title={'Web App'} key={'Web App'} value={'Web App'}>{'Web App'}</Select.Option>\r\n            </Select>\r\n          </div> */}\r\n          <div>\r\n            <h4>Status</h4>\r\n            <Select\r\n                showSearch\r\n                placeholder=\"Status\"\r\n                value={selectedStatusFilter}\r\n                onChange={(e) => {setSelectedStatusFilter(e)}}\r\n                className=\"w-100\"\r\n            >\r\n                <Select.Option title={'Open'} key={'Open'} value={'Open'}>{'Open'}</Select.Option>\r\n                <Select.Option title={'Quote Sent'} key={'Quote Sent'} value={'Quote Sent'}>{'Quote Sent'}</Select.Option>\r\n                <Select.Option title={'Quote Accepted'} key={'Quote Accepted'} value={'Quote Accepted'}>{'Quote Accepted'}</Select.Option>\r\n                <Select.Option title={'Closed'} key={'Closed'} value={'Closed'}>{'Closed'}</Select.Option>\r\n            </Select>\r\n          </div>\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InquiryList;\r\n","import React from \"react\";\r\n\r\nimport { Badge, List, Typography } from \"antd\";\r\nimport Icon from \"@ant-design/icons\";\r\n\r\nimport {\r\n  AssignedIcon,\r\n  ClosedIcon,\r\n  EmailIcon,\r\n  InboxIcon,\r\n  UnassignedIcon,\r\n  WhatsappIcon,\r\n} from \"./svgIcons\";\r\n\r\nconst { Title } = Typography;\r\n\r\nconst data = [\r\n  { icon: InboxIcon, text: \"All\", badgeNumber: 25 },\r\n  { icon: AssignedIcon, text: \"Assigned\", badgeNumber: 5 },\r\n  { icon: UnassignedIcon, text: \"Unassigned\", badgeNumber: 5 },\r\n  { icon: WhatsappIcon, text: \"Whatsapp\", badgeNumber: 5 },\r\n  { icon: EmailIcon, text: \"Email\", badgeNumber: 5 },\r\n  { icon: ClosedIcon, text: \"Closed\", badgeNumber: 5 },\r\n];\r\n\r\nconst AllInbox = () => {\r\n  return (\r\n    <>\r\n      <List\r\n        header={<Title level={3}>All Inbox</Title>}\r\n        dataSource={data}\r\n        renderItem={(item) => (\r\n          <List.Item>\r\n            <div className=\"d-flex justify-content-between w-100 align-items-center\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <Icon component={item.icon} className=\"mr-3\" />\r\n                {item.text}\r\n              </div>\r\n              <Badge count={item.badgeNumber} style={{background: \"#0099A8\"}} />\r\n            </div>\r\n          </List.Item>\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AllInbox;\r\n","// This icon file is generated automatically.\nvar SendOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"defs\", \"attrs\": {}, \"children\": [{ \"tag\": \"style\", \"attrs\": {} }] }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M931.4 498.9L94.9 79.5c-3.4-1.7-7.3-2.1-11-1.2a15.99 15.99 0 00-11.7 19.3l86.2 352.2c1.3 5.3 5.2 9.6 10.4 11.3l147.7 50.7-147.6 50.7c-5.2 1.8-9.1 6-10.3 11.3L72.2 926.5c-.9 3.7-.5 7.6 1.2 10.9 3.9 7.9 13.5 11.1 21.5 7.2l836.5-417c3.1-1.5 5.6-4.1 7.2-7.1 3.9-8 .7-17.6-7.2-21.6zM170.8 826.3l50.3-205.6 295.2-101.3c2.3-.8 4.2-2.6 5-5 1.4-4.2-.8-8.7-5-10.2L221.1 403 171 198.2l628 314.9-628.2 313.2z\" } }] }, \"name\": \"send\", \"theme\": \"outlined\" };\nexport default SendOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport SendOutlinedSvg from \"@ant-design/icons-svg/es/asn/SendOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar SendOutlined = function SendOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: SendOutlinedSvg\n  }));\n};\nSendOutlined.displayName = 'SendOutlined';\nexport default /*#__PURE__*/React.forwardRef(SendOutlined);","import React, { useState, useEffect } from \"react\";\r\nimport { Divider, Typography, Form, Input, Button } from \"antd\";\r\nimport Icon, { SendOutlined } from \"@ant-design/icons\";\r\nimport { SendIcon } from \"assets/svg/icon\";\r\nimport Actions from \"./Actions\";\r\nimport ProfilePic from \"assets/PrimaryAccount.png\";\r\nimport GrePic from \"assets/grand-energy-logo-small.png\";\r\n// Import statements\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport \"./Bottom.css\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nconst ChatingSection = ({ selectedChat }) => {\r\n  const [chatId, setChatId] = useState(\"\");\r\n  const [messageInput, setMessageInput] = useState(\"\");\r\n  const [allGreAdmins, setAllGreAdmins] = useState([]);\r\n  const [chatMessages, setChatMessages] = useState([]);\r\n  const [greData, setGreData] = useState({});\r\n  const [count, setCount] = useState(0);\r\n  const [timeoutId, setTimeoutId] = useState(null);\r\n  const customer_id = localStorage.getItem(\"customer_id\");\r\n  const customer_name = localStorage.getItem(\"customer_name\");\r\n  const associate_name = localStorage.getItem(\"name\");\r\n  const user_id = localStorage.getItem(\"user_id\");\r\n\r\n  const getGreData = () => {\r\n    axios({\r\n      method: 'post',\r\n      url: \"/api/tc/get-contact-details\",\r\n      data: {},\r\n      // headers: {\r\n      //     Authorization: `Bearer ${tok}`\r\n      // },\r\n    }).then(function (response) {\r\n        console.log(response.data);\r\n            \r\n        let res = response.data.data\r\n        setGreData(res);\r\n    }).catch(function (error) {\r\n        console.log(error);\r\n    });\r\n  }\r\n\r\n  const sendMessage = () => {\r\n    if(messageInput.trim().length >= 1) {\r\n      axios({\r\n        method: 'post',\r\n        url: \"/api/chat/send-message\",\r\n        data: {\r\n          chat_id: chatId,\r\n          chat_message: messageInput,\r\n          chat_message_type: 'group',\r\n        },\r\n      }).then(function (response) {\r\n        // const newMessage = {\r\n        //   chat_message: messageInput,\r\n        //   user_id: user_id,\r\n        //   messenger_name: \"You\",\r\n        //   created_at: new Date().toISOString(),\r\n        // };\r\n        // setChatMessages((prev) => [newMessage, ...prev]);\r\n\r\n        setMessageInput(\"\");\r\n        getChatMessages(chatId);\r\n      }).catch(function (error) {\r\n          console.log(error);\r\n      });\r\n    }\r\n  }\r\n\r\n  const getChatMessages = (id) => {\r\n    axios\r\n    .post(\r\n        \"/api/chat/get-chat-messages\",\r\n        {\r\n          chat_id: id\r\n        },\r\n      )\r\n      .then((response) => {\r\n        let res = response.data;\r\n        // console.log(res);\r\n        setChatMessages(res.messages.data.reverse())\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const getAllAdmins = () => {\r\n    axios\r\n    .post(\r\n        '/api/hrms/all-users',\r\n        {\r\n          page_index: 1,\r\n          page_size: 100000,\r\n        },\r\n      )\r\n      .then((response) => {\r\n        let res = response.data;\r\n        let users = res.all_users.data\r\n        console.log(res.all_users.data);\r\n        console.log(res);\r\n        let ids = []\r\n        for(let item of users) {\r\n          let access = JSON.parse(item.can_access)\r\n          if(access.ops_admin\r\n            // && access.support_system\r\n          ) {\r\n            console.log(item)\r\n            ids.push(item.id)\r\n          }\r\n        }\r\n        setAllGreAdmins(ids);\r\n        createOrGetChat();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const createOrGetChat = () => {\r\n    axios\r\n    .post(\r\n        \"/api/chat/create-or-get-chat\",\r\n        {\r\n          user_ids: [+user_id, 16, ...allGreAdmins],\r\n          chat_name: customer_name+' - '+associate_name,\r\n          chat_type: \"group\",\r\n          chat_module: \"inquiry\",\r\n        },\r\n      )\r\n      .then((response) => {\r\n        let res = response.data;\r\n        console.log(res);\r\n        getChatMessages(res.chat_id);\r\n        if(res.chat_id) setChatId(res.chat_id)\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const getDateTime = (date) => {\r\n    let message_date = moment(date).format(\"D-MM-YY\");\r\n    let message_time = moment(date).format(\"hh:mm A\");\r\n    if(moment(date) == moment(new Date())) {\r\n      message_date = 'Today'\r\n    }\r\n    // return message_date + ' ' + message_time\r\n    return message_time\r\n  }\r\n\r\n  useEffect(() => {\r\n    getGreData();\r\n    getAllAdmins();\r\n    // createOrGetChat();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let timeout_id = setTimeout(() => {\r\n      if(chatId) getChatMessages(chatId);\r\n      setCount(count => count+1)\r\n    }, 10000);\r\n    setTimeoutId(timeout_id);\r\n\r\n    return () => {\r\n      // This is the cleanup function\r\n      // It will be called when the component is unmounted\r\n      clearTimeout(timeoutId)\r\n    };\r\n  }, [count]);\r\n\r\n  return (\r\n    <div style={{ height: '100%', display: 'flex', width: \"100%\", flexDirection: 'column' }}>\r\n      {/* Header with user info and actions */}\r\n      <div style={{ padding: '16px 20px' }}>\r\n        <div className=\"d-flex justify-content-between\">\r\n          <div className=\"d-flex\">\r\n            <div style={{ width: \"5rem\" }} className=\"mr-3\">\r\n              <img\r\n                style={{\r\n                  width: \"100%\",\r\n                  objectFit: \"cover\",\r\n                  padding: '6px 5px'\r\n                  // borderRadius: \"50%\",\r\n                  // backgroundColor: '#d6d6d6',\r\n                }}\r\n                src={GrePic}\r\n                alt=\"Profile\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <Title level={4} style={{ margin: 0 }}>Grand Energy Technologies</Title>\r\n              <Text>{greData.mobile}</Text>\r\n            </div>\r\n          </div>\r\n          {/* <Actions /> */}\r\n        </div>\r\n      </div>\r\n      <Divider style={{ margin: '0 0 10px 0' }} />\r\n\r\n      {/* Chat body - message area */}\r\n      <div className=\"chat-body-container\" style={{\r\n        flexGrow: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        overflow: 'hidden'\r\n      }}>\r\n        <div\r\n          id=\"scrollableDiv\"\r\n          className=\"chatBody\"\r\n          style={{\r\n            height: 'auto',\r\n            flexGrow: 1,\r\n            padding: '10px 20px 20px 20px',\r\n            display: 'flex',\r\n            flexDirection: 'column-reverse',\r\n            overflowY: 'auto',\r\n          }}\r\n        >\r\n          <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n            {chatMessages.map((message, index) => {\r\n              const myMsg = message.user_id === +user_id;\r\n              console.log(user_id);\r\n\r\n              return (\r\n                <div\r\n                  key={index}\r\n                  className={`BottomRightMsgContainer ${myMsg ? \"myMsg\" : \"\"}`}\r\n                  style={{\r\n                    margin: '8px 0',\r\n                  }}\r\n                >\r\n                  <div\r\n                    className={`d-flex flex-column justify-content-end ${myMsg ? \"align-items-end\" : \"align-items-start\"\r\n                      }`}\r\n                    style={{ width: '100%' }}\r\n                  >\r\n                    <div style={{ fontSize: '10px', marginBottom: '2px' }}>\r\n                      {message.user_id === +user_id ? \"You\" : message.name}\r\n                    </div>\r\n                    <div className={`BottomRightMsg ${myMsg ? \"myMsg\" : \"\"}`}>\r\n                      {message.chat_message}\r\n                    </div>\r\n                    <div className={`BottomRightTime ${myMsg ? \"myMsg\" : \"\"}`}>\r\n                      {message.created_at\r\n                        ? getDateTime(message.created_at)\r\n                        : \"\"}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Message input area */}\r\n        <div style={{ padding: '15px 20px', borderTop: '1px solid #f0f0f0' }}>\r\n          <Form>\r\n            <div style={{\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n              gap:\"10px\"\r\n            }}>\r\n              <div style={{\r\n                flexGrow: 1,\r\n              }}>\r\n                <TextArea\r\n                  rows={1}\r\n                  style={{\r\n                    borderRadius: '8px',\r\n                    resize: 'none',\r\n                    padding: '8px 12px'\r\n                  }}\r\n                  placeholder=\"Type a message...\"\r\n                  value={messageInput}\r\n                  onChange={(e) => setMessageInput(e.target.value)}\r\n                  onKeyPress={(e) => {\r\n                    if (e.key === \"Enter\" && !e.shiftKey) {\r\n                      e.preventDefault();\r\n                      sendMessage();\r\n                    }\r\n                  }}\r\n                />\r\n              </div>\r\n              <div\r\n                style={{\r\n                  display: 'flex',\r\n                  justifyContent: 'flex-end',\r\n                  alignItems: 'center',\r\n                  // marginTop: '8px',\r\n                  height: '100%'\r\n                }}\r\n              >\r\n                <Button\r\n                  onClick={sendMessage}\r\n                  disabled={messageInput.trim().length < 1}\r\n                  type=\"primary\"\r\n                >\r\n                  <SendOutlined />\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatingSection;\r\n\r\n// import React from \"react\";\r\n// import { Typography } from \"antd\";\r\n// import Actions from \"./Actions\";\r\n// import ProfilePic from \"assets/PrimaryAccount.png\";\r\n// const { Title, Text } = Typography;\r\n\r\n// const ChatingSection = () => {\r\n//   return (\r\n//     <div className=\"d-flex justify-content-between\">\r\n//       <div className=\"d-flex\">\r\n//         <div style={{ width: \"4rem\" }} className=\"mr-3\">\r\n//           <img style={{ width: \"100%\" }} src={ProfilePic} />\r\n//         </div>\r\n//         <div>\r\n//           <Title strong level={4}>Johm Smith</Title>\r\n//           <Text>+65 123456789</Text>\r\n//         </div>\r\n//       </div>\r\n//       <Actions  />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ChatingSection;\r\n","import React from 'react'\r\n\r\nimport { Card } from 'antd'\r\nimport PageHeading from 'components/shared-components/PageHeading/PageHeading'\r\nimport AllInbox from './AllInbox'\r\nimport ChatingSection from './ChatingSection'\r\nimport { InquiryManagementPageIcon } from 'assets/svg/icon'\r\nimport Inquiries from './Inquiries'\r\n\r\nconst InquiryChats = () => {\r\n  return (\r\n    <>\r\n      <div>\r\n        <PageHeading\r\n          // icon={InquiryManagementPageIcon}\r\n          // svg={InquiryManagementPageIcon}\r\n          title=\"Inquiry Management / Chats\"\r\n        />\r\n      </div>\r\n\r\n      <Card >\r\n      <div style={{ display: 'flex', height: '500px' }}>\r\n        <Card.Grid style={{width: \"100%\"}}>\r\n          <ChatingSection/>\r\n        </Card.Grid>\r\n      </div>\r\n      </Card>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default InquiryChats","import React from \"react\";\r\n\r\nimport { Typography, Button, List, Badge } from \"antd\";\r\nimport Icon from \"@ant-design/icons\";\r\n\r\nimport { FilterIcon, SearchIcon, WhatsappIcon } from \"assets/svg/icon\";\r\nimport ProfilePic from \"assets/PrimaryAccount.png\";\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nconst data = [\"item1\", \"item2\", \"item3\"];\r\n\r\nconst Inquiries = () => {\r\n  const header = (\r\n    <div className=\"d-flex justify-content-between\">\r\n      <Title level={3}>Inquiries</Title>\r\n      <div className=\"d-flex\">\r\n        <Button>\r\n          <Icon component={SearchIcon} />\r\n        </Button>\r\n        <Button>\r\n          <Icon component={FilterIcon} />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n  return (\r\n    <List\r\n      header={header}\r\n      dataSource={data}\r\n      renderItem={(item) => (\r\n        <List.Item>\r\n          <div className=\"d-flex justify-content-between w-100\">\r\n            <div className=\"d-flex\">\r\n              <div style={{width: \"4rem\"}} className=\"mr-4\">\r\n              <img style={{maxWidth: \"100%\"}} src={ProfilePic}></img>\r\n              </div>\r\n              \r\n              <div>\r\n                <Title strong level={4}>Johm Smith</Title>\r\n                <Text  type=\"secondary\">Okay , thank you so much</Text>\r\n                <br />\r\n                <br />\r\n                \r\n                \r\n                <Text strong  >#123 General Inquiry</Text>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <Title strong secondry level={5}>15 min ago</Title>\r\n              <div className=\"d-flex align-items-center justify-content-around\">\r\n                <Badge count={1} style={{ background: \"#0099A8\" }} />\r\n                <Icon component={WhatsappIcon} />\r\n              </div>\r\n              <br />\r\n              \r\n              <Title strong level={4} style={{ color: \"#00AB6F\" }}>Assigned</Title>\r\n            </div>\r\n          </div>\r\n        </List.Item>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Inquiries;\r\n","import React , {useState,useEffect} from \"react\";\r\nimport { Form, Button, Col, Row, Card, Input, Select, message, DatePicker } from \"antd\";\r\nimport PageHeading from \"components/shared-components/PageHeading/PageHeading\";\r\nimport Modal from \"components/UI/Modal\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { useLocation, useHistory, useParams } from 'react-router-dom';\r\n\r\nconst { RangePicker } = DatePicker;\r\nconst { TextArea } = Input;\r\n\r\nconst AddNewInquiry = (props) => {\r\n    const [form] = Form.useForm();\r\n    const params = useParams();\r\n    // const [value, setValue] = useState('');\r\n    const [selectedAssociateType , setSelectedAssociateType] = useState([]);\r\n    const [jobsData , setJobsData] = useState([]);\r\n    const [jobFile , setJobFile] = useState({\r\n        name: '',\r\n        url: ''\r\n    });\r\n    const [gstData, setGstData] = useState([]);\r\n    const [customerAccountData, setCustomerAccountData] = useState([]);\r\n    const history = useHistory();\r\n    const customer_id = localStorage.getItem(\"customer_id\")\r\n       \r\n    const [showModal , setShowModal] = useState(false);\r\n    \r\n    const saveQuotationHandler = () => {\r\n        setShowModal(prev => !prev);\r\n    }\r\n    \r\n    const finishHandler = (e) => {\r\n        console.log(e)\r\n        // console.log(e.status)\r\n        // if(!jobFile || !jobFile.url) {\r\n        //   message.error(\"Please Upload attachment file first\");\r\n        //   return\r\n        // }\r\n    \r\n        if (props.id) {\r\n          axios\r\n            .post(\r\n              \"/api/tc/update-inquiry\",\r\n              {\r\n                id: props.id,\r\n                tc_customer_id: customer_id,\r\n                type: e.inquiry_type,\r\n                name: e.inquiry_name,\r\n                remarks: e.remarks || '',\r\n                date: e.date || moment().format('YYYY-MM-DD'),\r\n                comments: e.comments || [],\r\n              },\r\n              {\r\n                headers: {\r\n                  \"content-type\": \"application/json\"\r\n                },\r\n              }\r\n            )\r\n            .then((response) => {\r\n              if(!response.data.success){\r\n                message.warn(response.data.msg)\r\n                return;\r\n              }\r\n              console.log(props.id)\r\n              message.success(\"Inquiry created successfully\")\r\n              history.goBack()\r\n            })\r\n            .catch((error) => {\r\n              console.log(error);\r\n            });\r\n          return\r\n        } else {\r\n          axios\r\n            .post(\r\n              \"/api/tc/new-inquiry\",\r\n              {\r\n                tc_customer_id: customer_id,\r\n                type: e.inquiry_type,\r\n                name: e.inquiry_name,\r\n                remarks: e.remarks || '',\r\n                date: e.date || moment().format('YYYY-MM-DD'),\r\n                comments: e.comments || [],\r\n              },\r\n              {\r\n                headers: {\r\n                  \"content-type\": \"application/json\"\r\n                },\r\n              }\r\n            )\r\n            .then((response) => {\r\n              if(!response.data.success){\r\n                message.warn(response.data.msg)\r\n                return;\r\n              }\r\n              message.success(\"Inquiry created successfully\")\r\n              history.goBack()\r\n            })\r\n            .catch((error) => {\r\n              console.log(error);\r\n            });\r\n        }\r\n      };\r\n\r\n      const getSubTotalAmount = () => {\r\n        let amount = 0;\r\n        if(jobsData.length > 0) {\r\n          for(let i=0; i<jobsData.length; i++) {\r\n            amount += jobsData[i].total;\r\n          }\r\n        }\r\n        return amount\r\n      }\r\n    \r\n      const getTotalAmount = (gst_percentage) => {\r\n        let amount = 0;\r\n        if(jobsData.length > 0) {\r\n          for(let i=0; i<jobsData.length; i++) {\r\n            amount += jobsData[i].total;\r\n          }\r\n        }\r\n        if(amount) {\r\n          amount = amount + ((+gst_percentage/100)*amount);\r\n        }\r\n        return amount\r\n      }\r\n    \r\n      const getAllGst = ()=> {\r\n        axios({\r\n            method: 'post',\r\n            url: \"/api/tc/get-all-gsts\",\r\n            data: {},\r\n        }).then(function (response) {\r\n            if(response.data.success) {\r\n                console.log(response.data.data)\r\n                let res = response.data.data.data;\r\n                let fdata = res.map((elem, ind) => {\r\n                  return {\r\n                      key: elem.id,\r\n                      id: elem.id,\r\n                      srNo: ind+1,\r\n                      percentage: elem.percentage,\r\n                      description: elem.description,\r\n                      created_at: moment(elem.created_at).format(\"DD-MM-YYYY\"),\r\n                      updated_at: moment(elem.updated_at).format(\"DD-MM-YYYY\"),\r\n                  };\r\n                });\r\n                setGstData(fdata);\r\n                // console.log(fdata);\r\n    \r\n                // form.setFieldsValue ({\r\n                //   ...form.getFieldsValue(),\r\n                //   gst: res[res.length - 1].percentage || 8\r\n                // })\r\n            }\r\n        }).catch(function (error) {\r\n            console.log(error);\r\n        });\r\n      };\r\n\r\n      const getInquiry = () => {\r\n\r\n      }\r\n\r\n      useEffect(() => {\r\n        axios\r\n          .post(\r\n            \"/api/tc/get-customers\",\r\n            {\r\n              page_index: 1,\r\n              page_size: 100000,\r\n              // statuses: [\"ACTIVE\", \"INACTIVE\", \"PENDING APPROVAL\"],\r\n              searchText : null,\r\n            }\r\n          )\r\n          .then((response) => {\r\n            let res = response.data.data.data;\r\n            console.log(res);\r\n    \r\n            let fdata = res.map((elem, ind) => {\r\n              return {\r\n                key: ind,\r\n                id: elem.id,\r\n                company: elem.name,\r\n                phoneNumber: elem.phone,\r\n                emailId: elem.email\r\n              };\r\n            });\r\n    \r\n            setCustomerAccountData(customerAccountData.concat(fdata));\r\n            console.log(customerAccountData)\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n    \r\n          getAllGst();\r\n          if(params.id) {\r\n            getInquiry();\r\n          } else {\r\n            form.setFieldsValue({\r\n              inquiry_date: moment()\r\n            })\r\n          }\r\n      }, []);\r\n    \r\n      const clearForm = () => {\r\n        form.resetFields();\r\n        setJobsData([]);\r\n        setJobFile(({\r\n          name: '',\r\n          url: ''\r\n        }));\r\n      }\r\n    \r\n  return (\r\n    <React.Fragment>\r\n      <PageHeading title=\"Create New Inquiry\" />\r\n\r\n      <Form\r\n        form={form}\r\n        labelCol={{\r\n          span: 10,\r\n        }}\r\n        wrapperCol={{\r\n          span: 18,\r\n        }}\r\n        layout=\"vertical\"\r\n        onFinish={finishHandler}\r\n      >\r\n        <Card className=\"mt-2\">\r\n          <div className=\"d-flex justify-content-end\" style={{ color: \"red\" }}>\r\n            <div>* Indicates Mandatory Fields</div>\r\n          </div>\r\n\r\n          <Row align=\"top\">\r\n            <Col span={12}>\r\n              <Form.Item name=\"inquiry_date\" label=\"Inquiry Date\" rules={[{ required: true, message: \"Required\" }]}>\r\n                <DatePicker disabled />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item name=\"inquiry_type\" label=\"Inquiry Type\" rules={[{ required: true, message: \"Required\" }]}>\r\n                <Select showSearch value={selectedAssociateType} onChange={setSelectedAssociateType}>\r\n                  <Select.Option key=\"General Inquiry\" value=\"General Inquiry\"></Select.Option>\r\n                  <Select.Option key=\"Service Inquiry\" value=\"Service Inquiry\"></Select.Option>\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row align=\"top\">\r\n            <Col span={12}>\r\n              <Form.Item name=\"inquiry_name\" label=\"Name\">\r\n                <Input />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row align=\"top\">\r\n            <Col span={24}>\r\n              <Form.Item name=\"remarks\" label=\"Remarks\">\r\n                <TextArea rows={3}/>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Card>\r\n\r\n        <div className=\"w-100 d-flex justify-content-end actions\">\r\n          <Form.Item className=\"w-100\">\r\n            <Button\r\n              onClick={() => {\r\n                history.goBack();\r\n              }}\r\n            >\r\n              Back\r\n            </Button>\r\n            <Button\r\n              onClick={() => {\r\n                clearForm();\r\n              }}\r\n            >\r\n              Clear All\r\n            </Button>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Save\r\n            </Button>\r\n          </Form.Item>\r\n        </div>\r\n      </Form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default AddNewInquiry","import React from \"react\";\r\nimport { Route , Redirect , useRouteMatch } from \"react-router-dom\";\r\n\r\nimport { APP_PREFIX_PATH, AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\n\r\nimport InquiryList from \"./InquiryList\";\r\nimport InquiryChats from \"./InquiryChats\";\r\nimport AddNewInquiry from \"./AddNewInquiry\";\r\n\r\nconst InquiryManagement = () => {\r\n\r\n  const match = useRouteMatch();\r\n  return (\r\n    <div>\r\n      <Route path={`${APP_PREFIX_PATH}/inquiry-management`} exact>\r\n        <Redirect to={`${match.path}/inquiry-list`} />\r\n      </Route>\r\n      <Route path={`${match.path}/inquiry-list`} exact>\r\n        <InquiryList/>\r\n      </Route>\r\n      <Route path={`${match.path}/add-new-inquiry`} exact>\r\n        <AddNewInquiry/>\r\n      </Route>\r\n      <Route path={`${match.path}/edit-inquiry/:id`} exact>\r\n        <AddNewInquiry/>\r\n      </Route>\r\n      <Route path={`${match.path}/chats`} exact>\r\n        <InquiryChats/>\r\n      </Route>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InquiryManagement;\r\n"],"names":["InquiryStatusIcon","_jsxs","width","height","viewBox","fill","xmlns","children","_jsx","d","id","menu","Menu","items","label","key","href","type","CustomDropdown","text","Title","Typography","props","onClose","className","Button","onClick","src","exportIcon","alt","ExportDropdown","_ref","setInquiryData","openStatusModal","inquiry_id","useHistory","useRouteMatch","_Fragment","EllipsisDropdown","prev","Icon","component","TextArea","Input","allInquiries","setAllInquiries","searchText","setPage","selectedFilter","selectedInquiryModeFilter","selectedStatusFilter","_useState","useState","_useState2","_slicedToArray","inquiryData","_useState3","_useState4","setOpenStatusModal","_useState5","_useState6","status","setStatus","_useState7","_useState8","remark","setRemark","columns","title","dataIndex","render","Tag","color","_","record","Actions","useEffect","getData","axios","page_index","page_size","statuses","search","inquiry_mode","then","response","fdata","data","map","elem","ind","_objectSpread","sr_no","customer_name","tc_customer_id","email","mobile","dateOfInquiry","moment","created_at","format","catch","error","console","log","Table","dataSource","Modal","visible","centered","maskClosable","onCancel","footer","style","customer_id","res","Radio","size","onChange","e","target","value","defaultValue","defaultChecked","rows","showExportOption","setShowExportOption","setSearchText","drawerIsOpen","setDrawerIsOpen","_useState9","_useState10","setSelectedInquiryModeFilter","_useState11","_useState12","setSelectedStatusFilter","_useState13","_useState14","setSelectedFilter","_useState15","_useState16","_useState17","_useState18","localStorage","getItem","_useState19","_useState20","exportHandler","exportModal","onclose","Export","index","PageHeading","SearchBox","prevState","FilterIcon","CSVLink","headers","filename","InquiryListTable","Drawer","placement","open","closable","previousState","Select","showSearch","placeholder","SendOutlined","ref","React","AntdIcon","icon","SendOutlinedSvg","displayName","Text","selectedChat","chatId","setChatId","messageInput","setMessageInput","allGreAdmins","setAllGreAdmins","chatMessages","setChatMessages","greData","setGreData","count","setCount","timeoutId","setTimeoutId","associate_name","user_id","sendMessage","trim","length","method","url","chat_id","chat_message","chat_message_type","getChatMessages","messages","reverse","createOrGetChat","user_ids","concat","_toConsumableArray","chat_name","chat_type","chat_module","getDateTime","date","message_time","Date","users","all_users","_step","ids","_iterator","_createForOfIteratorHelper","s","n","done","item","JSON","parse","can_access","ops_admin","push","err","f","timeout_id","setTimeout","clearTimeout","display","flexDirection","padding","objectFit","GrePic","level","margin","Divider","flexGrow","overflow","overflowY","message","myMsg","fontSize","marginBottom","name","borderTop","Form","justifyContent","gap","borderRadius","resize","onKeyPress","shiftKey","preventDefault","alignItems","disabled","Card","ChatingSection","DatePicker","_Form$useForm","form","params","useParams","selectedAssociateType","setSelectedAssociateType","setJobsData","setJobFile","setGstData","customerAccountData","setCustomerAccountData","history","company","phoneNumber","phone","emailId","success","srNo","percentage","description","updated_at","setFieldsValue","inquiry_date","labelCol","span","wrapperCol","layout","onFinish","inquiry_type","inquiry_name","remarks","comments","goBack","msg","Row","align","Col","rules","required","resetFields","htmlType","match","Route","path","APP_PREFIX_PATH","exact","Redirect","to","InquiryList","AddNewInquiry","InquiryChats"],"sourceRoot":""}