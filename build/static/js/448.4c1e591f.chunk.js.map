{"version":3,"file":"static/js/448.4c1e591f.chunk.js","mappings":"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","sources":["views/app-views/InquiryManagement/ActionsIcons.js","views/app-views/InquiryManagement/Export-Dropdown.js","views/app-views/InquiryManagement/Export-InquiryManagement.js","views/app-views/InquiryManagement/Actions.js","views/app-views/InquiryManagement/InquiryListTable.js","views/app-views/InquiryManagement/InquiryList.js","views/app-views/InquiryManagement/AllInbox.js","../node_modules/@ant-design/icons-svg/es/asn/SendOutlined.js","../node_modules/@ant-design/icons/es/icons/SendOutlined.js","views/app-views/InquiryManagement/ChatingSection.js","views/app-views/InquiryManagement/InquiryChats.js","views/app-views/InquiryManagement/Inquiries.js","views/app-views/InquiryManagement/AddNewInquiry/index.js","views/app-views/InquiryManagement/ViewInquiry/TravelerRemarks/CommentsReplyContainer.js","views/app-views/InquiryManagement/ViewInquiry/TravelerRemarks/CommentsReplyLabel.js","views/app-views/InquiryManagement/ViewInquiry/TravelerRemarks/CommentsLabel.js","views/app-views/InquiryManagement/ViewInquiry/TravelerRemarks/Comments.js","views/app-views/InquiryManagement/ViewInquiry/index.js","views/app-views/InquiryManagement/InquiryManagement.js"],"sourcesContent":["export const CrossIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<g clip-path=\"url(#clip0_215_9541)\">\r\n<path d=\"M18.2995 5.70948C17.9095 5.31948 17.2795 5.31948 16.8895 5.70948L11.9995 10.5895L7.10948 5.69948C6.71948 5.30948 6.08948 5.30948 5.69948 5.69948C5.30948 6.08948 5.30948 6.71948 5.69948 7.10948L10.5895 11.9995L5.69948 16.8895C5.30948 17.2795 5.30948 17.9095 5.69948 18.2995C6.08948 18.6895 6.71948 18.6895 7.10948 18.2995L11.9995 13.4095L16.8895 18.2995C17.2795 18.6895 17.9095 18.6895 18.2995 18.2995C18.6895 17.9095 18.6895 17.2795 18.2995 16.8895L13.4095 11.9995L18.2995 7.10948C18.6795 6.72948 18.6795 6.08948 18.2995 5.70948Z\" fill=\"#455560\"/>\r\n</g>\r\n<defs>\r\n<clipPath id=\"clip0_215_9541\">\r\n<rect width=\"24\" height=\"24\" fill=\"white\"/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n\r\n)\r\n\r\nexport const ChangeAssigneeIcon = () => (\r\n  <svg width=\"20\" height=\"18\" viewBox=\"0 0 20 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<path d=\"M8 8C10.21 8 12 6.21 12 4C12 1.79 10.21 0 8 0C5.79 0 4 1.79 4 4C4 6.21 5.79 8 8 8ZM8 2C9.1 2 10 2.9 10 4C10 5.1 9.1 6 8 6C6.9 6 6 5.1 6 4C6 2.9 6.9 2 8 2Z\" fill=\"#455560\"/>\r\n<path d=\"M2 14C2.22 13.28 5.31 12 8 12C8 11.3 8.13 10.63 8.35 10.01C5.62 9.91002 0 11.27 0 14V16H9.54C9.02 15.42 8.61 14.75 8.35 14H2Z\" fill=\"#455560\"/>\r\n<path d=\"M17.43 14.02C17.79 13.43 18 12.74 18 12C18 9.79 16.21 8 14 8C11.79 8 10 9.79 10 12C10 14.21 11.79 16 14 16C14.74 16 15.43 15.78 16.02 15.43C16.95 16.36 17.64 17.05 18.59 18L20 16.59C18.5 15.09 19.21 15.79 17.43 14.02ZM14 14C12.9 14 12 13.1 12 12C12 10.9 12.9 10 14 10C15.1 10 16 10.9 16 12C16 13.1 15.1 14 14 14Z\" fill=\"#455560\"/>\r\n</svg>\r\n\r\n)\r\n\r\nexport const ReportEnquiryIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<g clip-path=\"url(#clip0_215_9556)\">\r\n<path d=\"M12.36 6L12.76 8H18V14H14.64L14.24 12H7V6H12.36ZM14 4H5V21H7V14H12.6L13 16H20V6H14.4L14 4Z\" fill=\"#455560\"/>\r\n</g>\r\n<defs>\r\n<clipPath id=\"clip0_215_9556\">\r\n<rect width=\"24\" height=\"24\" fill=\"white\"/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n\r\n)\r\nexport const CreateQuotationIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n  <g clip-path=\"url(#clip0_886_13832)\">\r\n  <path d=\"M14 2H6C4.9 2 4 2.9 4 4V20C4 21.1 4.9 22 6 22H18C19.1 22 20 21.1 20 20V8L14 2ZM6 20V4H13V8H18V20H6ZM11 19H13V18H14C14.55 18 15 17.55 15 17V14C15 13.45 14.55 13 14 13H11V12H15V10H13V9H11V10H10C9.45 10 9 10.45 9 11V14C9 14.55 9.45 15 10 15H13V16H9V18H11V19Z\" fill=\"#475569\"/>\r\n  </g>\r\n  <defs>\r\n  <clipPath id=\"clip0_886_13832\">\r\n  <rect width=\"24\" height=\"24\" fill=\"white\"/>\r\n  </clipPath>\r\n  </defs>\r\n  </svg>\r\n)\r\nexport const InquiryStatusIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n  <g clipPath=\"url(#clip0_886_13838)\">\r\n  <path d=\"M11 12C13.21 12 15 10.21 15 8C15 5.79 13.21 4 11 4C8.79 4 7 5.79 7 8C7 10.21 8.79 12 11 12ZM11 6C12.1 6 13 6.9 13 8C13 9.1 12.1 10 11 10C9.9 10 9 9.1 9 8C9 6.9 9.9 6 11 6ZM5 18C5.2 17.37 7.57 16.32 9.96 16.06L12 14.06C11.61 14.02 11.32 14 11 14C8.33 14 3 15.34 3 18V20H12L10 18H5ZM20.6 12.5L15.47 17.67L13.4 15.59L12 17L15.47 20.5L22 13.91L20.6 12.5Z\" fill=\"#475569\"/>\r\n  </g>\r\n  <defs>\r\n  <clipPath id=\"clip0_886_13838\">\r\n  <rect width=\"24\" height=\"24\" fill=\"white\"/>\r\n  </clipPath>\r\n  </defs>\r\n  </svg>\r\n)","import CustomDropdown from 'components/shared-components/CustomDropdown/CustomDropdown'\r\nimport React from 'react'\r\nimport { Menu } from 'antd';\r\n\r\nconst menu = (\r\n  <Menu\r\n    items={[\r\n      {\r\n        label: <p>1st menu</p>,\r\n        key: '0',\r\n      },\r\n      {\r\n        label: <a href=\"https://www.aliyun.com\">2nd menu item</a>,\r\n        key: '1',\r\n      },\r\n      {\r\n        type: 'divider',\r\n      },\r\n      {\r\n        label: '3rd menu item',\r\n        key: '3',\r\n      },\r\n    ]}\r\n  />\r\n);\r\n\r\nconst ExportDropdown = () => {\r\n  return (\r\n    <CustomDropdown text=\"Select\" menu={menu}/>\r\n  )\r\n}\r\n\r\nexport default ExportDropdown;","import React from 'react'\r\nimport { Button, Typography } from 'antd';\r\nimport ExportDropdown from './Export-Dropdown';\r\n\r\nimport exportIcon from 'assets/svg/file-export.svg'\r\n\r\nconst {Title} = Typography;\r\n\r\nconst Export = (props) => {\r\n  const {onClose} = props;\r\n  return (\r\n    <div className='text-center p-3'>\r\n      <div className='text-right'>\r\n        <Button onClick={onClose}>close</Button>\r\n      </div>\r\n      <div className='mb-4'>\r\n        <img src={exportIcon} alt=\"ExportIcon\"></img>\r\n        <Title>Export/Download Data</Title>\r\n      </div>\r\n      <div className='text-left mb-4'>\r\n        <p>Select Department</p>\r\n        <ExportDropdown/>\r\n      </div>\r\n      <div>\r\n        <Button className='m-1 mr-3' type=\"primary\">Yes, Confirm</Button>\r\n        <Button className='m-1' onClick={onClose}>No, Cancel</Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Export;","import React, { useState } from \"react\";\r\n// import EllipsisDropdown from 'components/shared-components/EllipsisDropdown'\r\nimport EllipsisDropdown from \"components/shared-components/EllipsisDropdown/index\";\r\nimport Modal from \"components/UI/Modal\";\r\n\r\nimport { Menu, Typography, Button } from \"antd\";\r\nimport Icon from \"@ant-design/icons\";\r\n\r\nimport {\r\n  CrossIcon,\r\n  ChangeAssigneeIcon,\r\n  ReportEnquiryIcon,\r\n  CreateQuotationIcon,\r\n  InquiryStatusIcon\r\n} from \"./ActionsIcons\";\r\n\r\nimport { InquiryIcon } from \"./svgIcons\";\r\nimport { useHistory, useParams, useRouteMatch } from \"react-router-dom\";\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nconst Actions = ({setInquiryData,openStatusModal,inquiry_id}) => {\r\n  const history = useHistory();\r\n  const match = useRouteMatch();\r\n\r\n  const InquiryStatusHandler = () => {\r\n    openStatusModal((prev) => !prev);\r\n  };\r\n\r\n  const CreateQuotationHandler = () => {\r\n    history.push(`/app/contract-management/quotations/add-new-quotation/${inquiry_id}`);\r\n  };\r\n\r\n  const ViewInquiryHandler = () => {\r\n    history.push(`/app/inquiry-management/view-inquiry/${inquiry_id}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <EllipsisDropdown\r\n        menu={\r\n          <Menu>\r\n            {/* <Menu.Item onClick={CreateQuotationHandler}>\r\n              <span className=\"d-flex align-items-center\">\r\n                <Icon className=\"mr-2\" component={CreateQuotationIcon}  />\r\n                Create Quotation\r\n              </span>\r\n            </Menu.Item> */}\r\n            <Menu.Item onClick={ViewInquiryHandler}>\r\n              <span className=\"d-flex align-items-center\">\r\n                <Icon className=\"mr-2\" component={ChangeAssigneeIcon}  />\r\n                View Inquiry\r\n              </span>\r\n            </Menu.Item>\r\n            <Menu.Item  onClick={InquiryStatusHandler}>\r\n              <span className=\"d-flex align-items-center\">\r\n                <Icon className=\"mr-2\" component={InquiryStatusIcon}  />\r\n                Inquiry Status\r\n              </span>\r\n            </Menu.Item>\r\n          </Menu>\r\n        }\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Actions;\r\n","import React , {useState, useEffect} from 'react'\r\n\r\nimport {Input, Table , Button, Tag, Modal, Radio, message} from 'antd';\r\nimport Icon from '@ant-design/icons'\r\nimport { WhatsappIcon } from 'assets/svg/icon';\r\nimport Actions from './Actions';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\n\r\nconst { TextArea } = Input;\r\n\r\n\r\n// const data = [\r\n//   {\r\n//     key: 1,\r\n//     inquiryId: \"GE-123456\",\r\n//     userName: \"John Smith\",\r\n//     phoneNumber: \"+65 123456789\",\r\n//     emailId: \"johnsmith@gmail.com\",\r\n//     dateOfInquiry: \"20/08/22\",\r\n//     assignedTo: \"Wade Warren\",\r\n//     inquiryChanel: WhatsappIcon,\r\n//     status: \"closed\",\r\n//   }\r\n// ];\r\n\r\nconst InquiryListTable = ({allInquiries, setAllInquiries, setPage, searchText, selectedFilter, selectedInquiryModeFilter, selectedStatusFilter }) => {\r\n  // const [selectedRowKeys , setSelectedRowKeys] = useState([]);\r\n  const [inquiryData, setInquiryData] = useState({});\r\n  const [openStatusModal, setOpenStatusModal] = useState(false);\r\n  const [status, setStatus] = useState(\"Open\");\r\n  const [remark, setRemark] = useState(false);\r\n  const columns = [\r\n    {\r\n      title: 'Inquiry Id',\r\n      dataIndex: 'id',\r\n    },\r\n    {\r\n      title: 'Customer Name',\r\n      dataIndex: 'customer_name',\r\n      // defaultSortOrder: 'descend',\r\n      // sorter: (a, b) => a.customer_name - b.customer_name,\r\n    },\r\n    {\r\n      title: 'Email Id',\r\n      dataIndex: 'email',\r\n      // defaultSortOrder: 'descend',\r\n      // sorter: (a, b) => a.emailId - b.emailId,\r\n      \r\n    },\r\n    {\r\n      title: 'Mobile Number',\r\n      dataIndex: 'mobile',\r\n      // defaultSortOrder: 'descend',\r\n      // sorter: (a, b) => a.phoneNuber - b.phoneNuber,\r\n    },\r\n    {\r\n      title: 'Inquiry Date',\r\n      dataIndex: 'dateOfInquiry',\r\n      // defaultSortOrder: 'descend',\r\n      // sorter: (a, b) => a.dateOfInquiry - b.dateOfInquiry,\r\n    },\r\n    // {\r\n    //   title: 'Inquiry Chanel',\r\n    //   dataIndex: 'inquiryChanel',\r\n    //   render: (icon) => {\r\n    //     return(\r\n    //     <span className='d-flex justify-content-center'>\r\n    //       <Icon component={icon}/>\r\n    //       </span>\r\n    //       )\r\n    //   }\r\n    // },\r\n    {\r\n      title: 'Status',\r\n      dataIndex: 'status',\r\n      render: (status) => {\r\n        return(\r\n          <span>\r\n            <Tag color=\"green\" key={status}>\r\n              {status}\r\n            </Tag>\r\n          </span>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      title:\"Action\",\r\n      dataIndex: \"action\",\r\n      render: (_,record) => {\r\n        return (\r\n          <Actions setInquiryData={setInquiryData} inquiryData={record} openStatusModal={openStatusModal} inquiry_id={record.id}/>\r\n        )\r\n      }\r\n    }\r\n      \r\n      \r\n  ];\r\n\r\n  const handleStatusOk = () => {\r\n    console.log(inquiryData);\r\n    axios\r\n    .post(\r\n      \"/api/tc/update-inquiry\",\r\n      {\r\n        ...inquiryData,\r\n        id: inquiryData.id,\r\n        tc_customer_id: inquiryData.customer_id,\r\n        status: status\r\n      },\r\n    )\r\n    .then((response) => {\r\n      let res = response.data;\r\n      console.log(res);\r\n      setOpenStatusModal(false);\r\n      getData();\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n      \r\n  };\r\n  const handleStatusCancel = () => {\r\n      setStatus(\"\")\r\n      setRemark(\"\")\r\n      setOpenStatusModal(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [searchText]);\r\n\r\n  useEffect(() => {\r\n    getData()\r\n  }, [selectedFilter]);\r\n\r\n\r\n  const getData = () => {\r\n    axios\r\n      .post(\r\n        \"/api/tc/get-inquiries\",\r\n        {\r\n          page_index: 1,\r\n          page_size: 10,\r\n          statuses: null,\r\n          search: searchText ? searchText : null,\r\n          inquiry_mode: selectedInquiryModeFilter || null,\r\n          status: selectedStatusFilter || null,\r\n        },\r\n      )\r\n      .then((response) => {\r\n        let res = response.data.data.data;\r\n        // console.log(res);\r\n\r\n        let fdata = res.map((elem, ind) => {\r\n          return {\r\n            ...elem,\r\n            sr_no: ind+1,\r\n            key: elem.id,\r\n            id: elem.id,\r\n            customer_name: elem.customer_name || elem.tc_customer_id,\r\n            email: elem.email || '-',\r\n            mobile: elem.mobile || '-',\r\n            dateOfInquiry: moment(elem.created_at).format(\"DD-MM-YYYY\"),\r\n            status: elem.status,\r\n          };\r\n        });\r\n        setAllInquiries(fdata);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  \r\n  return (\r\n    <div className='mt-3'>\r\n      {/* <Table rowSelection={rowSelection} columns={columns} dataSource={data} className=\"w-100\"/> */}\r\n      <Table columns={columns} dataSource={allInquiries} className=\"w-100\"/>\r\n\r\n      <Modal\r\n        visible={openStatusModal}\r\n        centered\r\n        maskClosable\r\n        onCancel={() => {setOpenStatusModal(false);}}\r\n        title={'Inquiry Status'}\r\n        footer={[\r\n            <Button key={'submit'} style={{ color: '#F5F5F5' }} type=\"primary\" className='font-weight-bold' onClick={handleStatusOk}>Save</Button>,\r\n            <Button key={'cancel'} style={{ color: '#000B23' }} onClick={handleStatusCancel} className='font-weight-bold'>Cancel</Button>,\r\n        ]}\r\n        >   \r\n        <div>\r\n            <Radio.Group\r\n                size=\"small\" \r\n                onChange={(e) => setStatus(e.target.value)}\r\n                defaultValue={\"Open\"}\r\n            >\r\n                <Radio value=\"Open\" defaultChecked> Open </Radio>\r\n                <Radio value=\"Close\"> Close</Radio>\r\n            </Radio.Group>\r\n        </div>\r\n\r\n        <div>\r\n            <h4 className=\"mb-2 mt-4\">Remarks</h4>\r\n            <TextArea rows={4} onChange={(e) => setRemark(e.target.value)} value={remark} />\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InquiryListTable","import React , {useState, useEffect} from \"react\";\r\n\r\nimport { Button, Drawer, Select } from \"antd\";\r\nimport Icon from \"@ant-design/icons\"\r\n\r\nimport SearchBox from \"components/shared-components/SearchBox\";\r\nimport Filter from \"components/shared-components/Filter\";\r\nimport PageHeading from \"components/shared-components/PageHeading/PageHeading\";\r\nimport Export from \"./Export-InquiryManagement\";\r\nimport Modal from \"components/UI/Modal\";\r\nimport InquiryListTable from \"./InquiryListTable\";\r\nimport { Link , useRouteMatch  } from \"react-router-dom\";\r\nimport { PlusIcon } from \"assets/svg/icon\";\r\nimport { InquiryManagementPageIcon , FilterIcon , ExportIcon} from \"assets/svg/icon\";\r\nimport axios from \"axios\";\r\nimport exportIcon from \"assets/svg/exportIcon.svg\";\r\nimport { CSVLink } from \"react-csv\";\r\nimport moment from \"moment\";\r\n\r\nconst InquiryList = () => {\r\n\r\n  const [showExportOption, setShowExportOption] = useState(false);\r\n  const [searchText, setSearchText] = useState('');\r\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n  const [selectedCustomerFilter , setSelectedCustomerFilter] = useState(false);\r\n  const [selectedInquiryModeFilter , setSelectedInquiryModeFilter] = useState(false);\r\n  const [selectedStatusFilter , setSelectedStatusFilter] = useState(false);\r\n  const [selectedFilter , setSelectedFilter] = useState(false);\r\n  const [allJobsites , setAllJobsites] = useState(false);\r\n  const [allCustomers , setAllCustomers] = useState(false);\r\n  const customer_id = localStorage.getItem(\"customer_id\");\r\n\r\n  const [allInquiries , setAllInquiries] = useState([]);\r\n  const headers = [\r\n    { label: \"Sr. No\", key: \"sr_no\" },\r\n    { label: \"Inquiry ID\", key: \"id\" },\r\n    { label: \"Customer Name\", key: \"customer_name\" },\r\n    { label: \"Email Id\", key: \"email\" },\r\n    { label: \"Mobile Number\", key: \"mobile\" },\r\n    { label: \"Inquiry Date\", key: \"inquiry_date\" },\r\n    { label: \"Inquiry Channel\", key: \"inquiry_channel\" },\r\n    { label: \"Status\", key: \"status\" }\r\n  ];\r\n  \r\n\r\n  const exportHandler = () => {\r\n    setShowExportOption((prev) => !prev);\r\n  };\r\n\r\n  const exportModal = (\r\n    <Modal onclose={exportHandler}>\r\n      <Export onClose={exportHandler} />\r\n    </Modal>\r\n  );\r\n  \r\n  const drawerHandler = () => {\r\n    setDrawerIsOpen((prevState) => !prevState);\r\n  };\r\n\r\n  const handleDrawerOk = () => {\r\n    setSelectedFilter((previousState) => !previousState)\r\n    setDrawerIsOpen(false);\r\n  };\r\n\r\n  const handleDrawerReset = () => {\r\n    setSelectedFilter((previousState) => !previousState)\r\n    setSelectedInquiryModeFilter(false)\r\n    setSelectedStatusFilter(false)\r\n\r\n    setDrawerIsOpen(false);\r\n  };\r\n\r\n  const onDrawerClose = () => {\r\n    console.log(\"Closed\")\r\n    setDrawerIsOpen(false);\r\n  };\r\n\r\n  const getAllInquiries = () => {\r\n    axios\r\n    .post(\r\n      \"/api/tc/get-inquiries\",\r\n      {\r\n        page_index: 1,\r\n        page_size: 100000,\r\n        search : null,\r\n        customer_id: customer_id\r\n      },\r\n    )\r\n    .then((response) => {\r\n      let res = response.data.data.data;\r\n\r\n      let fdata = res.map((elem, index) => {\r\n        return {\r\n          ...elem,\r\n            sr_no: index+1,\r\n            key: elem.id,\r\n            id: elem.id,\r\n            customer_name: elem.customer_name || elem.tc_customer_id,\r\n            email: elem.email || '-',\r\n            mobile: elem.mobile || '-',\r\n            dateOfInquiry: moment(elem.created_at).format(\"DD-MM-YYYY\"),\r\n            status: elem.status,\r\n        };\r\n      });\r\n\r\n      setAllInquiries(fdata);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAllInquiries();\r\n  }, [])\r\n  \r\n\r\n\r\n  return (\r\n    <>\r\n      {showExportOption && exportModal}\r\n      <div className=\"d-flex justify-content-between align-items-center\">\r\n        <PageHeading\r\n          // icon={InquiryManagementPageIcon}\r\n          // svg={InquiryManagementPageIcon}\r\n          title=\"Inquiry List\"\r\n        />\r\n        <div className=\" d-flex align-items-center justify-content-end\">\r\n          <SearchBox setSearchText={setSearchText} />\r\n\r\n          <Button className=\"d-flex align-items-center ml-2\" onClick={drawerHandler}>\r\n            <Icon className=\"mr-2\" component={FilterIcon} />\r\n              Filters\r\n          </Button>\r\n          \r\n          <CSVLink data={allInquiries} \r\n              headers={headers} \r\n              filename={\"All-Inquiries.csv\"}\r\n            >\r\n              <Button className=\"d-flex align-items-center ml-2\" >\r\n                <img className=\"mr-2\" src={exportIcon} alt=\"exportIcon\"></img>Export\r\n              </Button>\r\n          </CSVLink>\r\n\r\n          <Link to=\"/app/inquiry-management/add-new-inquiry\">\r\n              <Button\r\n                className=\"ml-2 d-flex align-items-center\"\r\n                type=\"primary\"\r\n                size=\"medium\"\r\n              >\r\n                <Icon component={PlusIcon}/>\r\n                Add New Inquiry\r\n              </Button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n\r\n      <InquiryListTable allInquiries={allInquiries} setAllInquiries={setAllInquiries}\r\n      selectedInquiryModeFilter={selectedInquiryModeFilter} \r\n      selectedStatusFilter={selectedStatusFilter} \r\n      selectedFilter={selectedFilter} />\r\n\r\n      <Drawer title=\"Filter\"\r\n          placement=\"right\"\r\n          onClose={onDrawerClose} \r\n          open={drawerIsOpen}\r\n          closable={true}\r\n          // getContainer={false}\r\n          visible={drawerIsOpen}\r\n          footer={[\r\n            <Button key={'submit'} style={{ color: '#F5F5F5' }} type=\"primary\" className='font-weight-bold mr-2' onClick={handleDrawerOk}>Apply</Button>,\r\n            <Button key={'cancel'} style={{ color: '#000B23' }} onClick={() => {handleDrawerReset()}} className='font-weight-bold'>Reset</Button>,\r\n          ]}\r\n        >\r\n          {/* <div>\r\n            <h4>Inquiry Channel</h4>\r\n            <Select\r\n                showSearch\r\n                placeholder=\"Status\"\r\n                value={selectedStatusFilter}\r\n                onChange={(e) => {setSelectedStatusFilter(e)}}\r\n                className=\"w-100\"\r\n            >\r\n                <Select.Option title={'Whatsapp'} key={'Whatsapp'} value={'Whatsapp'}>{'Whatsapp'}</Select.Option>\r\n                <Select.Option title={'Email'} key={'Email'} value={'Email'}>{'Email'}</Select.Option>\r\n                <Select.Option title={'Web App'} key={'Web App'} value={'Web App'}>{'Web App'}</Select.Option>\r\n            </Select>\r\n          </div> */}\r\n          <div>\r\n            <h4>Status</h4>\r\n            <Select\r\n                showSearch\r\n                placeholder=\"Status\"\r\n                value={selectedStatusFilter}\r\n                onChange={(e) => {setSelectedStatusFilter(e)}}\r\n                className=\"w-100\"\r\n            >\r\n                <Select.Option title={'Open'} key={'Open'} value={'Open'}>{'Open'}</Select.Option>\r\n                <Select.Option title={'Quote Sent'} key={'Quote Sent'} value={'Quote Sent'}>{'Quote Sent'}</Select.Option>\r\n                <Select.Option title={'Quote Accepted'} key={'Quote Accepted'} value={'Quote Accepted'}>{'Quote Accepted'}</Select.Option>\r\n                <Select.Option title={'Closed'} key={'Closed'} value={'Closed'}>{'Closed'}</Select.Option>\r\n            </Select>\r\n          </div>\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InquiryList;\r\n","import React from \"react\";\r\n\r\nimport { Badge, List, Typography } from \"antd\";\r\nimport Icon from \"@ant-design/icons\";\r\n\r\nimport {\r\n  AssignedIcon,\r\n  ClosedIcon,\r\n  EmailIcon,\r\n  InboxIcon,\r\n  UnassignedIcon,\r\n  WhatsappIcon,\r\n} from \"./svgIcons\";\r\n\r\nconst { Title } = Typography;\r\n\r\nconst data = [\r\n  { icon: InboxIcon, text: \"All\", badgeNumber: 25 },\r\n  { icon: AssignedIcon, text: \"Assigned\", badgeNumber: 5 },\r\n  { icon: UnassignedIcon, text: \"Unassigned\", badgeNumber: 5 },\r\n  { icon: WhatsappIcon, text: \"Whatsapp\", badgeNumber: 5 },\r\n  { icon: EmailIcon, text: \"Email\", badgeNumber: 5 },\r\n  { icon: ClosedIcon, text: \"Closed\", badgeNumber: 5 },\r\n];\r\n\r\nconst AllInbox = () => {\r\n  return (\r\n    <>\r\n      <List\r\n        header={<Title level={3}>All Inbox</Title>}\r\n        dataSource={data}\r\n        renderItem={(item) => (\r\n          <List.Item>\r\n            <div className=\"d-flex justify-content-between w-100 align-items-center\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <Icon component={item.icon} className=\"mr-3\" />\r\n                {item.text}\r\n              </div>\r\n              <Badge count={item.badgeNumber} style={{background: \"#0099A8\"}} />\r\n            </div>\r\n          </List.Item>\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AllInbox;\r\n","// This icon file is generated automatically.\nvar SendOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"defs\", \"attrs\": {}, \"children\": [{ \"tag\": \"style\", \"attrs\": {} }] }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M931.4 498.9L94.9 79.5c-3.4-1.7-7.3-2.1-11-1.2a15.99 15.99 0 00-11.7 19.3l86.2 352.2c1.3 5.3 5.2 9.6 10.4 11.3l147.7 50.7-147.6 50.7c-5.2 1.8-9.1 6-10.3 11.3L72.2 926.5c-.9 3.7-.5 7.6 1.2 10.9 3.9 7.9 13.5 11.1 21.5 7.2l836.5-417c3.1-1.5 5.6-4.1 7.2-7.1 3.9-8 .7-17.6-7.2-21.6zM170.8 826.3l50.3-205.6 295.2-101.3c2.3-.8 4.2-2.6 5-5 1.4-4.2-.8-8.7-5-10.2L221.1 403 171 198.2l628 314.9-628.2 313.2z\" } }] }, \"name\": \"send\", \"theme\": \"outlined\" };\nexport default SendOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport SendOutlinedSvg from \"@ant-design/icons-svg/es/asn/SendOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar SendOutlined = function SendOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: SendOutlinedSvg\n  }));\n};\nSendOutlined.displayName = 'SendOutlined';\nexport default /*#__PURE__*/React.forwardRef(SendOutlined);","import React, { useState, useEffect } from \"react\";\r\nimport { Divider, Typography, Form, Input, Button } from \"antd\";\r\nimport Icon, { SendOutlined } from \"@ant-design/icons\";\r\nimport { SendIcon } from \"assets/svg/icon\";\r\nimport Actions from \"./Actions\";\r\nimport ProfilePic from \"assets/PrimaryAccount.png\";\r\nimport GrePic from \"assets/grand-energy-logo-small.png\";\r\n// Import statements\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport \"./Bottom.css\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nconst ChatingSection = ({ selectedChat }) => {\r\n  const [chatId, setChatId] = useState(\"\");\r\n  const [messageInput, setMessageInput] = useState(\"\");\r\n  const [allGreAdmins, setAllGreAdmins] = useState([]);\r\n  const [chatMessages, setChatMessages] = useState([]);\r\n  const [greData, setGreData] = useState({});\r\n  const [count, setCount] = useState(0);\r\n  const [timeoutId, setTimeoutId] = useState(null);\r\n  const customer_id = localStorage.getItem(\"customer_id\");\r\n  const customer_name = localStorage.getItem(\"customer_name\");\r\n  const associate_name = localStorage.getItem(\"name\");\r\n  const user_id = localStorage.getItem(\"user_id\");\r\n\r\n  const getGreData = () => {\r\n    axios({\r\n      method: 'post',\r\n      url: \"/api/tc/get-contact-details\",\r\n      data: {},\r\n      // headers: {\r\n      //     Authorization: `Bearer ${tok}`\r\n      // },\r\n    }).then(function (response) {\r\n        console.log(response.data);\r\n            \r\n        let res = response.data.data\r\n        setGreData(res);\r\n    }).catch(function (error) {\r\n        console.log(error);\r\n    });\r\n  }\r\n\r\n  const sendMessage = () => {\r\n    if(messageInput.trim().length >= 1) {\r\n      axios({\r\n        method: 'post',\r\n        url: \"/api/chat/send-message\",\r\n        data: {\r\n          chat_id: chatId,\r\n          chat_message: messageInput,\r\n          chat_message_type: 'group',\r\n        },\r\n      }).then(function (response) {\r\n        // const newMessage = {\r\n        //   chat_message: messageInput,\r\n        //   user_id: user_id,\r\n        //   messenger_name: \"You\",\r\n        //   created_at: new Date().toISOString(),\r\n        // };\r\n        // setChatMessages((prev) => [newMessage, ...prev]);\r\n\r\n        setMessageInput(\"\");\r\n        getChatMessages(chatId);\r\n      }).catch(function (error) {\r\n          console.log(error);\r\n      });\r\n    }\r\n  }\r\n\r\n  const getChatMessages = (id) => {\r\n    axios\r\n    .post(\r\n        \"/api/chat/get-chat-messages\",\r\n        {\r\n          chat_id: id\r\n        },\r\n      )\r\n      .then((response) => {\r\n        let res = response.data;\r\n        // console.log(res);\r\n        setChatMessages(res.messages.data.reverse())\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const getAllAdmins = () => {\r\n    axios\r\n    .post(\r\n        '/api/hrms/all-users',\r\n        {\r\n          page_index: 1,\r\n          page_size: 100000,\r\n        },\r\n      )\r\n      .then((response) => {\r\n        let res = response.data;\r\n        let users = res.all_users.data\r\n        console.log(res.all_users.data);\r\n        console.log(res);\r\n        let ids = []\r\n        for(let item of users) {\r\n          let access = JSON.parse(item.can_access)\r\n          if(access.ops_admin\r\n            // && access.support_system\r\n          ) {\r\n            console.log(item)\r\n            ids.push(item.id)\r\n          }\r\n        }\r\n        setAllGreAdmins(ids);\r\n        createOrGetChat();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const createOrGetChat = () => {\r\n    axios\r\n    .post(\r\n        \"/api/chat/create-or-get-chat\",\r\n        {\r\n          user_ids: [+user_id, 16, ...allGreAdmins],\r\n          chat_name: customer_name+' - '+associate_name,\r\n          chat_type: \"group\",\r\n          chat_module: \"inquiry\",\r\n        },\r\n      )\r\n      .then((response) => {\r\n        let res = response.data;\r\n        console.log(res);\r\n        getChatMessages(res.chat_id);\r\n        if(res.chat_id) setChatId(res.chat_id)\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const getDateTime = (date) => {\r\n    let message_date = moment(date).format(\"D-MM-YY\");\r\n    let message_time = moment(date).format(\"hh:mm A\");\r\n    if(moment(date) == moment(new Date())) {\r\n      message_date = 'Today'\r\n    }\r\n    // return message_date + ' ' + message_time\r\n    return message_time\r\n  }\r\n\r\n  useEffect(() => {\r\n    getGreData();\r\n    getAllAdmins();\r\n    // createOrGetChat();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let timeout_id = setTimeout(() => {\r\n      if(chatId) getChatMessages(chatId);\r\n      setCount(count => count+1)\r\n    }, 10000);\r\n    setTimeoutId(timeout_id);\r\n\r\n    return () => {\r\n      // This is the cleanup function\r\n      // It will be called when the component is unmounted\r\n      clearTimeout(timeoutId)\r\n    };\r\n  }, [count]);\r\n\r\n  return (\r\n    <div style={{ height: '100%', display: 'flex', width: \"100%\", flexDirection: 'column' }}>\r\n      {/* Header with user info and actions */}\r\n      <div style={{ padding: '16px 20px' }}>\r\n        <div className=\"d-flex justify-content-between\">\r\n          <div className=\"d-flex\">\r\n            <div style={{ width: \"5rem\" }} className=\"mr-3\">\r\n              <img\r\n                style={{\r\n                  width: \"100%\",\r\n                  objectFit: \"cover\",\r\n                  padding: '6px 5px'\r\n                  // borderRadius: \"50%\",\r\n                  // backgroundColor: '#d6d6d6',\r\n                }}\r\n                src={GrePic}\r\n                alt=\"Profile\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <Title level={4} style={{ margin: 0 }}>Grand Energy Technologies</Title>\r\n              <Text>{greData.mobile}</Text>\r\n            </div>\r\n          </div>\r\n          {/* <Actions /> */}\r\n        </div>\r\n      </div>\r\n      <Divider style={{ margin: '0 0 10px 0' }} />\r\n\r\n      {/* Chat body - message area */}\r\n      <div className=\"chat-body-container\" style={{\r\n        flexGrow: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        overflow: 'hidden'\r\n      }}>\r\n        <div\r\n          id=\"scrollableDiv\"\r\n          className=\"chatBody\"\r\n          style={{\r\n            height: 'auto',\r\n            flexGrow: 1,\r\n            padding: '10px 20px 20px 20px',\r\n            display: 'flex',\r\n            flexDirection: 'column-reverse',\r\n            overflowY: 'auto',\r\n          }}\r\n        >\r\n          <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n            {chatMessages.map((message, index) => {\r\n              const myMsg = message.user_id === +user_id;\r\n              console.log(user_id);\r\n\r\n              return (\r\n                <div\r\n                  key={index}\r\n                  className={`BottomRightMsgContainer ${myMsg ? \"myMsg\" : \"\"}`}\r\n                  style={{\r\n                    margin: '8px 0',\r\n                  }}\r\n                >\r\n                  <div\r\n                    className={`d-flex flex-column justify-content-end ${myMsg ? \"align-items-end\" : \"align-items-start\"\r\n                      }`}\r\n                    style={{ width: '100%' }}\r\n                  >\r\n                    <div style={{ fontSize: '10px', marginBottom: '2px' }}>\r\n                      {message.user_id === +user_id ? \"You\" : message.name}\r\n                    </div>\r\n                    <div className={`BottomRightMsg ${myMsg ? \"myMsg\" : \"\"}`}>\r\n                      {message.chat_message}\r\n                    </div>\r\n                    <div className={`BottomRightTime ${myMsg ? \"myMsg\" : \"\"}`}>\r\n                      {message.created_at\r\n                        ? getDateTime(message.created_at)\r\n                        : \"\"}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Message input area */}\r\n        <div style={{ padding: '15px 20px', borderTop: '1px solid #f0f0f0' }}>\r\n          <Form>\r\n            <div style={{\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n              gap:\"10px\"\r\n            }}>\r\n              <div style={{\r\n                flexGrow: 1,\r\n              }}>\r\n                <TextArea\r\n                  rows={1}\r\n                  style={{\r\n                    borderRadius: '8px',\r\n                    resize: 'none',\r\n                    padding: '8px 12px'\r\n                  }}\r\n                  placeholder=\"Type a message...\"\r\n                  value={messageInput}\r\n                  onChange={(e) => setMessageInput(e.target.value)}\r\n                  onKeyPress={(e) => {\r\n                    if (e.key === \"Enter\" && !e.shiftKey) {\r\n                      e.preventDefault();\r\n                      sendMessage();\r\n                    }\r\n                  }}\r\n                />\r\n              </div>\r\n              <div\r\n                style={{\r\n                  display: 'flex',\r\n                  justifyContent: 'flex-end',\r\n                  alignItems: 'center',\r\n                  // marginTop: '8px',\r\n                  height: '100%'\r\n                }}\r\n              >\r\n                <Button\r\n                  onClick={sendMessage}\r\n                  disabled={messageInput.trim().length < 1}\r\n                  type=\"primary\"\r\n                >\r\n                  <SendOutlined />\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatingSection;\r\n\r\n// import React from \"react\";\r\n// import { Typography } from \"antd\";\r\n// import Actions from \"./Actions\";\r\n// import ProfilePic from \"assets/PrimaryAccount.png\";\r\n// const { Title, Text } = Typography;\r\n\r\n// const ChatingSection = () => {\r\n//   return (\r\n//     <div className=\"d-flex justify-content-between\">\r\n//       <div className=\"d-flex\">\r\n//         <div style={{ width: \"4rem\" }} className=\"mr-3\">\r\n//           <img style={{ width: \"100%\" }} src={ProfilePic} />\r\n//         </div>\r\n//         <div>\r\n//           <Title strong level={4}>Johm Smith</Title>\r\n//           <Text>+65 123456789</Text>\r\n//         </div>\r\n//       </div>\r\n//       <Actions  />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ChatingSection;\r\n","import React from 'react'\r\n\r\nimport { Card } from 'antd'\r\nimport PageHeading from 'components/shared-components/PageHeading/PageHeading'\r\nimport AllInbox from './AllInbox'\r\nimport ChatingSection from './ChatingSection'\r\nimport { InquiryManagementPageIcon } from 'assets/svg/icon'\r\nimport Inquiries from './Inquiries'\r\n\r\nconst InquiryChats = () => {\r\n  return (\r\n    <>\r\n      <div>\r\n        <PageHeading\r\n          // icon={InquiryManagementPageIcon}\r\n          // svg={InquiryManagementPageIcon}\r\n          title=\"Inquiry Management / Chats\"\r\n        />\r\n      </div>\r\n\r\n      <Card >\r\n      <div style={{ display: 'flex', height: '500px' }}>\r\n        <Card.Grid style={{width: \"100%\"}}>\r\n          <ChatingSection/>\r\n        </Card.Grid>\r\n      </div>\r\n      </Card>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default InquiryChats","import React from \"react\";\r\n\r\nimport { Typography, Button, List, Badge } from \"antd\";\r\nimport Icon from \"@ant-design/icons\";\r\n\r\nimport { FilterIcon, SearchIcon, WhatsappIcon } from \"assets/svg/icon\";\r\nimport ProfilePic from \"assets/PrimaryAccount.png\";\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nconst data = [\"item1\", \"item2\", \"item3\"];\r\n\r\nconst Inquiries = () => {\r\n  const header = (\r\n    <div className=\"d-flex justify-content-between\">\r\n      <Title level={3}>Inquiries</Title>\r\n      <div className=\"d-flex\">\r\n        <Button>\r\n          <Icon component={SearchIcon} />\r\n        </Button>\r\n        <Button>\r\n          <Icon component={FilterIcon} />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n  return (\r\n    <List\r\n      header={header}\r\n      dataSource={data}\r\n      renderItem={(item) => (\r\n        <List.Item>\r\n          <div className=\"d-flex justify-content-between w-100\">\r\n            <div className=\"d-flex\">\r\n              <div style={{width: \"4rem\"}} className=\"mr-4\">\r\n              <img style={{maxWidth: \"100%\"}} src={ProfilePic}></img>\r\n              </div>\r\n              \r\n              <div>\r\n                <Title strong level={4}>Johm Smith</Title>\r\n                <Text  type=\"secondary\">Okay , thank you so much</Text>\r\n                <br />\r\n                <br />\r\n                \r\n                \r\n                <Text strong  >#123 General Inquiry</Text>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <Title strong secondry level={5}>15 min ago</Title>\r\n              <div className=\"d-flex align-items-center justify-content-around\">\r\n                <Badge count={1} style={{ background: \"#0099A8\" }} />\r\n                <Icon component={WhatsappIcon} />\r\n              </div>\r\n              <br />\r\n              \r\n              <Title strong level={4} style={{ color: \"#00AB6F\" }}>Assigned</Title>\r\n            </div>\r\n          </div>\r\n        </List.Item>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Inquiries;\r\n","import React , {useState,useEffect} from \"react\";\r\nimport { Form, Button, Col, Row, Card, Input, Select, message, DatePicker } from \"antd\";\r\nimport PageHeading from \"components/shared-components/PageHeading/PageHeading\";\r\nimport Modal from \"components/UI/Modal\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { useLocation, useHistory, useParams } from 'react-router-dom';\r\n\r\nconst { RangePicker } = DatePicker;\r\nconst { TextArea } = Input;\r\n\r\nconst AddNewInquiry = (props) => {\r\n    const [form] = Form.useForm();\r\n    const params = useParams();\r\n    // const [value, setValue] = useState('');\r\n    const [selectedAssociateType , setSelectedAssociateType] = useState([]);\r\n    const [jobsData , setJobsData] = useState([]);\r\n    const [jobFile , setJobFile] = useState({\r\n        name: '',\r\n        url: ''\r\n    });\r\n    const [gstData, setGstData] = useState([]);\r\n    const [customerAccountData, setCustomerAccountData] = useState([]);\r\n    const history = useHistory();\r\n    const customer_id = localStorage.getItem(\"customer_id\")\r\n       \r\n    const [showModal , setShowModal] = useState(false);\r\n    \r\n    const saveQuotationHandler = () => {\r\n        setShowModal(prev => !prev);\r\n    }\r\n    \r\n    const finishHandler = (e) => {\r\n        console.log(e)\r\n        // console.log(e.status)\r\n        // if(!jobFile || !jobFile.url) {\r\n        //   message.error(\"Please Upload attachment file first\");\r\n        //   return\r\n        // }\r\n    \r\n        if (props.id) {\r\n          axios\r\n            .post(\r\n              \"/api/tc/update-inquiry\",\r\n              {\r\n                id: props.id,\r\n                tc_customer_id: customer_id,\r\n                type: e.inquiry_type,\r\n                // name: e.inquiry_name,\r\n                description: e.description || '',\r\n                date: e.date || moment().format('YYYY-MM-DD'),\r\n                comments: e.comments || [],\r\n              },\r\n              {\r\n                headers: {\r\n                  \"content-type\": \"application/json\"\r\n                },\r\n              }\r\n            )\r\n            .then((response) => {\r\n              if(!response.data.success){\r\n                message.warn(response.data.msg)\r\n                return;\r\n              }\r\n              console.log(props.id)\r\n              message.success(\"Inquiry created successfully\")\r\n              history.goBack()\r\n            })\r\n            .catch((error) => {\r\n              console.log(error);\r\n            });\r\n          return\r\n        } else {\r\n          axios\r\n            .post(\r\n              \"/api/tc/new-inquiry\",\r\n              {\r\n                tc_customer_id: customer_id,\r\n                type: e.inquiry_type,\r\n                // name: e.inquiry_name,\r\n                description: e.description || '',\r\n                date: e.date || moment().format('YYYY-MM-DD'),\r\n                comments: e.comments || [],\r\n              },\r\n              {\r\n                headers: {\r\n                  \"content-type\": \"application/json\"\r\n                },\r\n              }\r\n            )\r\n            .then((response) => {\r\n              if(!response.data.success){\r\n                message.warn(response.data.msg)\r\n                return;\r\n              }\r\n              message.success(\"Inquiry created successfully\")\r\n              history.goBack()\r\n            })\r\n            .catch((error) => {\r\n              console.log(error);\r\n            });\r\n        }\r\n      };\r\n\r\n      const getSubTotalAmount = () => {\r\n        let amount = 0;\r\n        if(jobsData.length > 0) {\r\n          for(let i=0; i<jobsData.length; i++) {\r\n            amount += jobsData[i].total;\r\n          }\r\n        }\r\n        return amount\r\n      }\r\n    \r\n      const getTotalAmount = (gst_percentage) => {\r\n        let amount = 0;\r\n        if(jobsData.length > 0) {\r\n          for(let i=0; i<jobsData.length; i++) {\r\n            amount += jobsData[i].total;\r\n          }\r\n        }\r\n        if(amount) {\r\n          amount = amount + ((+gst_percentage/100)*amount);\r\n        }\r\n        return amount\r\n      }\r\n    \r\n      const getAllGst = ()=> {\r\n        axios({\r\n            method: 'post',\r\n            url: \"/api/tc/get-all-gsts\",\r\n            data: {},\r\n        }).then(function (response) {\r\n            if(response.data.success) {\r\n                console.log(response.data.data)\r\n                let res = response.data.data.data;\r\n                let fdata = res.map((elem, ind) => {\r\n                  return {\r\n                      key: elem.id,\r\n                      id: elem.id,\r\n                      srNo: ind+1,\r\n                      percentage: elem.percentage,\r\n                      description: elem.description,\r\n                      created_at: moment(elem.created_at).format(\"DD-MM-YYYY\"),\r\n                      updated_at: moment(elem.updated_at).format(\"DD-MM-YYYY\"),\r\n                  };\r\n                });\r\n                setGstData(fdata);\r\n                // console.log(fdata);\r\n    \r\n                // form.setFieldsValue ({\r\n                //   ...form.getFieldsValue(),\r\n                //   gst: res[res.length - 1].percentage || 8\r\n                // })\r\n            }\r\n        }).catch(function (error) {\r\n            console.log(error);\r\n        });\r\n      };\r\n\r\n      const getInquiry = () => {\r\n\r\n      }\r\n\r\n      useEffect(() => {\r\n        axios\r\n          .post(\r\n            \"/api/tc/get-customers\",\r\n            {\r\n              page_index: 1,\r\n              page_size: 100000,\r\n              // statuses: [\"ACTIVE\", \"INACTIVE\", \"PENDING APPROVAL\"],\r\n              searchText : null,\r\n            }\r\n          )\r\n          .then((response) => {\r\n            let res = response.data.data.data;\r\n            console.log(res);\r\n    \r\n            let fdata = res.map((elem, ind) => {\r\n              return {\r\n                key: ind,\r\n                id: elem.id,\r\n                company: elem.name,\r\n                phoneNumber: elem.phone,\r\n                emailId: elem.email\r\n              };\r\n            });\r\n    \r\n            setCustomerAccountData(customerAccountData.concat(fdata));\r\n            console.log(customerAccountData)\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n    \r\n          getAllGst();\r\n          if(params.id) {\r\n            getInquiry();\r\n          } else {\r\n            form.setFieldsValue({\r\n              inquiry_date: moment()\r\n            })\r\n          }\r\n      }, []);\r\n    \r\n      const clearForm = () => {\r\n        form.resetFields();\r\n        setJobsData([]);\r\n        setJobFile(({\r\n          name: '',\r\n          url: ''\r\n        }));\r\n      }\r\n    \r\n  return (\r\n    <React.Fragment>\r\n      <PageHeading title=\"Create New Inquiry\" />\r\n\r\n      <Form\r\n        form={form}\r\n        labelCol={{\r\n          span: 10,\r\n        }}\r\n        wrapperCol={{\r\n          span: 18,\r\n        }}\r\n        layout=\"vertical\"\r\n        onFinish={finishHandler}\r\n      >\r\n        <Card className=\"mt-2\">\r\n          <div className=\"d-flex justify-content-end\" style={{ color: \"red\" }}>\r\n            <div>* Indicates Mandatory Fields</div>\r\n          </div>\r\n\r\n          <Row align=\"top\">\r\n            <Col span={12}>\r\n              <Form.Item name=\"inquiry_date\" label=\"Inquiry Date\" rules={[{ required: true, message: \"Required\" }]}>\r\n                <DatePicker disabled />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item name=\"inquiry_type\" label=\"Inquiry Type\" rules={[{ required: true, message: \"Required\" }]}>\r\n                <Select showSearch value={selectedAssociateType} onChange={setSelectedAssociateType}>\r\n                  <Select.Option key=\"General Inquiry\" value=\"General Inquiry\"></Select.Option>\r\n                  <Select.Option key=\"Service Inquiry\" value=\"Service Inquiry\"></Select.Option>\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n\r\n          {/* <Row align=\"top\">\r\n            <Col span={12}>\r\n              <Form.Item name=\"inquiry_name\" label=\"Name\">\r\n                <Input />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row> */}\r\n\r\n          <Row align=\"top\">\r\n            <Col span={24}>\r\n              <Form.Item name=\"description\" label=\"Description\">\r\n                <TextArea rows={3}/>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Card>\r\n\r\n        <div className=\"w-100 d-flex justify-content-end actions\">\r\n          <Form.Item className=\"w-100\">\r\n            <Button\r\n              onClick={() => {\r\n                history.goBack();\r\n              }}\r\n            >\r\n              Back\r\n            </Button>\r\n            <Button\r\n              onClick={() => {\r\n                clearForm();\r\n              }}\r\n            >\r\n              Clear All\r\n            </Button>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Save\r\n            </Button>\r\n          </Form.Item>\r\n        </div>\r\n      </Form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default AddNewInquiry","import { Card } from 'antd'\r\nimport moment from 'moment'\r\nimport React from 'react'\r\n\r\nfunction CommentsReplyContainer({ index, editedLogs, remarksReply, setRemarksReply, id }) {\r\n\r\n    return (\r\n        <div style={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            marginLeft: '20px'\r\n        }}> {\r\n                remarksReply[index] ? <>{editedLogs.map((item, index) => {\r\n                    return (\r\n                        <>\r\n                            <div style={{\r\n                                display: \"flex\",\r\n                                alignItems: \"center\",\r\n                                gap: \"10px\"\r\n                            }}>\r\n                                <div style={{\r\n                                    fontSize: '16px',\r\n                                    fontWeight: 500,\r\n                                    color: 'black'\r\n                                }}>{item.user?.name}</div>\r\n                                <div style={{\r\n                                    fontSize: '12px',\r\n                                    color: 'gray'\r\n                                }}>{moment(item.createdAt).format('DD MMM YYYY hh:mm a')}</div>\r\n                            </div>\r\n                            <div className='ml-2'>{item.comment}</div>\r\n                        </>\r\n                    )\r\n                })\r\n                }</> : <></>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommentsReplyContainer\r\n\r\n","import React, { useEffect } from 'react'\r\nimport { DownOutlined, UpOutlined } from '@ant-design/icons'\r\n\r\nfunction CommentsReplyLabel({ index, editedLogs, labelRemarksReply, setLabelRemarksReply, id }) {\r\n\r\n    return (\r\n        <>\r\n            <div style={{\r\n                cursor: 'pointer',\r\n            }}>\r\n                {\r\n                    labelRemarksReply[index] ?\r\n                        <div onClick={() => {\r\n                            setLabelRemarksReply((prevState) => {\r\n                                prevState[index] = false;\r\n                                return [...prevState]\r\n                            })\r\n                        }} ><UpOutlined /> </div> : <div onClick={() => {\r\n                            setLabelRemarksReply((prevState) => {\r\n                                prevState[index] = true;\r\n                                return [...prevState]\r\n                            })\r\n                        }} > <DownOutlined /></div>\r\n                }\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CommentsReplyLabel","import { Button, Card, Divider, Empty, Input, message } from 'antd'\r\nimport axios from 'axios'\r\nimport moment from 'moment'\r\nimport React, { useEffect, useState } from 'react'\r\nimport CommentsReplyContainer from './CommentsReplyContainer'\r\nimport CommentsReplyLabel from './CommentsReplyLabel'\r\n\r\nfunction CommentsLabel({ id, remarksArray, getRemarks, hide, remarksModal, setRemarksModal, labelRemarksReply, setLabelRemarksReply, remarksReplying, setRemarksReplying }) {\r\n\r\n\r\n    return (\r\n        <div style={{\r\n            width: '100%',\r\n        }}>\r\n\r\n            <Card>\r\n                <div style={{\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    gap: '17px',\r\n                    width: '100%'\r\n                }}>\r\n                    {\r\n                        remarksArray.length != 0 ? remarksArray.map((item, index) => {\r\n                            return (\r\n                                <div key={index} style={{\r\n                                    backgroundColor: labelRemarksReply[index] ? '#F7F7F7' : 'white',\r\n                                    padding: '10px',\r\n                                    borderRadius: '10px',\r\n                                }}>\r\n                                    <div style={{\r\n                                        display: \"flex\",\r\n                                        alignItems: \"center\",\r\n                                        gap: \"10px\"\r\n                                    }}>\r\n                                        <div style={{\r\n                                            fontSize: '16px',\r\n                                            fontWeight: 500,\r\n                                            color: 'black'\r\n                                        }}>{item.user?.name}</div>\r\n                                        <div style={{\r\n                                            fontSize: '12px',\r\n                                            color: 'gray'\r\n                                        }}>{moment(item.createdAt).format('DD MMM YYYY hh:mm a')}</div>\r\n                                    </div>\r\n                                        \r\n                                    <div className='ml-2'>{item.content}</div>\r\n                                    \r\n                                    <div style={{\r\n                                        display: 'flex',\r\n                                        gap: '10px',\r\n                                        color: 'gray',\r\n                                        alignItems: 'center'\r\n                                    }}>\r\n                                        <div \r\n                                        onClick={() => {\r\n                                            setRemarksReplying(item.id)\r\n                                            setRemarksModal(true);\r\n                                        }}\r\n                                        style={{\r\n                                            textDecoration: 'underline',\r\n                                            color: '#2EA3F2',\r\n                                            fontWeight: 700,\r\n                                            cursor: 'pointer'\r\n                                        }}\r\n                                        className='ml-2'\r\n                                        >\r\n                                            Reply\r\n                                        </div>\r\n                                        <div style={{\r\n                                            width: '8px',\r\n                                            height: '8px',\r\n                                            backgroundColor: '#E7E7E7',\r\n                                            borderRadius: '50%'\r\n                                        }}></div>\r\n                                        <div> {item.editedLogs.length} Replies</div>\r\n                                        <CommentsReplyLabel index={index} editedLogs={item.editedLogs} id={item.id} labelRemarksReply={labelRemarksReply} setLabelRemarksReply={setLabelRemarksReply} />\r\n                                    </div>\r\n                                    <CommentsReplyContainer index={index} editedLogs={item.editedLogs} id={item.id} remarksReply={labelRemarksReply} setRemarksReply={setLabelRemarksReply} />\r\n\r\n                                </div>\r\n                            )\r\n                        }) : <Empty description=\"No Remarks\" />\r\n                    }\r\n                </div>\r\n            </Card>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommentsLabel","import React, { useEffect, useState } from 'react'\r\nimport { Button, Card, Divider, Input, message, Upload } from 'antd'\r\nimport axios from 'axios'\r\nimport moment from 'moment';\r\n// import CommentsReply from './CommentsReply'\r\n// import CommentsReplyContainer from './CommentsReplyContainer'\r\n// import { InboxOutlined, UploadOutlined } from '@ant-design/icons'\r\n// import Dragger from 'antd/lib/upload/Dragger'\r\n\r\nfunction Comments({ id, remarksArray, getRemarks, remarksModal, setRemarksModal, remarksReply, setRemarksReply, remarksReplying, setRemarksReplying,imageUrl,setImageUrl,updateInquiry }) {\r\n    const BASE_URL = '';\r\n    const [remarks, setRemarks] = useState('')\r\n    const [remarksArrayFinal, setRemarksArrayFinal] = useState(remarksArray)\r\n    const customer_id = localStorage.getItem(\"customer_id\");\r\n    const customer_name = localStorage.getItem(\"customer_name\");\r\n\r\n    const handleChange = (info) => {\r\n        console.log(info)\r\n        setImageUrl([info.fileList[info.fileList.length-1]])\r\n    }\r\n\r\n    const handlePreview = (file) => {\r\n        if (file.originFileObj) {\r\n            const fileUrl = URL.createObjectURL(file.originFileObj);\r\n            window.open(fileUrl, '_blank');\r\n        } else {\r\n            window.open(file.url, '_blank');\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n    const postRemarks = async () => {\r\n        if (remarks.trim() === '') {\r\n            message.error('Please enter comment')\r\n            return\r\n        }\r\n      \r\n        // try {\r\n        //     const response = await axiosInstance.post(`/api/web/inquiries/${id}/comments`, {\r\n        //         comment: remarks,\r\n        //         parent_id: remarksReplying,\r\n        //     })\r\n            \r\n        //     setRemarks('')\r\n        //     getRemarks()\r\n        //     message.success('Remarks posted successfully')\r\n        //     setRemarksModal(false) \r\n        // }catch(err){\r\n        //     console.log(err);\r\n        //     message.error('Error while posting remarks')\r\n        // }\r\n\r\n        try {\r\n            setRemarks([\r\n                ...remarks,\r\n                {\r\n                    createdAt: moment().format('D MMM YYYY'),\r\n                    content: remarks,\r\n                    parent_id: remarksReplying,\r\n                    editedLogs: [],\r\n                    user: {\r\n                        id: customer_id,\r\n                        name: customer_name,\r\n                    }\r\n                },\r\n            ])\r\n            \r\n            setRemarks('')\r\n            setRemarksModal(false) \r\n            updateInquiry();\r\n        } catch (err) {\r\n          message.error(\"Error while posting remarks\");\r\n        }\r\n\r\n\r\n   \r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n            <h3>Remarks</h3>\r\n            <Divider />\r\n\r\n            <div>\r\n                <div>Add Remarks</div>\r\n                <Input.TextArea value={remarks} onChange={(e) => {\r\n                    setRemarks(e.target.value)\r\n                }} style={{\r\n                    resize: 'none'\r\n                }} rows={4} />\r\n            </div>\r\n        \r\n            <div style={{\r\n                textAlign: 'right',\r\n                marginTop: '10px'\r\n            }}>\r\n                <Button onClick={() => {\r\n                    postRemarks()\r\n                }} type=\"primary\">Save</Button>\r\n            </div>\r\n\r\n\r\n            \r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comments\r\n\r\n\r\n","import React , {useState,useEffect} from \"react\";\r\nimport { Form, Button, Modal, Col, Row, Card, Input, Select, message, DatePicker } from \"antd\";\r\nimport PageHeading from \"components/shared-components/PageHeading/PageHeading\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { useLocation, useHistory, useParams } from 'react-router-dom';\r\nimport CommentsLabel from \"./TravelerRemarks/CommentsLabel\";\r\nimport Comments from \"./TravelerRemarks/Comments\";\r\n\r\nconst ViewInquiry = () => {\r\n    const [inquiryData, setInquiryData] = useState({});\r\n    const params = useParams();\r\n    const customer_id = localStorage.getItem(\"customer_id\");\r\n    const customer_name = localStorage.getItem(\"customer_name\");\r\n    const [remarks, setRemarks] = useState([\r\n        {\r\n            createdAt: '16 Jan 2022',\r\n            // comment: 'This is a dummy comment',\r\n            content: 'This is a dummy comment',\r\n            parent_id: null,\r\n            editedLogs: [{\r\n                addedByName: 'John Doe',\r\n                createdAt: '16 Jan 2022',\r\n                comment: 'This is a dummy reply',\r\n                user: {\r\n                    id: 2,\r\n                    name: 'Reddot-User',\r\n                }\r\n                \r\n            }],\r\n            user: {\r\n                id: 1,\r\n                name: 'Reddot',\r\n            }\r\n        },\r\n    ]);\r\n    const [remarksReplying, setRemarksReplying] = useState(\"\");\r\n    const [remarksReply, setRemarksReply] = useState([]);\r\n    const [labelRemarksReply, setLabelRemarksReply] = useState([]);\r\n    const [remarksModal, setRemarksModal] = useState(false);\r\n    const [remarkCurrentData, setRemarkCurrentData] = useState(\"\");\r\n\r\n    const getInquiryData = () =>{\r\n        axios\r\n          .post(\r\n            \"/api/tc/get-inquiry\",\r\n            {\r\n              id: params.id,\r\n            }\r\n          )\r\n          .then((response) => {\r\n            let res = response.data.data;\r\n            setInquiryData(res);\r\n            // setRemarks(\r\n            //     res.comments\r\n            //     .filter((item) => !item.parent_id) // Remove undefined results\r\n            //     .map((parentItem) => ({\r\n            //     ...parentItem,\r\n            //     editedLogs: res.comments\r\n            //         .filter((childItem) => childItem.parent_id === parentItem.id)\r\n            //         .map((item) => {\r\n            //         return {\r\n            //             ...item,\r\n            //             content: item.comment,\r\n            //         };\r\n            //         }),\r\n            //     }))\r\n            // )\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n    }\r\n\r\n    const updateInquiry = () => {\r\n        axios\r\n        .post(\r\n            \"/api/tc/update-inquiry\",\r\n            {\r\n                ...inquiryData,\r\n                id: params.id,\r\n                comments: remarks\r\n            }\r\n          )\r\n          .then((response) => {\r\n            // let res = response.data.data;\r\n            if(response.data.success) {\r\n                getInquiryData();\r\n                message.success('Comment posted successfully')\r\n            } else {\r\n                message.error(response.data.message || \"Something went wrong! please try again later\")\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n    }\r\n\r\n    const getComments = async () => {\r\n        try {\r\n          console.log('get comment func')\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n    };\r\n\r\n    const postRemarks = async () => {\r\n        if (remarkCurrentData.trim() === \"\") {\r\n          message.error(\"Please enter comment\");\r\n          return;\r\n        }\r\n    \r\n        try {\r\n            setRemarks([\r\n                ...remarks,\r\n                {\r\n                    createdAt: moment().format('D MMM YYYY'),\r\n                    content: remarkCurrentData,\r\n                    parent_id: null,\r\n                    editedLogs: [],\r\n                    user: {\r\n                        id: customer_id,\r\n                        name: customer_name,\r\n                    }\r\n                },\r\n            ])\r\n            setRemarkCurrentData(\"\");\r\n            updateInquiry();\r\n        } catch (err) {\r\n          message.error(\"Error while posting remarks\");\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n      getInquiryData();\r\n    }, [])\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <Card\r\n            title={\r\n                <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    gap: \"10px\",\r\n                    alignItems: \"center\",\r\n                }}\r\n                >\r\n                <span\r\n                    style={{\r\n                    fontWeight: \"bold\",\r\n                    fontSize: \"17px\",\r\n                    color: \"#000\",\r\n                    }}\r\n                >\r\n                    Inquiry Details\r\n                </span>\r\n                </div>\r\n            }\r\n            >\r\n                <Row align=\"top\">\r\n                    <Col span={12}>\r\n                        <div\r\n                        style={{\r\n                            fontWeight: \"bold\",\r\n                            marginBottom: \"10px\",\r\n                        }}\r\n                        >\r\n                            Inquiry Date\r\n                        </div>\r\n                        <div>{inquiryData.date}</div>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                    <div\r\n                        style={{\r\n                            fontWeight: \"bold\",\r\n                            marginBottom: \"10px\",\r\n                        }}\r\n                        >\r\n                            Inquiry Type\r\n                        </div>\r\n                        <div>{inquiryData.type}</div>\r\n                    </Col>\r\n                </Row>\r\n                \r\n                <Row align=\"top\" className=\"mt-3\">\r\n                    <Col span={24}>\r\n                        <div\r\n                        style={{\r\n                            fontWeight: \"bold\",\r\n                            marginBottom: \"10px\",\r\n                        }}\r\n                        >\r\n                            Inquiry Description\r\n                        </div>\r\n                        <div>{inquiryData.description}</div>\r\n                    </Col>\r\n                </Row>\r\n            </Card>\r\n\r\n            <Card\r\n            title={\r\n                <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    gap: \"10px\",\r\n                    alignItems: \"center\",\r\n                }}\r\n                >\r\n                <span\r\n                    style={{\r\n                    fontWeight: \"bold\",\r\n                    fontSize: \"17px\",\r\n                    color: \"#000\",\r\n                    }}\r\n                >\r\n                    Comments\r\n                </span>\r\n                </div>\r\n            }\r\n            >\r\n                <div\r\n                    style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    flexWrap: \"wrap\",\r\n                    width: \"100%\",\r\n                    }}\r\n                >\r\n                    <CommentsLabel\r\n                    labelRemarksReply={labelRemarksReply}\r\n                    setLabelRemarksReply={setLabelRemarksReply}\r\n                    remarksReplying={remarksReplying}\r\n                    setRemarksReplying={setRemarksReplying}\r\n                    remarksModal={remarksModal}\r\n                    setRemarksModal={setRemarksModal}\r\n                    remarksArray={remarks}\r\n                    />\r\n                </div>\r\n\r\n                <Input.TextArea\r\n                    value={remarkCurrentData}\r\n                    placeholder=\"Enter Comment\"\r\n                    onChange={(e) => {\r\n                    setRemarkCurrentData(e.target.value);\r\n                    }}\r\n                    style={{\r\n                    resize: \"none\",\r\n                    }}\r\n                    rows={4}\r\n                />\r\n\r\n                <div\r\n                    style={{\r\n                    textAlign: \"right\",\r\n                    marginTop: \"10px\",\r\n                    }}\r\n                >\r\n                    <Button\r\n                    onClick={() => {\r\n                        postRemarks();\r\n                    }}\r\n                    type=\"primary\"\r\n                    >\r\n                    Save\r\n                    </Button>\r\n                </div>\r\n            </Card>\r\n            <div>\r\n            <Modal\r\n                visible={remarksModal}\r\n                width={800}\r\n                footer={null}\r\n                onOk={() => {}}\r\n                onCancel={() => {\r\n                    setRemarksModal(false);\r\n                    setRemarksReplying(\"\");\r\n                }}\r\n            >\r\n                <Comments\r\n                    id={params.id}\r\n                    getRemarks={getComments}\r\n                    remarksReply={remarksReply}\r\n                    setRemarksReply={setRemarksReply}\r\n                    remarksReplying={remarksReplying}\r\n                    setRemarksReplying={setRemarksReplying}\r\n                    remarksModal={remarksModal}\r\n                    setRemarksModal={setRemarksModal}\r\n                    remarksArray={remarks}\r\n                    updateInquiry={updateInquiry}\r\n                />\r\n            </Modal>\r\n            </div>\r\n            \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default ViewInquiry","import React from \"react\";\r\nimport { Route , Redirect , useRouteMatch } from \"react-router-dom\";\r\n\r\nimport { APP_PREFIX_PATH, AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\n\r\nimport InquiryList from \"./InquiryList\";\r\nimport InquiryChats from \"./InquiryChats\";\r\nimport AddNewInquiry from \"./AddNewInquiry\";\r\nimport ViewInquiry from \"./ViewInquiry\";\r\n\r\nconst InquiryManagement = () => {\r\n\r\n  const match = useRouteMatch();\r\n  return (\r\n    <div>\r\n      <Route path={`${APP_PREFIX_PATH}/inquiry-management`} exact>\r\n        <Redirect to={`${match.path}/inquiry-list`} />\r\n      </Route>\r\n      <Route path={`${match.path}/inquiry-list`} exact>\r\n        <InquiryList/>\r\n      </Route>\r\n      <Route path={`${match.path}/add-new-inquiry`} exact>\r\n        <AddNewInquiry/>\r\n      </Route>\r\n      <Route path={`${match.path}/edit-inquiry/:id`} exact>\r\n        <AddNewInquiry/>\r\n      </Route>\r\n      <Route path={`${match.path}/chats`} exact>\r\n        <InquiryChats/>\r\n      </Route>\r\n      <Route path={`${match.path}/view-inquiry/:id`} exact>\r\n        <ViewInquiry/>\r\n      </Route>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InquiryManagement;\r\n"],"names":["ChangeAssigneeIcon","_jsxs","width","height","viewBox","fill","xmlns","children","_jsx","d","InquiryStatusIcon","clipPath","id","menu","Menu","items","label","key","href","type","CustomDropdown","text","Title","Typography","props","onClose","className","Button","onClick","src","exportIcon","alt","ExportDropdown","_ref","setInquiryData","openStatusModal","inquiry_id","history","useHistory","useRouteMatch","_Fragment","EllipsisDropdown","push","concat","Icon","component","prev","TextArea","Input","allInquiries","setAllInquiries","searchText","setPage","selectedFilter","selectedInquiryModeFilter","selectedStatusFilter","_useState","useState","_useState2","_slicedToArray","inquiryData","_useState3","_useState4","setOpenStatusModal","_useState5","_useState6","status","setStatus","_useState7","_useState8","remark","setRemark","columns","title","dataIndex","render","Tag","color","_","record","Actions","useEffect","getData","axios","page_index","page_size","statuses","search","inquiry_mode","then","response","fdata","data","map","elem","ind","_objectSpread","sr_no","customer_name","tc_customer_id","email","mobile","dateOfInquiry","moment","created_at","format","catch","error","console","log","Table","dataSource","Modal","visible","centered","maskClosable","onCancel","footer","style","customer_id","res","Radio","size","onChange","e","target","value","defaultValue","defaultChecked","rows","showExportOption","setShowExportOption","setSearchText","drawerIsOpen","setDrawerIsOpen","_useState9","_useState10","setSelectedInquiryModeFilter","_useState11","_useState12","setSelectedStatusFilter","_useState13","_useState14","setSelectedFilter","_useState15","_useState16","_useState17","_useState18","localStorage","getItem","_useState19","_useState20","exportHandler","exportModal","onclose","Export","index","PageHeading","SearchBox","prevState","FilterIcon","CSVLink","headers","filename","Link","to","PlusIcon","InquiryListTable","Drawer","placement","open","closable","previousState","Select","showSearch","placeholder","SendOutlined","ref","React","AntdIcon","icon","SendOutlinedSvg","displayName","Text","selectedChat","chatId","setChatId","messageInput","setMessageInput","allGreAdmins","setAllGreAdmins","chatMessages","setChatMessages","greData","setGreData","count","setCount","timeoutId","setTimeoutId","associate_name","user_id","sendMessage","trim","length","method","url","chat_id","chat_message","chat_message_type","getChatMessages","messages","reverse","createOrGetChat","user_ids","_toConsumableArray","chat_name","chat_type","chat_module","getDateTime","date","message_time","Date","users","all_users","_step","ids","_iterator","_createForOfIteratorHelper","s","n","done","item","JSON","parse","can_access","ops_admin","err","f","timeout_id","setTimeout","clearTimeout","display","flexDirection","padding","objectFit","GrePic","level","margin","Divider","flexGrow","overflow","overflowY","message","myMsg","fontSize","marginBottom","name","borderTop","Form","justifyContent","gap","borderRadius","resize","onKeyPress","shiftKey","preventDefault","alignItems","disabled","Card","ChatingSection","DatePicker","_Form$useForm","form","params","useParams","selectedAssociateType","setSelectedAssociateType","setJobsData","setJobFile","setGstData","customerAccountData","setCustomerAccountData","company","phoneNumber","phone","emailId","success","srNo","percentage","description","updated_at","setFieldsValue","inquiry_date","labelCol","span","wrapperCol","layout","onFinish","inquiry_type","comments","goBack","msg","Row","align","Col","rules","required","resetFields","htmlType","editedLogs","remarksReply","setRemarksReply","marginLeft","_item$user","fontWeight","user","createdAt","comment","labelRemarksReply","setLabelRemarksReply","cursor","UpOutlined","DownOutlined","remarksArray","setRemarksModal","getRemarks","hide","remarksModal","setRemarksReplying","remarksReplying","backgroundColor","content","textDecoration","CommentsReplyLabel","CommentsReplyContainer","Empty","updateInquiry","imageUrl","setImageUrl","remarks","setRemarks","postRemarks","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","next","abrupt","parent_id","stop","apply","arguments","textAlign","marginTop","addedByName","remarkCurrentData","setRemarkCurrentData","getInquiryData","getComments","_callee2","_context2","flexWrap","CommentsLabel","onOk","Comments","match","Route","path","APP_PREFIX_PATH","exact","Redirect","InquiryList","AddNewInquiry","InquiryChats","ViewInquiry"],"sourceRoot":""}