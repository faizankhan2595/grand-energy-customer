{"version":3,"file":"static/js/727.1c5bb464.chunk.js","mappings":"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","sources":["utils/textEditorModules.js","views/app-views/ContractManagement/Quotations/Export-Dropdown.js","views/app-views/ContractManagement/Quotations/Export-ItemsAndServices.js","../node_modules/antd/es/time-picker/index.js","views/app-views/ContractManagement/Quotations/ActionIcons.js","views/app-views/ContractManagement/Quotations/Actions.js","views/app-views/ContractManagement/Quotations/QuotationTable.js","views/app-views/ContractManagement/Quotations/Quotations.js","views/app-views/ContractManagement/Quotations/Form1.js","views/app-views/ContractManagement/Quotations/QuotationModal.js","views/app-views/ContractManagement/Quotations/AddNewQuotation.js","webpack://emilus/./src/views/app-views/ContractManagement/Quotations/SendQuotation/SendQuotation.module.css?7d61","views/app-views/ContractManagement/Quotations/SendQuotation/SendQuotationModal.js","views/app-views/ContractManagement/Quotations/SendQuotation/SendQuotation.js","views/app-views/ContractManagement/Quotations/RecordPayments/RecordPaymentsForm.js","views/app-views/ContractManagement/Quotations/ImageUpload.js","views/app-views/ContractManagement/Quotations/RecordPayments/SaveRecordPaymentsModal.js","webpack://emilus/./src/views/app-views/ContractManagement/Quotations/RecordPayments/RecordPayments.module.css?6d99","views/app-views/ContractManagement/Quotations/RecordPayments/RecordPayments.js","views/app-views/ContractManagement/Contracts/ActionIcons.js","views/app-views/ContractManagement/Contracts/Actions.js","views/app-views/ContractManagement/Contracts/ContractTable.js","views/app-views/ContractManagement/Contracts/Contracts.js","webpack://emilus/./src/views/app-views/ContractManagement/Contracts/ViewContract/ViewContract.module.css?261f","views/app-views/ContractManagement/Contracts/ContractView/Reminder.js","views/app-views/ContractManagement/ServiceTimeSheet/ActionIcons.js","views/app-views/ContractManagement/ServiceTimeSheet/Actions.js","views/app-views/ContractManagement/ServiceTimeSheet/ContractTable.js","views/app-views/ContractManagement/ServiceTimeSheet/WorkOrder.js","views/app-views/ContractManagement/Contracts/ViewContract/ViewContract.js","webpack://emilus/./src/views/app-views/ContractManagement/Quotations/ViewQuotation/ViewQuotation.module.css?cfd8","views/app-views/ContractManagement/Quotations/ViewQuotation/ViewQuotation.js","views/app-views/ContractManagement/Quotations/Invoice/QuotationModal.js","views/app-views/ContractManagement/Quotations/Invoice/FormInvoice.js","views/app-views/ContractManagement/Quotations/Invoice/GenerateInvoice.js","webpack://emilus/./src/views/app-views/ContractManagement/Quotations/Invoice/ViewInvoice/ViewInvoice.module.css?ff81","views/app-views/ContractManagement/Quotations/Invoice/ViewInvoice/ViewInvoice.js","views/app-views/ContractManagement/WorkdOrder/ActionIcons.js","views/app-views/ContractManagement/WorkdOrder/Actions.js","views/app-views/ContractManagement/WorkdOrder/ContractTable.js","views/app-views/ContractManagement/WorkdOrder/WorkOrder.js","views/app-views/ContractManagement/Contracts/ContractView/BasicDetails.js","views/app-views/ContractManagement/Contracts/ContractView/index.js","webpack://emilus/./src/views/app-views/ContractManagement/ServiceTimeSheet/Service.module.css?9540","views/app-views/ContractManagement/ServiceTimeSheet/ServiceInvoice.js","views/app-views/ContractManagement/ContractManagement.js","views/app-views/CustomerManagement/CustomerAccounts/InvoiceTable.js","views/app-views/CustomerManagement/CustomerAccounts/Payments.js","views/app-views/InquiryManagement/ActionsIcons.js"],"sourcesContent":["export const formats = [\r\n  \"font\",\r\n  \"header\",\r\n  \"bold\",\r\n  \"italic\",\r\n  \"underline\",\r\n  \"strike\",\r\n  \"blockquote\",\r\n  \"color\",\r\n  \"background\",\r\n  \"script\",\r\n  \"super\",\r\n  \"list\",\r\n  \"bullet\",\r\n  \"indent\",\r\n  \"link\",\r\n  \"image\",\r\n];\r\nexport const modules = {\r\n  toolbar: [\r\n    [{ font: [] }],\r\n    [{ header: [1, 2, 3, false] }],\r\n    [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\r\n    [{ color: [] }, { background: [] }],\r\n    [{ script: \"sub\" }, { script: \"super\" }],\r\n    [\r\n      { list: \"ordered\" },\r\n      { list: \"bullet\" },\r\n      { indent: \"-1\" },\r\n      { indent: \"+1\" },\r\n    ],\r\n    [\"link\", \"image\"],\r\n  ],\r\n};\r\n\r\n\r\nexport const content=\"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like AldusPageMaker including versions of Lorem Ipsum Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like AldusPageMaker including versions of Lorem IpsumLorem Ipsum is simply dummy text of the printing and typesetting industry.Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining\"","import CustomDropdown from 'components/shared-components/CustomDropdown/CustomDropdown'\r\nimport React from 'react'\r\nimport { Menu } from 'antd';\r\n\r\nconst menu = (\r\n  <Menu\r\n    items={[\r\n      {\r\n        label: <p>1st menu</p>,\r\n        key: '0',\r\n      },\r\n      {\r\n        label: <a href=\"https://www.aliyun.com\">2nd menu item</a>,\r\n        key: '1',\r\n      },\r\n      {\r\n        type: 'divider',\r\n      },\r\n      {\r\n        label: '3rd menu item',\r\n        key: '3',\r\n      },\r\n    ]}\r\n  />\r\n);\r\n\r\nconst ExportDropdown = () => {\r\n  return (\r\n    <CustomDropdown text=\"Select\" menu={menu}/>\r\n  )\r\n}\r\n\r\nexport default ExportDropdown;","import React from 'react'\r\nimport { Button, Typography } from 'antd';\r\nimport ExportDropdown from './Export-Dropdown';\r\n\r\nimport exportIcon from 'assets/svg/file-export.svg'\r\n\r\nconst {Title} = Typography;\r\n\r\nconst Export = (props) => {\r\n  const {onClose} = props;\r\n  return (\r\n    <div className='text-center p-3'>\r\n      <div className='text-right'>\r\n        <Button onClick={onClose}>close</Button>\r\n      </div>\r\n      <div className='mb-4'>\r\n        <img src={exportIcon} alt=\"ExportIcon\"></img>\r\n        <Title>Export/Download Data</Title>\r\n      </div>\r\n      <div className='text-left mb-4'>\r\n        <p>Select Department</p>\r\n        <ExportDropdown/>\r\n      </div>\r\n      <div>\r\n        <Button className='m-1 mr-3' type=\"primary\">Yes, Confirm</Button>\r\n        <Button className='m-1' onClick={onClose}>No, Cancel</Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Export;","import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport DatePicker from '../date-picker';\nimport devWarning from '../_util/devWarning';\nvar InternalTimePicker = DatePicker.TimePicker,\n    InternalRangePicker = DatePicker.RangePicker;\nvar RangePicker = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(InternalRangePicker, _extends({}, props, {\n    dropdownClassName: props.popupClassName,\n    picker: \"time\",\n    mode: undefined,\n    ref: ref\n  }));\n});\nvar TimePicker = /*#__PURE__*/React.forwardRef(function (_a, ref) {\n  var addon = _a.addon,\n      renderExtraFooter = _a.renderExtraFooter,\n      popupClassName = _a.popupClassName,\n      restProps = __rest(_a, [\"addon\", \"renderExtraFooter\", \"popupClassName\"]);\n\n  var internalRenderExtraFooter = React.useMemo(function () {\n    if (renderExtraFooter) {\n      return renderExtraFooter;\n    }\n\n    if (addon) {\n      devWarning(false, 'TimePicker', '`addon` is deprecated. Please use `renderExtraFooter` instead.');\n      return addon;\n    }\n\n    return undefined;\n  }, [addon, renderExtraFooter]);\n  return /*#__PURE__*/React.createElement(InternalTimePicker, _extends({}, restProps, {\n    dropdownClassName: popupClassName,\n    mode: undefined,\n    ref: ref,\n    renderExtraFooter: internalRenderExtraFooter\n  }));\n});\nTimePicker.displayName = 'TimePicker';\nTimePicker.RangePicker = RangePicker;\nexport default TimePicker;","\r\n\r\n\r\n\r\nexport const ViewDetailsIcon = () =>(\r\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<g clipPath=\"url(#clip0_3143_14787)\">\r\n<path d=\"M10.1667 5.66667C13.325 5.66667 16.1417 7.44167 17.5167 10.25C16.1417 13.0583 13.325 14.8333 10.1667 14.8333C7.00833 14.8333 4.19167 13.0583 2.81667 10.25C4.19167 7.44167 7.00833 5.66667 10.1667 5.66667ZM10.1667 4C6 4 2.44167 6.59167 1 10.25C2.44167 13.9083 6 16.5 10.1667 16.5C14.3333 16.5 17.8917 13.9083 19.3333 10.25C17.8917 6.59167 14.3333 4 10.1667 4ZM10.1667 8.16667C11.3167 8.16667 12.25 9.1 12.25 10.25C12.25 11.4 11.3167 12.3333 10.1667 12.3333C9.01667 12.3333 8.08333 11.4 8.08333 10.25C8.08333 9.1 9.01667 8.16667 10.1667 8.16667ZM10.1667 6.5C8.1 6.5 6.41667 8.18333 6.41667 10.25C6.41667 12.3167 8.1 14 10.1667 14C12.2333 14 13.9167 12.3167 13.9167 10.25C13.9167 8.18333 12.2333 6.5 10.1667 6.5Z\" fill=\"#455560\"/>\r\n</g>\r\n<defs>\r\n<clipPath id=\"clip0_3143_14787\">\r\n<rect width=\"20\" height=\"20\" fill=\"white\"/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n\r\n)\r\n\r\nexport const DeleteIcon = () => (\r\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<g clipPath=\"url(#clip0_3143_14792)\">\r\n<path d=\"M13.1667 8V16.3333H6.5V8H13.1667ZM11.9167 3H7.75L6.91667 3.83333H4V5.5H15.6667V3.83333H12.75L11.9167 3ZM14.8333 6.33333H4.83333V16.3333C4.83333 17.25 5.58333 18 6.5 18H13.1667C14.0833 18 14.8333 17.25 14.8333 16.3333V6.33333Z\" fill=\"#455560\"/>\r\n</g>\r\n<defs>\r\n<clipPath id=\"clip0_3143_14792\">\r\n<rect width=\"20\" height=\"20\" fill=\"white\"/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n\r\n)\r\n\r\nexport const SendQuotationIcon = () => (\r\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<g clipPath=\"url(#clip0_3143_14797)\">\r\n<path d=\"M11.2167 8.01667L11.9833 8.78333L4.43333 16.3333H3.66667V15.5667L11.2167 8.01667ZM14.2167 3C14.0083 3 13.7917 3.08333 13.6333 3.24167L12.1083 4.76667L15.2333 7.89167L16.7583 6.36667C17.0833 6.04167 17.0833 5.51667 16.7583 5.19167L14.8083 3.24167C14.6417 3.075 14.4333 3 14.2167 3ZM11.2167 5.65833L2 14.875V18H5.125L14.3417 8.78333L11.2167 5.65833Z\" fill=\"#455560\"/>\r\n</g>\r\n<defs>\r\n<clipPath id=\"clip0_3143_14797\">\r\n<rect width=\"20\" height=\"20\" fill=\"white\"/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n\r\n)\r\n\r\nexport const RecordPaymentsIcon = () => (\r\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<g clipPath=\"url(#clip0_3143_14802)\">\r\n<path d=\"M15.8334 11.6668V5.00016C15.8334 4.0835 15.0834 3.3335 14.1667 3.3335H2.50004C1.58337 3.3335 0.833374 4.0835 0.833374 5.00016V11.6668C0.833374 12.5835 1.58337 13.3335 2.50004 13.3335H14.1667C15.0834 13.3335 15.8334 12.5835 15.8334 11.6668ZM14.1667 11.6668H2.50004V5.00016H14.1667V11.6668ZM8.33337 5.8335C6.95004 5.8335 5.83337 6.95016 5.83337 8.3335C5.83337 9.71683 6.95004 10.8335 8.33337 10.8335C9.71671 10.8335 10.8334 9.71683 10.8334 8.3335C10.8334 6.95016 9.71671 5.8335 8.33337 5.8335ZM19.1667 5.8335V15.0002C19.1667 15.9168 18.4167 16.6668 17.5 16.6668H3.33337V15.0002H17.5V5.8335H19.1667Z\" fill=\"#455560\"/>\r\n</g>\r\n<defs>\r\n<clipPath id=\"clip0_3143_14802\">\r\n<rect width=\"20\" height=\"20\" fill=\"white\"/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n\r\n)\r\n\r\nexport const CreateContractIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<g clipPath=\"url(#clip0_886_17351)\">\r\n<path d=\"M14 2H6C4.9 2 4 2.9 4 4V20C4 21.1 4.9 22 6 22H18C19.1 22 20 21.1 20 20V8L14 2ZM6 20V4H13V8H18V20H6ZM11 19H13V18H14C14.55 18 15 17.55 15 17V14C15 13.45 14.55 13 14 13H11V12H15V10H13V9H11V10H10C9.45 10 9 10.45 9 11V14C9 14.55 9.45 15 10 15H13V16H9V18H11V19Z\" fill=\"#455560\"/>\r\n</g>\r\n<defs>\r\n<clipPath id=\"clip0_886_17351\">\r\n<rect width=\"24\" height=\"24\" fill=\"white\"/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n\r\n)","import React, {useState} from \"react\";\r\nimport { useHistory , useRouteMatch, useParams} from \"react-router-dom\";\r\n// import EllipsisDropdown from 'components/shared-components/EllipsisDropdown'\r\nimport Icon from \"@ant-design/icons\";\r\nimport EllipsisDropdown from \"components/shared-components/EllipsisDropdown/index\";\r\nimport { Menu, Button, Modal, Radio, Input } from \"antd\";\r\nimport { ViewDetailsIcon , DeleteIcon , SendQuotationIcon , RecordPaymentsIcon, CreateContractIcon } from \"./ActionIcons\";\r\nimport axios from 'axios'\r\n\r\nconst {TextArea} = Input\r\n\r\nconst Actions = ({setOpenContractModal, id, quotationData, quoteData, setQuoteData, getQuotations, setOpenStatusModal}) => {\r\n\tconst history = useHistory();\r\n\tconst match = useRouteMatch();\r\n  // const [openStatusModal, setOpenStatusModal] = useState(false);\r\n  // const [status, setStatus] = useState(\"Accepted\");\r\n  // const [remark, setRemark] = useState(false);\r\n\r\n\tconst createContractHandler = () => {\r\n    setOpenContractModal(true)\r\n    setQuoteData({\r\n      // ...quoteData,\r\n      quotation_id: quotationData.id,\r\n      customer_id: quotationData.customer_id,\r\n      customer_job_site_id: quotationData.jobsite_id,\r\n    });\r\n    // setQuoteData(quotationData.id);\r\n\t}\r\n\r\n  const generateInvoiceHandler = () => {\r\n    history.push(`${match.path}/generate-invoice/${id}`)\r\n  }\r\n\r\n  const viewQuotationHandler = () => {\r\n    history.push(`${match.path}/view-quotation/${quotationData.id}`)\r\n  }\r\n\r\n  // const editQuotationHandler = () => {\r\n  //   history.push(`${match.path}/edit-quotation`)\r\n  // }\r\n\r\n  const editQuotationStatusHandler = () => {\r\n\r\n    setQuoteData({\r\n      ...quotationData,\r\n      quotation_id: quotationData.id,\r\n      customer_id: quotationData.customer_id,\r\n      customer_job_site_id: quotationData.jobsite_id,\r\n    });\r\n    setOpenStatusModal(true);\r\n  }\r\n\r\n  // const handleStatusOk = () => {\r\n  //     axios\r\n  //     .post(\r\n  //       \"/api/tc/update-quotation\",\r\n  //       {\r\n  //         ...quotationData,\r\n  //         id: id,\r\n  //         tc_customer_id: quotationData.customer_id,\r\n  //         status: status\r\n  //       },\r\n  //     )\r\n  //     .then((response) => {\r\n  //       let res = response.data;\r\n  //       console.log(res);\r\n  //       setOpenStatusModal(false);\r\n  //       getQuotations()\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       console.log(error);\r\n  //     });\r\n      \r\n  // };\r\n  // const handleStatusCancel = () => {\r\n  //     setStatus(\"\")\r\n  //     setRemark('')\r\n  //     setOpenStatusModal(false);\r\n  // };\r\n  // const handleCancel = () => {\r\n  //   setOpenStatusModal(false);\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <EllipsisDropdown\r\n        menu={\r\n          <Menu>\r\n            <Menu.Item onClick={viewQuotationHandler}>\r\n              <span className=\"d-flex align-items-center\">\r\n                <Icon className=\"mr-2\" component={ViewDetailsIcon} /> View Quotation\r\n              </span>\r\n            </Menu.Item>\r\n            {/* <Menu.Item onClick={editQuotationHandler}>\r\n              <span className=\"d-flex align-items-center\">\r\n                <Icon className=\"mr-2\" component={ViewDetailsIcon} /> Edit Quotation\r\n              </span>\r\n            </Menu.Item> */}\r\n            {/* <Menu.Item onClick={generateInvoiceHandler} disabled={quotationData.status==='Rejected'}>\r\n              <span className=\"d-flex align-items-center\">\r\n                <Icon className=\"mr-2\" component={RecordPaymentsIcon} /> Generate Invoice\r\n              </span>\r\n            </Menu.Item> */}\r\n            <Menu.Item onClick={editQuotationStatusHandler} disabled={quotationData.status==='Contract Generated'}>\r\n              <span className=\"d-flex align-items-center\">\r\n                <Icon className=\"mr-2\" component={SendQuotationIcon} /> Quotation Status\r\n              </span>\r\n            </Menu.Item>\r\n          </Menu>\r\n        }\r\n      />\r\n\r\n      {/* <Modal\r\n        visible={openStatusModal}\r\n        centered\r\n        maskClosable\r\n        onCancel={handleCancel}\r\n        title={'Account Status'}\r\n        footer={[\r\n            <Button key={'submit'} style={{ color: '#F5F5F5' }} type=\"primary\" className='font-weight-bold' onClick={handleStatusOk}>Save</Button>,\r\n            <Button key={'cancel'} style={{ color: '#000B23' }} onClick={handleStatusCancel} className='font-weight-bold'>Cancel</Button>,\r\n        ]}\r\n        >   \r\n        <div>\r\n            <Radio.Group\r\n                size=\"small\" \r\n                onChange={(e) => setStatus(e.target.value)}\r\n                defaultValue={\"Accepted\"}\r\n            >\r\n                <Radio value=\"Accepted\" defaultChecked> Accepted </Radio>\r\n                <Radio value=\"Rejected\"> Rejected</Radio>\r\n            </Radio.Group>\r\n        </div>\r\n\r\n        <div>\r\n            <h4 className=\"mb-2 mt-4\">Remarks</h4>\r\n            <TextArea rows={4} onChange={(e) => setRemark(e.target.value)} value={remark} />\r\n        </div>\r\n      </Modal> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Actions;\r\n","import React , {useState, useEffect} from 'react'\r\nimport {Table , Button , Tag, Input, InputNumber, Select, Radio, DatePicker, TimePicker, Modal, message} from 'antd';\r\nimport Actions from './Actions';\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\n// import get from 'lodash/get';\r\n// import Avatar from 'assets/Avatar2.png'\r\n\r\nconst {TextArea} = Input\r\n\r\nconst QuotationTable = ({ setsetPage, statuses, searchText, selectedFilter, selectedCustomerFilter, selectedJobsiteFilter, selectedStatusFilter }) => {\r\n  const [quotationsData , setQuotationsData] = useState([]);\r\n  // const [selectedRowKeys , setSelectedRowKeys] = useState([]);\r\n  const [jobSiteData , setJobSiteData] = useState(false);\r\n  const customer_id = localStorage.getItem(\"customer_id\");\r\n  \r\n  const [openContractModal , setOpenContractModal] = useState(false);\r\n  const [quoteData , setQuoteData] = useState(null);\r\n  const [commencementDate , setCommencementDate] = useState(false);\r\n  const [expiryDate , setExpiryDate] = useState(false);\r\n  const [remindersData , setRemindersData] = useState([]);\r\n  const [contractType , setContractType] = useState(false);\r\n\r\n  const [openStatusModal, setOpenStatusModal] = useState(false);\r\n  const [status, setStatus] = useState(\"Accepted\");\r\n  const [remark, setRemark] = useState(false);\r\n\r\n  const removeReminder =(record) => {\r\n    let newRemindersData = remindersData.filter((elem) => elem.sr_no !== record.sr_no);\r\n    setRemindersData(newRemindersData);\r\n  }\r\n\r\n  // const getQuotationJobsite = (jobsite_id) => {\r\n  //   let jobsite = jobSiteData.find((elem) => elem.id === jobsite_id);\r\n  //   return jobsite ? jobsite.name : '';\r\n  // }\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Quotation Id',\r\n      dataIndex: 'id',\r\n    },\r\n    {\r\n      title: 'Customer Name',\r\n      dataIndex: 'customerName',\r\n    },\r\n    {\r\n      title: 'Jobsite',\r\n      dataIndex: 'jobsite',\r\n      render: (_,record) => <span>{record.jobsite || \"-\"}</span>,\r\n      \r\n    },\r\n    {\r\n      title: 'Inquiry Date',\r\n      dataIndex: 'inquiryDate',\r\n      \r\n    },\r\n    {\r\n      title: 'Quotation Date',\r\n      dataIndex: 'quotationDate',\r\n      \r\n    },\r\n    {\r\n      title: 'Amount(S$)',\r\n      dataIndex: 'amount',\r\n    },\r\n    {\r\n      title: 'Status',\r\n      dataIndex: 'status',\r\n      render: (_,record) => {\r\n        if(record.status==='Accepted') return <span style={{color: \"#00AB6F\", backgroundColor: \"#01D2891A\", padding: '4px 8px', borderRadius:'6px', fontWeight:'600', fontSize: '14px'}}>Quote Accepted</span>\r\n        if(record.status==='Contract Generated') return <span style={{color: \"#5772FF\", backgroundColor: \"#5772FF1A\", padding: '4px 8px', borderRadius:'6px', fontWeight:'600', fontSize: '14px'}}>Contract Generated</span>\r\n        if(record.status==='Rejected') return <span style={{color: '#F53434', backgroundColor: '#FFF2F2', padding: '4px 8px', borderRadius:'6px', fontWeight:'600', fontSize: '14px'}}>Quote Rejected</span>\r\n        else return <span style={{color: \"#0698A6\", backgroundColor: \"#07B1C11A\", padding: '4px 8px', borderRadius:'6px', fontWeight:'600', fontSize: '14px'}}>Quote Sent</span>\r\n      }\r\n    },\r\n    {\r\n      title: 'Action',\r\n      dataIndex: '',\r\n      key: 'x',\r\n      render: (_,record) => <Actions setOpenContractModal={setOpenContractModal} id={record.id} \r\n      quotationData={record} setOpenStatusModal={setOpenStatusModal} setQuoteData={setQuoteData} getQuotations={getQuotations} />,\r\n    },\r\n  ];\r\n  \r\n  const reminderColumns = [\r\n    {\r\n      title: 'Sr. No.',\r\n      dataIndex: 'sr_no',\r\n    },\r\n    {\r\n      title: 'Date',\r\n      dataIndex: 'date',\r\n      render: (_, record) => {\r\n        return (\r\n          <div>\r\n            <DatePicker value={record.date} className='w-100' onChange={(e) => {\r\n              let data = remindersData\r\n              let index = remindersData.findIndex((elem) => elem === record)\r\n              data[index].date = e\r\n              setRemindersData([...data])\r\n            }}/>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: 'Time',\r\n      dataIndex: 'time',\r\n      render: (_, record) => {\r\n        return (\r\n          <div>\r\n            <TimePicker value={record.time} className='w-100' format={'HH:mm A'} use12Hours={true} onChange={(e) => {\r\n              let data = remindersData\r\n              let index = remindersData.findIndex((elem) => elem === record)\r\n              data[index].time = e;\r\n              setRemindersData([...data])\r\n            }}/>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: 'Title',\r\n      dataIndex: 'title',\r\n      render: (_, record) => {\r\n        return (\r\n          <div>\r\n            <Input value={record.title} className='w-100' onChange={(e) => {\r\n              let data = remindersData\r\n              let index = remindersData.findIndex((elem) => elem === record)\r\n              data[index].title = e.target.value\r\n              setRemindersData([...data])\r\n            }}/>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: 'Content',\r\n      dataIndex: 'description',\r\n      render: (_, record) => {\r\n        return (\r\n          <div>\r\n            <Input value={record.description} className='w-100' onChange={(e) => {\r\n              let data = remindersData\r\n              let index = remindersData.findIndex((elem) => elem === record)\r\n              data[index].description = e.target.value\r\n              setRemindersData([...data])\r\n            }}/>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: 'Action',\r\n      dataIndex: '',\r\n      key: 'x',\r\n      render: (_,record) => <Button type='danger' onClick={() => {removeReminder(record)}} className='font-weight-bold'>remove</Button>,\r\n    },\r\n  ];\r\n\r\n  // const ShowContractModal = () => {\r\n  //   setOpenContractModal(true);\r\n  // };\r\n\r\n  const handleCancel = () => {\r\n    setOpenContractModal(false);\r\n  };\r\n\r\n  const handleContractOk = () => {\r\n    console.log(quoteData);\r\n    // let data = quotationsData.find((elem) => elem.id === quoteData.quotation_id);\r\n    // console.log(data);\r\n    axios\r\n      .post(\r\n        \"/api/tc/new-contract\",\r\n        {\r\n          tc_quotation_id: quoteData.quotation_id,\r\n          tc_customer_id: quoteData.customer_id,\r\n          tc_customer_job_site_id: quoteData.customer_job_site_id || null,\r\n          start_date: moment(commencementDate),\r\n          // end_date: moment(expiryDate),\r\n          reminders: remindersData,\r\n          type: contractType,\r\n          status: 'Active'\r\n        },\r\n      )\r\n      .then((response) => {\r\n        console.log(response);\r\n        setCommencementDate(null);\r\n        setExpiryDate(null);\r\n        setContractType(null);\r\n        setRemindersData([]);\r\n        setOpenContractModal(false);\r\n        message.success('Contract created successfully');\r\n        updateQuotationStatus();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setOpenContractModal(false);\r\n        message.error('Contract cannot be created, please try again later');\r\n      });\r\n  };\r\n\r\n  const updateQuotationStatus = () => {\r\n    console.log(quoteData);\r\n    axios\r\n    .post(\r\n      \"/api/tc/update-quotation\",\r\n      {\r\n        ...quoteData,\r\n        id: quoteData.id,\r\n        tc_customer_id: quoteData.customer_id,\r\n        status: 'Contract Generated'\r\n      },\r\n    )\r\n    .then((response) => {\r\n      let res = response.data;\r\n      console.log(res);\r\n      getQuotations();\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    }); \r\n  };\r\n\r\n  const handleContractCancel = () => {\r\n    setOpenContractModal(false);\r\n  };\r\n\r\n  const handleAddReminder = () => {\r\n    setRemindersData([...remindersData, {\r\n      sr_no: remindersData.length + 1,\r\n      date: null,\r\n      title: '',\r\n      description: '',\r\n    }]);\r\n  };\r\n\r\n  const getJobSites = () => {\r\n    axios({\r\n        method: 'post',\r\n        url: \"/api/tc/get-customer-job-sites\",\r\n        data: {\r\n            page_index: 1,\r\n            page_size: 100000,\r\n            search : '',\r\n            customer_id: null\r\n        }\r\n    }).then((response) => {\r\n        console.log(response.data.data.data)\r\n        if (response.data.success) {\r\n          setJobSiteData(response.data.data.data)\r\n        }\r\n    }).catch((err) => {\r\n        console.log(err)\r\n    });\r\n  }\r\n\r\n  const commencementDateChange = (date) => {\r\n    // contractData.date_of_commencement = date;\r\n    // let newContractData = contractData;\r\n    // newContractData.date_of_commencement = date;\r\n    // console.log(newContractData);\r\n\r\n    setCommencementDate(date);\r\n  }\r\n\r\n  const expiryDateChange = (date) => {\r\n    setExpiryDate(date);\r\n  }\r\n\r\n  const contractTypeChange = (event) => {\r\n    setContractType(event);\r\n  }\r\n\r\n  const handleStatusOk = () => {\r\n    console.log(quoteData);\r\n    axios\r\n    .post(\r\n      \"/api/tc/update-quotation\",\r\n      {\r\n        ...quoteData,\r\n        id: quoteData.id,\r\n        tc_customer_id: quoteData.customer_id,\r\n        status: status\r\n      },\r\n    )\r\n    .then((response) => {\r\n      let res = response.data;\r\n      console.log(res);\r\n      setOpenStatusModal(false);\r\n      getQuotations();\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n      \r\n  };\r\n  const handleStatusCancel = () => {\r\n      setStatus(\"\")\r\n      setRemark(\"\")\r\n      setOpenStatusModal(false);\r\n  };\r\n\r\n  const getQuotations = () => {\r\n    axios\r\n      .post(\r\n        \"/api/tc/get-quotations\",\r\n        {\r\n          page_index: 1,\r\n          page_size: 15,\r\n          statuses: [],\r\n          search : searchText ? searchText : '',\r\n          customer_id: customer_id\r\n        },\r\n      )\r\n      .then((response) => {\r\n        let res = response.data.data.data;\r\n        console.log(res);\r\n\r\n        let fdata = res.map((elem, ind) => {\r\n          return {\r\n            key: ind,\r\n            id: elem.id,\r\n            customer_id: elem.tc_customer_id,\r\n            jobsite_id: elem.tc_customer_job_site_id,\r\n            customerName: elem.customer_name,\r\n            jobsite: elem.jobsite_name,\r\n            inquiryDate: elem.inquiry_date ? moment(elem.inquiry_date).format('DD-MM-YYYY HH:mm A'):'-',\r\n            // quotationDate: moment(elem.task_period_from_date),\r\n            quotationDate: moment(elem.task_period_from_date).format('DD-MM-YYYY'),\r\n            amount: elem.total,\r\n            status: elem.status || 'Quote Sent',\r\n            \r\n            tc_customer_id: elem.tc_customer_id,\r\n            task_period_from_date: moment(elem.task_period_from_date),\r\n            task_period_to_date: moment(elem.task_period_to_date),\r\n            due_date: moment(elem.due_date),\r\n            sub_total: elem.sub_total || 0,\r\n            tax: elem.gst || 8,\r\n            discount: elem.discount || 0,\r\n            total: elem.total,\r\n            tc_quotation_file: elem.tc_quotation_file,\r\n            quotation_remarks: elem.quotation_remarks || '',\r\n            line_items: elem.line_items || [],\r\n          };\r\n        });\r\n        setQuotationsData(fdata);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .post(\r\n        \"/api/tc/get-quotations\",\r\n        {\r\n          page_index: 1,\r\n          page_size: 15,\r\n          statuses: [],\r\n          search : searchText ? searchText : '',\r\n          customer_id: selectedCustomerFilter || null,\r\n          job_site_id: selectedJobsiteFilter || null,\r\n          status: selectedStatusFilter || null,\r\n          customer_id: customer_id\r\n        },\r\n      )\r\n      .then((response) => {\r\n        let res = response.data.data.data;\r\n        console.log(res);\r\n\r\n        let fdata = res.map((elem, ind) => {\r\n          return {\r\n            key: ind,\r\n            id: elem.id,\r\n            customer_id: elem.tc_customer_id,\r\n            jobsite_id: elem.tc_customer_job_site_id,\r\n            customerName: elem.customer_name,\r\n            jobsite: elem.job_site_name,\r\n            inquiryDate: elem.inquiry_date ? moment(elem.inquiry_date).format('DD-MM-YYYY HH:mm A'):'-',\r\n            // quotationDate: moment(elem.task_period_from_date),\r\n            quotationDate: moment(elem.task_period_from_date).format('DD-MM-YYYY'),\r\n            amount: elem.total,\r\n            status: elem.status || 'Quote Sent',\r\n            \r\n            tc_customer_id: elem.tc_customer_id,\r\n            task_period_from_date: moment(elem.task_period_from_date),\r\n            task_period_to_date: moment(elem.task_period_to_date),\r\n            due_date: moment(elem.due_date),\r\n            sub_total: elem.sub_total || 0,\r\n            tax: elem.gst || 8,\r\n            discount: elem.discount || 0,\r\n            total: elem.total,\r\n            tc_quotation_file: elem.tc_quotation_file,\r\n            quotation_remarks: elem.quotation_remarks || '',\r\n            line_items: elem.line_items || [],\r\n          };\r\n        });\r\n        setQuotationsData(fdata);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, [searchText]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .post(\r\n        \"/api/tc/get-quotations\",\r\n        {\r\n          page_index: 1,\r\n          page_size: 15,\r\n          statuses: [],\r\n          search : searchText ? searchText : '',\r\n          customer_id: selectedCustomerFilter || null,\r\n          job_site_id: selectedJobsiteFilter || null,\r\n          status: selectedStatusFilter || null,\r\n          customer_id: customer_id\r\n        },\r\n      )\r\n      .then((response) => {\r\n        let res = response.data.data.data;\r\n        console.log(res);\r\n\r\n        let fdata = res.map((elem, ind) => {\r\n          return {\r\n            key: ind,\r\n            id: elem.id,\r\n            customer_id: elem.tc_customer_id,\r\n            jobsite_id: elem.tc_customer_job_site_id,\r\n            customerName: elem.customer_name,\r\n            jobsite: elem.job_site_name,\r\n            inquiryDate: elem.inquiry_date ? moment(elem.inquiry_date).format('DD-MM-YYYY HH:mm A'):'-',\r\n            // quotationDate: moment(elem.task_period_from_date),\r\n            quotationDate: moment(elem.task_period_from_date).format('DD-MM-YYYY'),\r\n            amount: elem.total,\r\n            status: elem.status || 'Quote Sent',\r\n            \r\n            tc_customer_id: elem.tc_customer_id,\r\n            task_period_from_date: moment(elem.task_period_from_date),\r\n            task_period_to_date: moment(elem.task_period_to_date),\r\n            due_date: moment(elem.due_date),\r\n            sub_total: elem.sub_total || 0,\r\n            tax: elem.gst || 8,\r\n            discount: elem.discount || 0,\r\n            total: elem.total,\r\n            tc_quotation_file: elem.tc_quotation_file,\r\n            quotation_remarks: elem.quotation_remarks || '',\r\n            line_items: elem.line_items || [],\r\n          };\r\n        });\r\n        setQuotationsData(fdata);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, [selectedFilter]);\r\n\r\n  useEffect(() => {\r\n    getJobSites()\r\n  }, [])\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <Table columns={columns} dataSource={quotationsData} scroll={{ x:1100 }} />\r\n\r\n      <Modal\r\n        visible={openStatusModal}\r\n        centered\r\n        maskClosable\r\n        onCancel={() => {setOpenStatusModal(false);}}\r\n        title={'Quotation Status'}\r\n        footer={[\r\n            <Button key={'submit'} style={{ color: '#F5F5F5' }} type=\"primary\" className='font-weight-bold' onClick={handleStatusOk}>Save</Button>,\r\n            <Button key={'cancel'} style={{ color: '#000B23' }} onClick={handleStatusCancel} className='font-weight-bold'>Cancel</Button>,\r\n        ]}\r\n        >   \r\n        <div>\r\n            <Radio.Group\r\n                size=\"small\" \r\n                onChange={(e) => setStatus(e.target.value)}\r\n                defaultValue={\"Accepted\"}\r\n            >\r\n                <Radio value=\"Accepted\" defaultChecked> Accepted </Radio>\r\n                <Radio value=\"Rejected\"> Rejected</Radio>\r\n            </Radio.Group>\r\n        </div>\r\n\r\n        <div>\r\n            <h4 className=\"mb-2 mt-4\">Remarks</h4>\r\n            <TextArea rows={4} onChange={(e) => setRemark(e.target.value)} value={remark} />\r\n        </div>\r\n      </Modal>\r\n\r\n      <Modal\r\n          visible={openContractModal}\r\n          centered\r\n          maskClosable\r\n          width={900}\r\n          onCancel={handleCancel}\r\n          title={'Create Contract'}\r\n          footer={[\r\n              <Button style={{ color: '#F5F5F5' }} type='primary' className='font-weight-bold' onClick={handleContractOk}>Save</Button>,\r\n              <Button style={{ color: '#000B23' }} onClick={handleContractCancel} className='font-weight-bold'>Cancel</Button>,\r\n        ]}\r\n        >\r\n          <div className='w-50'>\r\n              <h4 className=\"mb-2 mt-4\">Date Of Commencement of Work</h4>\r\n              <DatePicker value={commencementDate} onChange={commencementDateChange}/>\r\n          </div>\r\n\r\n          {/* <div className='w-50'>\r\n              <h4 className=\"mb-2 mt-4\">Date of Expiration of Work</h4>\r\n              <DatePicker value={expiryDate} onChange={expiryDateChange}/>\r\n          </div> */}\r\n\r\n          {/* <div>\r\n              <h4 className=\"mb-2 mt-4\">Reminders</h4>\r\n              <Table columns={reminderColumns} dataSource={remindersData} />\r\n              <Button type='primary' className='font-weight-bold mt-2' onClick={handleAddReminder}>Add Reminder</Button>\r\n          </div> */}\r\n\r\n          <div className='w-50'>\r\n              <h4 className=\"mb-2 mt-4\">Contract Type</h4>\r\n              <Select\r\n                className='w-100'\r\n                showSearch\r\n                placeholder=\"Contract Type\"\r\n                value={contractType}\r\n                onChange={contractTypeChange}\r\n              >\r\n                <Select.Option title={'None'} key={0} value={'None'}>{'None'}</Select.Option>\r\n                <Select.Option title={'Ad Hoc'} key={1} value={'Ad Hoc'}>{'Ad Hoc'}</Select.Option>\r\n                <Select.Option title={'Routine'} key={2} value={'Routine'}>{'Routine'}</Select.Option>\r\n              </Select>\r\n          </div>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QuotationTable","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Drawer, InputNumber, DatePicker, Modal, Input, Select } from \"antd\";\r\nimport Icon from \"@ant-design/icons\"\r\nimport PageHeading from \"components/shared-components/PageHeading/PageHeading\";\r\nimport SearchBox from \"components/shared-components/SearchBox\";\r\nimport { FilterIcon, ItemsAndServicesIcon, ExportIcon } from \"assets/svg/icon\";\r\nimport exportIcon from \"assets/svg/exportIcon.svg\";\r\n\r\nimport Export from \"./Export-ItemsAndServices\";\r\nimport QuotationTable from \"./QuotationTable\";\r\nimport { Link , useRouteMatch  } from \"react-router-dom\";\r\nimport { CSVLink } from \"react-csv\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\n// import { Item } from \"rc-menu\";\r\nimport classes from './Quotations.css';\r\nconst Quotations = () => {\r\n\r\n  const match = useRouteMatch();\r\n  const [showExportOption , setShowExportOption] = useState(false);\r\n  const [selectedCustomerFilter , setSelectedCustomerFilter] = useState(false);\r\n  const [selectedJobsiteFilter , setSelectedJobsiteFilter] = useState(false);\r\n  const [selectedStatusFilter , setSelectedStatusFilter] = useState(false);\r\n  const [selectedFilter , setSelectedFilter] = useState(false);\r\n  const [searchText , setSearchText] = useState('');\r\n  const customer_id = localStorage.getItem(\"customer_id\");\r\n\r\n  const [allJobsites , setAllJobsites] = useState(false);\r\n  const [allCustomers , setAllCustomers] = useState(false);\r\n\r\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n  const [allQuotationsData, setAllQuotationsData] = useState([]);\r\n  const headers = [\r\n    { label: \"Sr. No\", key: \"sr_no\" },\r\n    { label: \"Quotation ID\", key: \"id\" },\r\n    { label: \"Customer Name\", key: \"customerName\" },\r\n    { label: \"Jobsite\", key: \"jobsite\" },\r\n    { label: \"Inquiry Date\", key: \"inquiryDate\" },\r\n    { label: \"Quotation Date\", key: \"quotationDate\" },\r\n    { label: \"Amount\", key: \"amount\" },\r\n    { label: \"Status\", key: \"status\" }\r\n  ];\r\n\r\n  const exportHandler = () => {\r\n    setShowExportOption(prev => !prev);\r\n  }\r\n\r\n  const drawerHandler = () => {\r\n    setDrawerIsOpen((prevState) => {\r\n      console.log(\"Drawer \" + (!prevState ? 'Open':'Closed'));\r\n\r\n      return !prevState\r\n    });\r\n    // setDrawerIsOpen(true);\r\n  };\r\n\r\n  const handleDrawerOk = () => {\r\n    setSelectedFilter((previousState) => !previousState)\r\n    // if(selectedCustomerFilter || selectedJobsiteFilter || selectedStatusFilter) {\r\n    // } else setSelectedFilter(false);\r\n    setDrawerIsOpen(false);\r\n  };\r\n\r\n  const onDrawerClose = () => {\r\n    console.log(\"Closed\")\r\n    setDrawerIsOpen(false);\r\n  };\r\n\r\n  const handleDrawerReset = () => {\r\n    setSelectedFilter((previousState) => !previousState)\r\n    setSelectedCustomerFilter(false)\r\n    setSelectedJobsiteFilter(false)\r\n    setSelectedStatusFilter(false)\r\n\r\n    setDrawerIsOpen(false);\r\n  };\r\n\r\n  \r\n  const exportModal = (\r\n    <Modal onclose={exportHandler}>\r\n      <Export onClose={exportHandler}/>\r\n    </Modal>\r\n  )\r\n  \r\n  const getAllJobsites = () => {\r\n    axios({\r\n      method: 'post',\r\n      url: \"/api/tc/get-customer-job-sites\",\r\n      data: {\r\n        page_index: 1,\r\n        page_size: 100000,\r\n        customer_id: null,\r\n        search : null\r\n      }\r\n    }).then((response) => {\r\n        if (response.data.success) {\r\n          setAllJobsites(response.data.data.data)\r\n        }\r\n        console.log(\"Job sites data fetched\")\r\n        console.log(response.data.data.data)\r\n    }).catch((err) => {\r\n        console.log(err)\r\n    });\r\n  };\r\n  \r\n  const getAllCustomers = () => {\r\n    axios({\r\n      method: 'post',\r\n      url: \"/api/tc/get-customers\",\r\n      data: {\r\n        page_index: 1,\r\n        page_size: 100000,\r\n        customer_id: null,\r\n        search : null\r\n      }\r\n    }).then((response) => {\r\n        if (response.data.success) {\r\n          setAllCustomers(response.data.data.data)\r\n        }\r\n        console.log(\"Customers data fetched\")\r\n        console.log(response.data.data.data)\r\n    }).catch((err) => {\r\n        console.log(err)\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n    .post(\r\n      \"/api/tc/get-quotations\",\r\n      {\r\n        page_index: 1,\r\n        page_size: 100000,\r\n        search : null,\r\n        customer_id: customer_id\r\n      },\r\n    )\r\n    .then((response) => {\r\n      let res = response.data.data.data;\r\n\r\n      let fdata = res.map((elem, index) => {\r\n        // let other_details = {};\r\n        // if(elem.other_details) {\r\n        //   other_details = JSON.parse(elem.other_details);\r\n        // }\r\n        return {\r\n          sr_no: index+1,\r\n          key: elem.id,\r\n          id: elem.id,\r\n          jobsite_id: elem.tc_customer_job_site_id,\r\n          customer_id: elem.tc_customer_id,\r\n          customerName: elem.customer_name,\r\n          jobsite: elem.jobsite_name || '',\r\n          inquiryDate: elem.inquiry_date ? moment(elem.inquiry_date).format('DD-MM-YYYY HH:mm A'):'-',\r\n          quotationDate: moment(elem.task_period_from_date).format('DD-MM-YYYY'),\r\n          amount: elem.total,\r\n          status: elem.status || 'Quote Sent',\r\n        };\r\n      });\r\n\r\n      setAllQuotationsData(fdata);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n\r\n    getAllCustomers();\r\n    getAllJobsites();\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className='d-flex justify-content-between'>\r\n        <PageHeading\r\n          title=\"Quotations\"\r\n        />\r\n        \r\n        <div className=\"d-flex justify-content-between mb-3\">\r\n          <div className=\" d-flex align-items-center justify-content-between mr-2\">\r\n            <SearchBox setSearchText={setSearchText} />\r\n            \r\n            <Button className=\"d-flex align-items-center ml-2\" onClick={drawerHandler}>\r\n              <Icon className=\"mr-2\" component={FilterIcon} />\r\n              Filters\r\n            </Button>\r\n\r\n            <CSVLink data={allQuotationsData} \r\n              headers={headers} \r\n              filename={\"All-Quotations.csv\"}\r\n            >\r\n              <Button className=\"d-flex align-items-center ml-2\">\r\n                <img className=\"mr-2\" src={exportIcon} alt=\"exportIcon\"></img>Export\r\n              </Button>\r\n            </CSVLink>\r\n\r\n            <Link to=\"/app/contract-management/quotations/add-new-quotation\" className=\"ml-2\">\r\n              <Button\r\n                className=\"d-flex align-items-center\"\r\n                type=\"primary\"\r\n                size=\"small\"\r\n              >\r\n                {/* <Icon component={PlusIcon}/> */}\r\n                Create New Quotation\r\n              </Button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <QuotationTable searchText={searchText} selectedCustomerFilter={selectedCustomerFilter} selectedJobsiteFilter={selectedJobsiteFilter} selectedStatusFilter={selectedStatusFilter} selectedFilter={selectedFilter} />\r\n      </div>\r\n\r\n      <div>\r\n        <Drawer title=\"Filter\"\r\n          placement=\"right\"\r\n          onClose={onDrawerClose} \r\n          open={drawerIsOpen}\r\n          closable={true}\r\n          // getContainer={false}\r\n          visible={drawerIsOpen}\r\n          footer={[\r\n            <Button key={'submit'} style={{ color: '#F5F5F5' }} type=\"primary\" className='font-weight-bold mr-2' onClick={handleDrawerOk}>Apply</Button>,\r\n            <Button key={'cancel'} style={{ color: '#000B23' }} onClick={() => {handleDrawerReset()}} className='font-weight-bold'>Reset</Button>,\r\n          ]}\r\n        >\r\n          <div className=\"mb-2\">\r\n            <h4>Customer</h4>\r\n            <Select\r\n                showSearch\r\n                placeholder=\"Jobsite\"\r\n                // optionFilterProp=\"children\"\r\n                // filterOption={(input, option) => (option?.title ?? '').toString().toLowerCase()?.includes(input?.toLowerCase())}\r\n                // filterSort={(optionA, optionB) =>\r\n                //     (optionA?.label ?? '').toString().toLowerCase().localeCompare((optionB?.label ?? '').toString().toLowerCase())\r\n                // }\r\n                value={selectedCustomerFilter}\r\n                onChange={(e) => {setSelectedCustomerFilter(e)}}\r\n                className=\"w-100\"\r\n            >\r\n                <Select.Option title={'None'} key={'None'} value={null}>{'None'}</Select.Option>\r\n                {allCustomers && allCustomers.map((val, id) => (\r\n                    <Select.Option title={val.name} key={id} value={val?.id}>{val.name}</Select.Option>\r\n                ))}\r\n            </Select>\r\n          </div>\r\n          <div className=\"mb-2\">\r\n            <h4>Jobsite</h4>\r\n            <Select\r\n                showSearch\r\n                placeholder=\"Jobsite\"\r\n                value={selectedJobsiteFilter}\r\n                onChange={(e) => {setSelectedJobsiteFilter(e)}}\r\n                className=\"w-100\"\r\n            >    \r\n                <Select.Option title={'None'} key={'None'} value={null}>{'None'}</Select.Option>\r\n                {allJobsites && allJobsites.map((val, id) => (\r\n                    <Select.Option title={val.name} key={id} value={val?.id}>{val.name}</Select.Option>\r\n                ))}\r\n            </Select>\r\n          </div>\r\n          <div>\r\n            <h4>Status</h4>\r\n            <Select\r\n                showSearch\r\n                placeholder=\"Status\"\r\n                value={selectedStatusFilter}\r\n                onChange={(e) => {setSelectedStatusFilter(e)}}\r\n                className=\"w-100\"\r\n            >\r\n                <Select.Option title={'None'} key={'None'} value={null}>{'None'}</Select.Option>\r\n                <Select.Option title={'Quote Accepted'} key={'Quote Accepted'} value={'Quote Accepted'}>{'Quote Accepted'}</Select.Option>\r\n                <Select.Option title={'Quote Rejected'} key={'Quote Rejected'} value={'Quote Rejected'}>{'Quote Rejected'}</Select.Option>\r\n                <Select.Option title={'Quote Sent'} key={'Quote Sent'} value={'Quote Sent'}>{'Quote Sent'}</Select.Option>\r\n                <Select.Option title={'Contract Generated'} key={'Contract Generated'} value={'Contract Generated'}>{'Contract Generated'}</Select.Option>\r\n            </Select>\r\n          </div>\r\n        </Drawer>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Quotations;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { formats, modules } from \"utils/textEditorModules\";\r\nimport ReactQuill from \"react-quill\";\r\nimport axios from \"axios\";\r\n\r\nimport {\r\n  Form,\r\n  Input,\r\n  DatePicker,\r\n  Select,\r\n  Button,\r\n  InputNumber,\r\n  Upload,\r\n  Row,\r\n  Col,\r\n  Card, \r\n  Typography,\r\n  Modal,\r\n  message,\r\n  Table,\r\n  // Divider,\r\n  // Radio,\r\n  // Cascader,\r\n  // TreeSelect,\r\n  // Switch,\r\n  // Checkbox,\r\n} from \"antd\";\r\nimport { InboxOutlined } from '@ant-design/icons';\r\n\r\nconst { Dragger } = Upload;\r\nconst { RangePicker } = DatePicker;\r\nconst { TextArea } = Input;\r\nconst {Title , Text} = Typography;\r\n\r\nconst Form1 = ({form, customers, jobsData, setJobsData, setJobFile, jobFile}) => {\r\n  const customer_id = localStorage.getItem('customer_id')\r\n  const columns = [\r\n    {\r\n      title: 'SR NO',\r\n      dataIndex: 'sr_no',\r\n    },\r\n    {\r\n      title: 'DESCRIPTION',\r\n      dataIndex: 'name',\r\n    },\r\n    {\r\n      title: 'PROVISIONAL QTY',\r\n      dataIndex: 'quantity',\r\n    },\r\n    {\r\n      title: 'UNIT PRICE',\r\n      dataIndex: 'price',\r\n    },\r\n    {\r\n      title: 'SUBTOTAL',\r\n      dataIndex: 'total',\r\n    },\r\n    {\r\n      title: 'Action',\r\n      dataIndex: '',\r\n      render: (_,record) => {\r\n        return <Button type=\"danger\" className='mt-2' onClick={()=>{removeJob(record)}}>Remove</Button>\r\n      },\r\n    },\r\n  ];\r\n  const removeJob = (record) => {\r\n    let jobs = jobsData.filter((e) => e != record);\r\n    setJobsData(jobs)\r\n  }\r\n  \r\n  \r\n  const [value, setValue] = useState('');\r\n  const [paymentTerm, setPaymentTerm] = useState('');\r\n  const [selectedJobsite, setSelectedJobsite] = useState(0);\r\n  const [uploadedFile, setUploadedFile] = useState({\r\n    name: '',\r\n    url: ''\r\n  });\r\n  const [allJobsites, setAllJobsites] = useState([]);\r\n  const tok = localStorage.getItem('token');\r\n  const [jobDetailsTemp, setJobDetailsTemp] = useState({\r\n      sr_no: 0, \r\n      id: 0, \r\n      description: '', \r\n      provisionalQty: 0, \r\n      unitPrice: 0\r\n    });\r\n    // const [quoteDescription, setQuoteDescription] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [quantity, setQuantity] = useState(null);\r\n  const [unitPrice, setUnitPrice] = useState(null);\r\n\r\n  const [openUploadPdfModal, setOpenUploadPdfModal] = useState(false);\r\n  const [openJobModal, setOpenJobModal] = useState(false);\r\n\r\n  const handleCancel = () => {\r\n    setOpenUploadPdfModal(false);\r\n    setOpenJobModal(false);\r\n  };\r\n\r\n  const handleUploadOk = () => {\r\n    setJobFile(uploadedFile);\r\n    setOpenUploadPdfModal(false);\r\n  };\r\n  const handleUploadCancel = () => {\r\n    setOpenUploadPdfModal(false);\r\n  };\r\n\r\n  const handleJobOk = () => {\r\n    if(!description) message.error(\"Please fill Description\");\r\n    if(!quantity) message.error(\"Please fill Provisional Quantity\");\r\n    if(!unitPrice) message.error(\"Please fill Unit Price\");\r\n\r\n    setJobsData([...jobsData, {\r\n      sr_no: jobsData.length+1,\r\n      name: description,\r\n      quantity: quantity,\r\n      price: unitPrice,\r\n      total: (+quantity * +unitPrice) || 0\r\n      // total: (+jobDetailsTemp.provisionalQty * +jobDetailsTemp.unitPrice) || 0\r\n    }]);\r\n\r\n    setDescription('');\r\n    setQuantity(0);\r\n    setUnitPrice(0);\r\n    setOpenJobModal(false);\r\n  };\r\n  const handleJobCancel = () => {\r\n    setOpenJobModal(false);\r\n  };\r\n\r\n  let filelist = []\r\n\r\n  const image_props = {\r\n    name: 'file',\r\n    multiple: false,\r\n    action: `${axios.defaults.baseURL}/api/tc/upload-document`,\r\n    headers: {\r\n      Authorization: `Bearer ${tok}`,\r\n    },\r\n    // fileList: filelist,\r\n    onChange(info) {\r\n      const { status } = info.file;\r\n      if (status !== 'uploading') {\r\n        console.log(info.file, info.fileList);\r\n      }\r\n      if (status === 'done') {\r\n        message.success(`${info.file.name} file uploaded successfully.`);\r\n        setUploadedFile({\r\n          name: info.file.name,\r\n          url: info.file.response.url\r\n        });\r\n        console.log(filelist)\r\n      } else if (status === 'error') {\r\n        message.error(`${info.file.name} file upload failed.`);\r\n      }\r\n    },\r\n    onDrop(e) {\r\n      console.log('Dropped files', e.dataTransfer.files);\r\n      setUploadedFile({\r\n        name: '',\r\n        url: ''\r\n      });\r\n    },\r\n  };\r\n\r\n  const funOpenUploadModal = () => {\r\n    setOpenUploadPdfModal(true)\r\n  }\r\n\r\n  const funOpenJobModal = () => {\r\n    setOpenJobModal(true)\r\n  }\r\n\r\n  const onChangeDesc = (event) => {\r\n    setDescription(event.target.value)\r\n  }\r\n\r\n  const onChangeProvisional = (value) => {\r\n    setQuantity(value)\r\n  }\r\n\r\n  const onChangeUnit = (value) => {\r\n    setUnitPrice(value)\r\n  }\r\n\r\n  const getJobSites = (currPage) => {\r\n    if(form.getFieldValue(\"customer_id\")) {\r\n      axios({\r\n          method: 'post',\r\n          url: \"/api/tc/get-customer-job-sites\",\r\n          headers: {\r\n              // 'content-type': `multipart/form-data`,\r\n              Authorization: `Bearer ${tok}`\r\n          },\r\n          data: {\r\n              // customer_id: form.getFieldValue(\"customer_id\") || 0,\r\n              customer_id: customer_id,\r\n              page_index: 1,\r\n              page_size: 100000,\r\n              search : ''\r\n          }\r\n      }).then((response) => {\r\n          console.log(response.data)\r\n          if (response.data.success) {\r\n            setAllJobsites(response.data.data.data)\r\n          }\r\n      }).catch((err) => {\r\n          console.log(err)\r\n      });\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getJobSites()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    form.setFieldsValue ({\r\n        customer_id: +customer_id\r\n    })\r\n    \r\n  }, [customers])\r\n  \r\n  return (\r\n    <>\r\n      <Card className=\"mt-3\">\r\n          \r\n      <Row align=\"top\">\r\n        <Col span={12}>\r\n          <Form.Item name=\"customer_id\" label=\"Customer Name\" rules={[{ required: true, message: 'Please select Customer!' }]}>\r\n            <Select onChange={getJobSites} disabled>\r\n              {customers.map((elem, index) => {\r\n                return (\r\n                  <Select.Option key={index} value={elem.id}>\r\n                    {elem.company}\r\n                  </Select.Option>\r\n                );\r\n              })}\r\n            </Select>\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n\r\n      <div className=\"d-flex justify-content-between heading-container my-4\">\r\n          <div className=\"heading\">Job Details</div>\r\n          <div className=\"heading d-flex justify-content-between align-items-center\">\r\n            {jobFile && <div className=\"mr-3\" style={{color: 'blue'}}>{jobFile.name}</div>}\r\n            <Button style={{ color: '#000B23' }} onClick={funOpenUploadModal} className='font-weight-bold'>Upload Pdf</Button>\r\n          </div>\r\n      </div>\r\n\r\n      <div className=\"mb-3\">\r\n        <Table columns={columns} dataSource={jobsData} />\r\n        <div className=\"d-flex justify-content-end\">\r\n          <Button type=\"primary\" onClick={funOpenJobModal} className='mt-2'>Add Job</Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* <Divider /> */}\r\n\r\n      <Row gutter={20}>\r\n        <Col span={12}>\r\n          <Form.Item\r\n            label=\"Quotation Date\"\r\n            name=\"quotationDate\"\r\n            rules={[{ required: true, message: \"Required\" }]}\r\n          >\r\n            <DatePicker format={'DD-MM-YYYY'} />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col span={12}>\r\n          <Form.Item\r\n            label=\"Validity (Days)\"\r\n            name=\"validity\"\r\n            rules={[{ required: true, message: \"Required\" }]}\r\n          >\r\n            <Input type=\"number\"/>\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={20}>\r\n        <Col span={12}>\r\n          <Form.Item\r\n            label=\"Payment Term\"\r\n            name=\"paymentTerm\"\r\n            rules={[{ required: true, message: \"Required\" }]}\r\n          >\r\n            <Select\r\n                showSearch\r\n                placeholder=\"Payment Term\"\r\n                value={paymentTerm}\r\n            >\r\n              <Select.Option title={'Immediate'} key={0} value={'Immediate'}>{'Immediate'}</Select.Option>\r\n              <Select.Option title={'15 Days'} key={15} value={'15 Days'}>{'15 Days'}</Select.Option>\r\n              <Select.Option title={'30 Days'} key={30} value={'30 Days'}>{'30 Days'}</Select.Option>\r\n              <Select.Option title={'45 Days'} key={45} value={'45 Days'}>{'45 Days'}</Select.Option>\r\n              <Select.Option title={'60 Days'} key={60} value={'60 Days'}>{'60 Days'}</Select.Option>\r\n            </Select>\r\n          </Form.Item>\r\n        </Col>\r\n        <Col span={12}>\r\n          <Form.Item\r\n            label=\"Jobsite\"\r\n            name=\"jobsite_id\"\r\n            rules={[{ required: true, message: \"Required\" }]}\r\n          >\r\n            <Select\r\n                showSearch\r\n                placeholder=\"Jobsite\"\r\n                optionFilterProp=\"children\"\r\n                filterOption={(input, option) => (option?.title ?? '').toString().toLowerCase()?.includes(input?.toLowerCase())}\r\n                filterSort={(optionA, optionB) =>\r\n                    (optionA?.label ?? '').toString().toLowerCase().localeCompare((optionB?.label ?? '').toString().toLowerCase())\r\n                }\r\n                value={selectedJobsite}\r\n                onChange={setSelectedJobsite}\r\n            >\r\n                {allJobsites.map((val, id) => (\r\n                    <Select.Option title={val.name} key={id} value={val?.id}>{val.name}</Select.Option>\r\n                ))}\r\n            </Select>\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col span={24}>\r\n        <div style={{margin:'0px 0px', width:'100%'}} >\r\n          <Form.Item\r\n            label=\"Description\"\r\n            name=\"remarks\"\r\n            rules={[{ required: true, message: \"Description is Required\" }]}\r\n          >\r\n            <ReactQuill\r\n              style={{ borderRadius: \"12px\", paddingBottom: \"5%\" }}\r\n              theme=\"snow\"\r\n              value={value}\r\n              onChange={setValue}\r\n              formats={formats}\r\n              modules={modules}\r\n            />\r\n          </Form.Item>\r\n        </div>\r\n        </Col>\r\n      </Row>\r\n      </Card>\r\n\r\n      <Modal\r\n        visible={openUploadPdfModal}\r\n        centered\r\n        maskClosable\r\n        onCancel={handleCancel}\r\n        title={'Upload Pdf'}\r\n        footer={[\r\n            <Button type=\"primary\" className='font-weight-bold' onClick={handleUploadOk}>Save</Button>,\r\n            <Button style={{ color: '#000B23' }} onClick={handleUploadCancel} className='font-weight-bold'>Cancel</Button>,\r\n      ]}\r\n      >\r\n        <div>\r\n          <Dragger {...image_props}>\r\n            <p className=\"ant-upload-drag-icon\">\r\n              <InboxOutlined />\r\n            </p>\r\n            <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\r\n            <p className=\"ant-upload-hint\">\r\n            Files supported:pdf only\r\n            </p>\r\n          </Dragger>\r\n        </div>\r\n      </Modal>\r\n\r\n      <Modal\r\n        visible={openJobModal}\r\n        centered\r\n        maskClosable\r\n        onCancel={handleCancel}\r\n        title={'Job Details'}\r\n        footer={[\r\n            <Button type=\"primary\" className='font-weight-bold' onClick={handleJobOk}>Save</Button>,\r\n            <Button style={{ color: '#000B23' }} onClick={handleJobCancel} className='font-weight-bold'>Cancel</Button>,\r\n      ]}\r\n      >   \r\n        <div>\r\n            <h4 className=\"mb-2\">Description</h4>\r\n            <TextArea rows={4} onChange={onChangeDesc} value={description}/>\r\n        </div>\r\n\r\n        <div>\r\n            <h4 className=\"mb-2 mt-2\">Provisional Quantity</h4>\r\n            <InputNumber min={0} onChange={onChangeProvisional} value={quantity} />\r\n        </div>\r\n\r\n        <div>\r\n            <h4 className=\"mb-2 mt-2\">Unit Price</h4>\r\n            <InputNumber min={0} onChange={onChangeUnit} value={unitPrice} />\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nexport default Form1;\r\n","import Icon from \"@ant-design/icons\";\r\nimport React from \"react\";\r\n\r\nimport { submitTick } from \"assets/svg/icon\";\r\n\r\nconst QuotationModal = (props) => {\r\n  return (\r\n    <div className=\"text-center\">\r\n      <Icon component={submitTick} />\r\n      <div>\r\n        <h1>New Quotation Created</h1>\r\n        <p>\r\n          Quotation is created successfully.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuotationModal;\r\n","import React , {useState,useEffect} from \"react\";\r\nimport { Form, Button, Col, Row, message } from \"antd\";\r\nimport PageHeading from \"components/shared-components/PageHeading/PageHeading\";\r\nimport Form1 from \"./Form1\";\r\nimport Modal from \"components/UI/Modal\";\r\nimport QuotationModal from \"./QuotationModal\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { useLocation, useHistory, useParams } from 'react-router-dom';\r\n\r\nconst AddNewQuotation = (props) => {\r\n  const [form] = Form.useForm();\r\n  const param = useParams();\r\n  const inquiry_id = param.inquiry_id || null;\r\n  // const [value, setValue] = useState('');\r\n  const [jobsData , setJobsData] = useState([]);\r\n  const [jobFile , setJobFile] = useState({\r\n    name: '',\r\n    url: ''\r\n  });\r\n  const [gstData, setGstData] = useState([]);\r\n  const [customerAccountData, setCustomerAccountData] = useState([]);\r\n  const history = useHistory();\r\n  const customer_id = localStorage.getItem('customer_id')\r\n   \r\n  const [showModal , setShowModal] = useState(false);\r\n\r\n  const saveQuotationHandler = () => {\r\n    setShowModal(prev => !prev);\r\n  }\r\n\r\n  const saveQuotaionModal = (\r\n    <Modal onClose = {saveQuotationHandler}>\r\n      <QuotationModal/>\r\n    </Modal>\r\n  )\r\n\r\n  const finishHandler = (e) => {\r\n    console.log(e)\r\n    console.log(e.status)\r\n    if(!jobFile || !jobFile.url) {\r\n      message.error(\"Please Upload attachment file first\");\r\n      return\r\n    }\r\n\r\n    if (props.id) {\r\n      axios\r\n        .post(\r\n          \"/api/tc/update-quotation\",\r\n          {\r\n            id: props.id,\r\n            tc_customer_id: customer_id,\r\n            tc_customer_job_site_id: e.jobsite_id,\r\n            task_period_from_date: moment(e.quotationDate),\r\n            task_period_to_date: moment(e.quotationDate).add(+e.validity, 'days'),\r\n            due_date: moment(e.quotationDate).add(+e.validity, 'days'),\r\n            sub_total: getSubTotalAmount(),\r\n            status: e.status || 'Pending',\r\n            tax: gstData[gstData.length - 1].percentage || 8,\r\n            discount: e.discount || 0,\r\n            total: getTotalAmount(gstData[gstData.length - 1].percentage || 8),\r\n            payment_term: e.paymentTerm,\r\n            validity: +e.validity,\r\n            tc_quotation_file: jobFile.url,\r\n            quotation_remarks: e.remarks || '',\r\n            line_items: jobsData,\r\n            // inquiry_id: inquiry_id,\r\n          },\r\n          {\r\n            headers: {\r\n              \"content-type\": \"application/json\"\r\n            },\r\n          }\r\n        )\r\n        .then((response) => {\r\n          if(!response.data.success){\r\n            message.warn(response.data.msg)\r\n            return;\r\n          }\r\n          // props.onNext();\r\n          // props.setCId(props.id);\r\n          // props.onNext();\r\n          console.log(props.id)\r\n          message.success(\"Quotation created successfully\")\r\n          history.goBack()\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n      return\r\n    } else {\r\n      axios\r\n        .post(\r\n          \"/api/tc/new-quotation\",\r\n          {\r\n            tc_customer_id: customer_id,\r\n            tc_customer_job_site_id: e.jobsite_id,\r\n            task_period_from_date: moment(e.quotationDate),\r\n            task_period_to_date: moment(e.quotationDate).add(+e.validity, 'days'),\r\n            due_date: moment(e.quotationDate).add(+e.validity, 'days'),\r\n            sub_total: getSubTotalAmount(),\r\n            status: e.status || 'Pending',\r\n            tax: gstData[gstData.length - 1].percentage || 8,\r\n            discount: e.discount || 0,\r\n            total: getTotalAmount(gstData[gstData.length - 1].percentage || 8),\r\n            payment_term: e.paymentTerm,\r\n            validity: +e.validity,\r\n            tc_quotation_file: jobFile.url,\r\n            quotation_remarks: e.remarks || '',\r\n            line_items: jobsData,\r\n            // inquiry_id: inquiry_id,\r\n          },\r\n          {\r\n            headers: {\r\n              \"content-type\": \"application/json\"\r\n            },\r\n          }\r\n        )\r\n        .then((response) => {\r\n          if(!response.data.success){\r\n            message.warn(response.data.msg)\r\n            return;\r\n          }\r\n          message.success(\"Quotation created successfully\")\r\n          history.goBack()\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const getSubTotalAmount = () => {\r\n    let amount = 0;\r\n    if(jobsData.length > 0) {\r\n      for(let i=0; i<jobsData.length; i++) {\r\n        amount += jobsData[i].total;\r\n      }\r\n    }\r\n    return amount\r\n  }\r\n\r\n  const getTotalAmount = (gst_percentage) => {\r\n    let amount = 0;\r\n    if(jobsData.length > 0) {\r\n      for(let i=0; i<jobsData.length; i++) {\r\n        amount += jobsData[i].total;\r\n      }\r\n    }\r\n    if(amount) {\r\n      amount = amount + ((+gst_percentage/100)*amount);\r\n    }\r\n    return amount\r\n  }\r\n\r\n  const getAllGst = ()=> {\r\n    axios({\r\n        method: 'post',\r\n        url: \"/api/tc/get-all-gsts\",\r\n        data: {},\r\n    }).then(function (response) {\r\n        if(response.data.success) {\r\n            console.log(response.data.data)\r\n            let res = response.data.data.data;\r\n            let fdata = res.map((elem, ind) => {\r\n              return {\r\n                  key: elem.id,\r\n                  id: elem.id,\r\n                  srNo: ind+1,\r\n                  percentage: elem.percentage,\r\n                  description: elem.description,\r\n                  created_at: moment(elem.created_at).format(\"DD-MM-YYYY\"),\r\n                  updated_at: moment(elem.updated_at).format(\"DD-MM-YYYY\"),\r\n              };\r\n            });\r\n            setGstData(fdata);\r\n            // console.log(fdata);\r\n\r\n            // form.setFieldsValue ({\r\n            //   ...form.getFieldsValue(),\r\n            //   gst: res[res.length - 1].percentage || 8\r\n            // })\r\n        }\r\n    }).catch(function (error) {\r\n        console.log(error);\r\n    });\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .post(\r\n        \"/api/tc/get-customers\",\r\n        {\r\n          page_index: 1,\r\n          page_size: 100000,\r\n          // statuses: [\"ACTIVE\", \"INACTIVE\", \"PENDING APPROVAL\"],\r\n          searchText : null,\r\n        }\r\n      )\r\n      .then((response) => {\r\n        let res = response.data.data.data;\r\n        console.log(res);\r\n\r\n        let fdata = res.map((elem, ind) => {\r\n          return {\r\n            key: ind,\r\n            id: elem.id,\r\n            company: elem.name,\r\n            phoneNumber: elem.phone,\r\n            emailId: elem.email\r\n          };\r\n        });\r\n\r\n        setCustomerAccountData(customerAccountData.concat(fdata));\r\n        console.log(customerAccountData)\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n      getAllGst();\r\n  }, []);\r\n\r\n  const clearForm = () => {\r\n    form.resetFields();\r\n    setJobsData([]);\r\n    setJobFile(({\r\n      name: '',\r\n      url: ''\r\n    }));\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {showModal && saveQuotaionModal}\r\n      <PageHeading\r\n        title=\"Create New Quotation\"\r\n      />\r\n\r\n      <Form\r\n        form={form}\r\n        labelCol={{\r\n          span: 10,\r\n        }}\r\n        wrapperCol={{\r\n            span: 18,\r\n        }}\r\n        layout=\"vertical\"\r\n        onFinish={finishHandler}\r\n      >\r\n        <Form1 form={form} customers={customerAccountData} jobsData={jobsData} setJobsData={setJobsData} jobFile={jobFile} setJobFile={setJobFile}/>\r\n\r\n          <div className=\"w-100 d-flex justify-content-end actions\">\r\n            <Form.Item className=\"w-100\">\r\n                <Button onClick={() => { history.goBack() }}>Back</Button>\r\n                <Button onClick={() => { clearForm() }}>Clear All</Button>\r\n                <Button type=\"primary\" htmlType=\"submit\">Save</Button>\r\n            </Form.Item>\r\n          </div>\r\n      </Form>\r\n\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AddNewQuotation;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"SendQuotation_card__R6hlu\",\"add_details\":\"SendQuotation_add_details__KOgCk\",\"total_amt\":\"SendQuotation_total_amt__40lwE\",\"tag\":\"SendQuotation_tag__mKz-h\",\"send_btn\":\"SendQuotation_send_btn__Gi0MG\",\"action\":\"SendQuotation_action__q6LsV\"};","import Icon from \"@ant-design/icons\";\r\nimport React from \"react\";\r\n\r\nimport { submitTick } from \"assets/svg/icon\";\r\n\r\nconst SendQuotationModal = (props) => {\r\n  return (\r\n    <div className=\"text-center\">\r\n      <Icon component={submitTick} />\r\n      <div>\r\n        <h1>New Quotation Created Successfully.</h1>\r\n        <p>\r\n          Quotation Id HCI1234-QTN for items & services created successfully.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SendQuotationModal;\r\n","import React , {useState} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport {\r\n  Card,\r\n  Typography,\r\n  Col,\r\n  Row,\r\n  List,\r\n  Divider,\r\n  Tag,\r\n  Button,\r\n  // Avatar,\r\n} from \"antd\";\r\nimport Icon from \"@ant-design/icons\"\r\nimport PageHeading from \"components/shared-components/PageHeading/PageHeading\";\r\nimport Modal from \"components/UI/Modal\";\r\nimport logo from \"assets/grand-energy-logo-small.png\";\r\nimport { ItemsAndServicesPageIcon } from \"assets/svg/icon\";\r\nimport HandBagImg from \"assets/HandBag.png\";\r\nimport SneakersImg from \"assets/Sneakers.png\";\r\nimport { PdfIcon } from \"../../../ItemsAndServices/svgIcons\";\r\n// import logo from \"assets/grand-energy-logo.png\";\r\n// import { SendIcon } from \"assets/svg/icon\";\r\nimport classes from \"./SendQuotation.module.css\";\r\nimport SendQuotationModal from \"./SendQuotationModal\";\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nconst dataItems = [\r\n  { title: \"XYZ Hand Bag\", image: HandBagImg },\r\n  { title: \"Sneakers\", image: SneakersImg },\r\n];\r\n\r\nconst dataServices = [\"Leather Replacement\", \"Shoe Shine & Polish\"];\r\n\r\nconst dataQty = [1, 1];\r\n\r\nconst dataPrice = [\"S$100.00\", \"S$100.00\"];\r\n\r\nconst dataTotal = [\"S$100.00\", \"S$100.00\"];\r\n\r\nconst dataGrandTotal = [\r\n  { text: \"Subtotal\", amt: \"S$100.00\" },\r\n  { text: \"Discount\", amt: \"S$100.00\", tag: { text: \"10%\", color: \"#0099A8\" } },\r\n  { text: \"Tax\", amt: \"S$100.00\", tag: { text: \"10%\", color: \"#E82E2E\" } },\r\n];\r\nconst SendQuotation = () => {\r\n\r\n  const [showModal , setShowModal] = useState(false);\r\n\r\n  const showModalHandler = () => {\r\n    setShowModal(prev => !prev);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n\r\n      {showModal && <Modal onClose={showModalHandler}><SendQuotationModal/></Modal>}\r\n      <PageHeading\r\n        svg={ItemsAndServicesPageIcon}\r\n        title=\"Quotations / View Quotation\"\r\n      />\r\n\r\n      <Card>\r\n        <Card className={classes.card}>\r\n          <div className=\"mt-2 mb-2 w-100\">\r\n            <img src={logo} alt=\"logo\" style={{width: '20%'}}/>\r\n            <div className=\"d-flex justify-content-between mt-3\">\r\n              <div>\r\n                <Title strong level={3}>\r\n                  GRAND ENERGY TECHNOLOGIES PTE LTD\r\n                </Title>\r\n                <Text><b>Email:</b> admin@getpl.com.sg</Text>\r\n              </div>\r\n              <div></div>\r\n            </div>\r\n            <div className=\"d-flex justify-content-between\">\r\n              <div>\r\n                <Text><b>Phone:</b> 6025 3659</Text>\r\n                <br />\r\n                <Text><b>UEN/GST No:</b> 201802457D</Text>\r\n              </div>\r\n              <div className=\"text-right\">\r\n                <Text>Bik 130 Jurong Gateway Road </Text>\r\n                <br />\r\n                <Text>#03-203 Singapore 600130 </Text>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Card>\r\n        <Card className={classes.add_details}>\r\n          <div>\r\n            <h5>Billed To:</h5>\r\n          </div>\r\n          <div className=\"d-flex justify-content-between\">\r\n            <div className=\"mr-5\">\r\n              {/* <Title strong level={3}>\r\n                Billed To\r\n              </Title> */}\r\n              <br />\r\n              <Text strong>John Smith</Text>\r\n              <br />\r\n              <Text>1111 ABC Road,XYZ Tower</Text>\r\n              <br />\r\n              <Text>Singapore, 0023</Text>\r\n              <br />\r\n              <br />\r\n              <Text>admin@customer.com</Text>\r\n              <br />\r\n              <Text><b>Phone:</b> 11111111</Text>\r\n            </div>\r\n            <div className=\"d-flex justify-content-between\">\r\n              <div className=\"mr-4\">\r\n                <br />\r\n                <Text strong>Quotation No</Text>\r\n                <br />\r\n                <Text>1111</Text>\r\n                <br />\r\n                <br />\r\n                <Text strong>Quotation Date</Text>\r\n                <br />\r\n                <Text>24 Dec, 2024</Text>\r\n                <br />\r\n              </div>\r\n              <div className=\"text-right\">\r\n                <br />\r\n                <Text strong>Payment Term</Text>\r\n                <br />\r\n                <Text>COD</Text>\r\n                <br />\r\n                <br />\r\n                <Text strong>Validity</Text>\r\n                <br />\r\n                <Text>7 Days</Text>\r\n                <br />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Card>\r\n\r\n        <div>\r\n          <Row>\r\n            <Col span={3}>\r\n              <Title level={4}>Sr. No.</Title>\r\n              <List\r\n                dataSource={dataItems}\r\n                renderItem={(item, index) => (\r\n                  <List.Item key={item.title} className=\" pl-0 border-0\">\r\n                    {index + 1}\r\n                  </List.Item>\r\n                )}\r\n              />\r\n            </Col>\r\n            <Col span={21}>\r\n              <Row>\r\n                <Col span={8}>\r\n                  <Title level={4}>Description</Title>\r\n                  <List\r\n                    dataSource={dataServices}\r\n                    renderItem={(item) => (\r\n                      <List.Item key={item} className=\"pl-0 border-0\">\r\n                        <div\r\n                          style={{ height: \"32px\" }}\r\n                          className=\"d-flex align-items-center\"\r\n                        >\r\n                          {item}\r\n                        </div>\r\n                      </List.Item>\r\n                    )}\r\n                  />\r\n                </Col>\r\n                <Col span={4}>\r\n                  <Title level={4}>Provisional Quantity</Title>\r\n                  <List\r\n                    dataSource={dataQty}\r\n                    renderItem={(item) => (\r\n                      <List.Item key={item} className=\"border-0\">\r\n                        <div\r\n                          style={{ height: \"32px\" }}\r\n                          className=\"d-flex align-items-center\"\r\n                        >\r\n                          {item}\r\n                        </div>\r\n                      </List.Item>\r\n                    )}\r\n                  />\r\n                </Col>\r\n                <Col span={6}>\r\n                  <Title level={4}>Unit Price</Title>\r\n                  <List\r\n                    dataSource={dataPrice}\r\n                    renderItem={(item) => (\r\n                      <List.Item key={item} className=\"pl-0 border-0\">\r\n                        <div\r\n                          style={{ height: \"32px\" }}\r\n                          className=\"d-flex align-items-center\"\r\n                        >\r\n                          {item}\r\n                        </div>\r\n                      </List.Item>\r\n                    )}\r\n                  />\r\n                </Col>\r\n                <Col span={6}>\r\n                  <Title level={4}>TOTAL</Title>\r\n                  <List\r\n                    dataSource={dataTotal}\r\n                    renderItem={(item) => (\r\n                      <List.Item key={item} className=\"pl-0 border-0\">\r\n                        <div\r\n                          style={{ height: \"32px\" }}\r\n                          className=\"d-flex align-items-center\"\r\n                        >\r\n                          {item}\r\n                        </div>\r\n                      </List.Item>\r\n                    )}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        <Divider />\r\n        <div className=\"d-flex justify-content-end\">\r\n          <Row\r\n            style={{ width: \"40%\" }}\r\n            className=\"d-flex justify-content-center\"\r\n          >\r\n            <Col span={12}>\r\n              <List\r\n                dataSource={dataGrandTotal}\r\n                renderItem={(item) => (\r\n                  <List.Item\r\n                    key={item.text}\r\n                    className=\"pl-0 border-0 d-flex justify-content-center\"\r\n                  >\r\n                    <div className=\"d-flex align-items-center \">\r\n                      <Text strong>{item.text}</Text>\r\n                      {item.tag && (\r\n                        <div className={classes.total_amt}>\r\n                          <Tag\r\n                            color={item.tag.color}\r\n                            className={`h-100 w-100 ${classes.tag}`}\r\n                          >\r\n                            {item.tag.text}\r\n                          </Tag>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </List.Item>\r\n                )}\r\n              />\r\n            </Col>\r\n            <Col span={12}>\r\n              <List\r\n                dataSource={dataGrandTotal}\r\n                renderItem={(item) => (\r\n                  <List.Item\r\n                    key={item.amt}\r\n                    className=\"pl-0 border-0 d-flex justify-content-center\"\r\n                  >\r\n                    <div className=\"d-flex align-items-center\">{item.amt}</div>\r\n                  </List.Item>\r\n                )}\r\n              />\r\n            </Col>\r\n            <Divider />\r\n\r\n            <Title strong level={2}>\r\n              Grand Total: S$100.00\r\n            </Title>\r\n          </Row>\r\n        </div>\r\n      </Card>\r\n\r\n      <div className={`d-flex justify-content-end ${classes.action}`}>\r\n        <Button>\r\n          <Icon component={PdfIcon} />\r\n          Download PDF\r\n        </Button>\r\n        \r\n          {/* <Button type=\"primary\" className={classes.send_btn} onClick={showModalHandler}>\r\n            <Icon component={SendIcon} />\r\n            Send\r\n          </Button> */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SendQuotation;\r\n","import React from 'react'\r\n\r\nimport { Form , Input , Row , Col , Card , Typography  , DatePicker } from 'antd'\r\n\r\nconst {Title , Text} = Typography;\r\nconst {TextArea} = Input;\r\n\r\nconst PaymentRecordForm = ({invoice_id}) => {\r\n  return (\r\n    <Card className=\"mt-3\">\r\n        <Title strong level={3}>\r\n          Payment Details\r\n        </Title>\r\n        <br />\r\n        <Row gutter={20}>\r\n          <Col span={12}>\r\n            {/* <Form.Item\r\n              label=\"Quotation Id\"\r\n              name=\"quotationId\"\r\n              \r\n            >\r\n              <Input value={quotation_id} disabled/>\r\n            </Form.Item> */}\r\n            <Form.Item\r\n              label=\"Invoice Id\"\r\n              name=\"invoice_id\"\r\n              \r\n            >\r\n              <Input value={invoice_id} disabled/>\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Payment Method\"\r\n              name=\"payment_method\"\r\n            >\r\n              <Input/>\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={12}>\r\n            <Form.Item\r\n              label=\"Payment Date\"\r\n              name=\"payment_date\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"required\",\r\n                },\r\n              ]}\r\n            >\r\n              <DatePicker/>\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Amount Collected\"\r\n              name=\"amount\"\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            \r\n          </Col>\r\n        </Row>\r\n\r\n        <Form.Item label=\"Remarks\" name=\"remarks\">\r\n          <TextArea rows={4} />\r\n        </Form.Item>\r\n\r\n       \r\n      </Card>\r\n  )\r\n}\r\n\r\nexport default PaymentRecordForm","import React from 'react'\r\n\r\nimport { Card , Typography } from 'antd'\r\n\r\nimport { message, Upload } from 'antd';\r\nimport { InboxOutlined } from '@ant-design/icons';\r\n\r\nconst { Dragger } = Upload;\r\n\r\nconst {Title} = Typography\r\n\r\nconst props = {\r\n  name: 'file',\r\n  multiple: true,\r\n  action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n  onChange(info) {\r\n    const { status } = info.file;\r\n    if (status !== 'uploading') {\r\n      console.log(info.file, info.fileList);\r\n    }\r\n    if (status === 'done') {\r\n      message.success(`${info.file.name} file uploaded successfully.`);\r\n    } else if (status === 'error') {\r\n      message.error(`${info.file.name} file upload failed.`);\r\n    }\r\n  },\r\n  onDrop(e) {\r\n    console.log('Dropped files', e.dataTransfer.files);\r\n  },\r\n};\r\nconst ImageUpload = () => {\r\n  return (\r\n    <Card className='mt-3'>\r\n      <Title strong level={3}>Images</Title>\r\n      <Dragger {...props}>\r\n        <p className=\"ant-upload-drag-icon\">\r\n          <InboxOutlined />\r\n        </p>\r\n        <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\r\n        <p className=\"ant-upload-hint\">\r\n        Files supported:pdf,image,video,etc\r\n        </p>\r\n      </Dragger>  \r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default ImageUpload","import Icon from \"@ant-design/icons\";\r\nimport React from \"react\";\r\n\r\nimport { submitTick } from \"assets/svg/icon\";\r\n\r\nconst SaveRecordPaymentsModal = (props) => {\r\n  return (\r\n    <div className=\"text-center\">\r\n      <Icon component={submitTick} />\r\n      <div>\r\n        <h1>Payment Recorded Successfully!</h1>\r\n        <p>\r\n          Payment of S$ 100.00 for Quotation Id HCI1234-QTN recorded\r\n          successfully!\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SaveRecordPaymentsModal;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"save_btn\":\"RecordPayments_save_btn__HQrzt\",\"actions\":\"RecordPayments_actions__CZY-T\"};","import React , {useState} from 'react'\r\n\r\nimport { Form , Col , Row , Button, message  } from 'antd'\r\nimport { ItemsAndServicesPageIcon } from 'assets/svg/icon'\r\nimport ImageUpload from '../ImageUpload'\r\nimport PageHeading from 'components/shared-components/PageHeading/PageHeading'\r\nimport PaymentRecordForm from './RecordPaymentsForm'\r\nimport Modal from 'components/UI/Modal'\r\nimport SaveRecordPaymentsModal from './SaveRecordPaymentsModal'\r\n\r\nimport classes from './RecordPayments.module.css'\r\nimport axios from 'axios'\r\nimport moment from 'moment'\r\nimport { useLocation, useHistory, useParams } from 'react-router-dom';\r\n\r\nconst RecordPayments = () => {\r\n  const history = useHistory();\r\n  const param = useParams();\r\n  const [showModal , setShowModal] = useState(false);\r\n\r\n  const finishHandler = (e) => {\r\n    console.log(e)\r\n    \r\n    axios\r\n    .post(\r\n        \"/api/tc/new-payment\",\r\n        {\r\n            invoice_id: param.invoice_id,\r\n            amount: e.amount || 0,\r\n            payment_method: e.payment_method,\r\n        },\r\n        {\r\n            headers: {\r\n                \"content-type\": \"application/json\"\r\n            },\r\n        }\r\n    )\r\n    .then((response) => {\r\n        if(!response.data.success){\r\n        message.warn(response.data.msg)\r\n        return;\r\n        }\r\n        message.success(\"Payment Recorded successfully\")\r\n        // savePaymentHandler()\r\n        history.goBack()\r\n    })\r\n    .catch((error) => {\r\n        console.log(error);\r\n    });\r\n  };\r\n\r\n  const savePaymentHandler = () => {\r\n    setShowModal(prev => !prev);\r\n  }\r\n\r\n  const savePaymentModal = (\r\n    <Modal onClose={savePaymentHandler}>\r\n      <SaveRecordPaymentsModal/>\r\n    </Modal>\r\n  )\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {showModal && savePaymentModal}\r\n      <div>\r\n        <PageHeading\r\n        // svg={ItemsAndServicesPageIcon}\r\n        title=\"Record Payments\"\r\n        />\r\n      </div>\r\n      <Form\r\n        layout=\"horizontal\"\r\n        onFinish={finishHandler}\r\n      >\r\n        \r\n\r\n        <Row gutter={20}>\r\n          <Col span={16}>\r\n            <PaymentRecordForm invoice_id={param.invoice_id || 0}/>\r\n          </Col>\r\n          {/* <Col span={8}>\r\n            <ImageUpload />\r\n          </Col> */}\r\n        </Row>\r\n      </Form>\r\n\r\n      <div className={`d-flex justify-content-end ${classes.actions}`}>\r\n        <Button onClick={()=>history.goBack()}>Back</Button>\r\n        <Button type=\"primary\" className={classes.save_btn}>Save</Button>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default RecordPayments","\r\nexport const ViewDetailsIcon = () =>(\r\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<g clip-path=\"url(#clip0_3143_14787)\">\r\n<path d=\"M10.1667 5.66667C13.325 5.66667 16.1417 7.44167 17.5167 10.25C16.1417 13.0583 13.325 14.8333 10.1667 14.8333C7.00833 14.8333 4.19167 13.0583 2.81667 10.25C4.19167 7.44167 7.00833 5.66667 10.1667 5.66667ZM10.1667 4C6 4 2.44167 6.59167 1 10.25C2.44167 13.9083 6 16.5 10.1667 16.5C14.3333 16.5 17.8917 13.9083 19.3333 10.25C17.8917 6.59167 14.3333 4 10.1667 4ZM10.1667 8.16667C11.3167 8.16667 12.25 9.1 12.25 10.25C12.25 11.4 11.3167 12.3333 10.1667 12.3333C9.01667 12.3333 8.08333 11.4 8.08333 10.25C8.08333 9.1 9.01667 8.16667 10.1667 8.16667ZM10.1667 6.5C8.1 6.5 6.41667 8.18333 6.41667 10.25C6.41667 12.3167 8.1 14 10.1667 14C12.2333 14 13.9167 12.3167 13.9167 10.25C13.9167 8.18333 12.2333 6.5 10.1667 6.5Z\" fill=\"#455560\"/>\r\n</g>\r\n<defs>\r\n<clipPath id=\"clip0_3143_14787\">\r\n<rect width=\"20\" height=\"20\" fill=\"white\"/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n\r\n)\r\n\r\nexport const DeleteIcon = () => (\r\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<g clip-path=\"url(#clip0_3143_14792)\">\r\n<path d=\"M13.1667 8V16.3333H6.5V8H13.1667ZM11.9167 3H7.75L6.91667 3.83333H4V5.5H15.6667V3.83333H12.75L11.9167 3ZM14.8333 6.33333H4.83333V16.3333C4.83333 17.25 5.58333 18 6.5 18H13.1667C14.0833 18 14.8333 17.25 14.8333 16.3333V6.33333Z\" fill=\"#455560\"/>\r\n</g>\r\n<defs>\r\n<clipPath id=\"clip0_3143_14792\">\r\n<rect width=\"20\" height=\"20\" fill=\"white\"/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n\r\n)\r\n\r\nexport const SendQuotationIcon = () => (\r\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<g clip-path=\"url(#clip0_3143_14797)\">\r\n<path d=\"M11.2167 8.01667L11.9833 8.78333L4.43333 16.3333H3.66667V15.5667L11.2167 8.01667ZM14.2167 3C14.0083 3 13.7917 3.08333 13.6333 3.24167L12.1083 4.76667L15.2333 7.89167L16.7583 6.36667C17.0833 6.04167 17.0833 5.51667 16.7583 5.19167L14.8083 3.24167C14.6417 3.075 14.4333 3 14.2167 3ZM11.2167 5.65833L2 14.875V18H5.125L14.3417 8.78333L11.2167 5.65833Z\" fill=\"#455560\"/>\r\n</g>\r\n<defs>\r\n<clipPath id=\"clip0_3143_14797\">\r\n<rect width=\"20\" height=\"20\" fill=\"white\"/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n\r\n)\r\n\r\nexport const RecordPaymentsIcon = () => (\r\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<g clip-path=\"url(#clip0_3143_14802)\">\r\n<path d=\"M15.8334 11.6668V5.00016C15.8334 4.0835 15.0834 3.3335 14.1667 3.3335H2.50004C1.58337 3.3335 0.833374 4.0835 0.833374 5.00016V11.6668C0.833374 12.5835 1.58337 13.3335 2.50004 13.3335H14.1667C15.0834 13.3335 15.8334 12.5835 15.8334 11.6668ZM14.1667 11.6668H2.50004V5.00016H14.1667V11.6668ZM8.33337 5.8335C6.95004 5.8335 5.83337 6.95016 5.83337 8.3335C5.83337 9.71683 6.95004 10.8335 8.33337 10.8335C9.71671 10.8335 10.8334 9.71683 10.8334 8.3335C10.8334 6.95016 9.71671 5.8335 8.33337 5.8335ZM19.1667 5.8335V15.0002C19.1667 15.9168 18.4167 16.6668 17.5 16.6668H3.33337V15.0002H17.5V5.8335H19.1667Z\" fill=\"#455560\"/>\r\n</g>\r\n<defs>\r\n<clipPath id=\"clip0_3143_14802\">\r\n<rect width=\"20\" height=\"20\" fill=\"white\"/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n\r\n)\r\n\r\nexport const CreateContractIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<g clip-path=\"url(#clip0_886_17351)\">\r\n<path d=\"M14 2H6C4.9 2 4 2.9 4 4V20C4 21.1 4.9 22 6 22H18C19.1 22 20 21.1 20 20V8L14 2ZM6 20V4H13V8H18V20H6ZM11 19H13V18H14C14.55 18 15 17.55 15 17V14C15 13.45 14.55 13 14 13H11V12H15V10H13V9H11V10H10C9.45 10 9 10.45 9 11V14C9 14.55 9.45 15 10 15H13V16H9V18H11V19Z\" fill=\"#455560\"/>\r\n</g>\r\n<defs>\r\n<clipPath id=\"clip0_886_17351\">\r\n<rect width=\"24\" height=\"24\" fill=\"white\"/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n\r\n)","import React from \"react\";\r\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\r\n// import EllipsisDropdown from 'components/shared-components/EllipsisDropdown'\r\nimport Icon from \"@ant-design/icons\";\r\nimport EllipsisDropdown from \"components/shared-components/EllipsisDropdown/index\";\r\nimport { Menu, message } from \"antd\";\r\nimport { ViewDetailsIcon, CreateContractIcon, SendQuotationIcon } from \"./ActionIcons\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { InquiryStatusIcon } from \"views/app-views/InquiryManagement/ActionsIcons\";\r\n\r\nconst Actions = ({ contract_id, setOpenContractModal, record, getData, setQuoteData, updateStatus }) => {\r\n  const history = useHistory();\r\n  const match = useRouteMatch();\r\n\r\n  const viewContractHandler = () => {\r\n    history.push(`${match.path}/view-contract-details/${contract_id}`);\r\n    // /contracts/view-contract-details/\r\n  }\r\n\r\n  const viewContractDetailsHandler = () => {\r\n    history.push(`${match.path}/view-contract-details/${contract_id}`);\r\n  }\r\n\r\n  const editContractHandler = () => {\r\n    // history.push(`${match.path}/edit-contract/${contract_id}`);\r\n    history.push(`${match.path}/view-contract-details/${contract_id}`);\r\n  }\r\n  const createContractHandler = () => {\r\n    setOpenContractModal(true)\r\n    setQuoteData(record)\r\n  }\r\n\r\n\r\n  return (\r\n    <EllipsisDropdown\r\n      menu={\r\n        <Menu>\r\n          {/* <Menu.Item onClick={createContractHandler} disabled={record.status === 'Completed'}>\r\n            <span className=\"d-flex align-items-center\">\r\n              <Icon className=\"mr-2\" component={CreateContractIcon} /> Create Work Order\r\n            </span>\r\n          </Menu.Item> */}\r\n\r\n          {/* <Menu.Item onClick={() => {\r\n            updateStatus(record,\"Completed\");\r\n          }} disabled={record.status === 'Completed'}>\r\n            <span className=\"d-flex align-items-center\">\r\n              <Icon className=\"mr-2\" component={InquiryStatusIcon} /> Mark as Complete\r\n            </span>\r\n          </Menu.Item> */}\r\n\r\n          {/* <Menu.Item onClick={() => {\r\n            updateStatus(record,\"Active\");\r\n          }} disabled={record.status !== 'Completed'}>\r\n            <span className=\"d-flex align-items-center\">\r\n              <Icon className=\"mr-2\" component={SendQuotationIcon} /> Mark as Not Complete\r\n            </span>\r\n          </Menu.Item> */}\r\n\r\n          <Menu.Item onClick={viewContractHandler}>\r\n            <span className=\"d-flex align-items-center\">\r\n              <Icon className=\"mr-2\" component={ViewDetailsIcon} />\r\n              View Contract Details\r\n            </span>\r\n          </Menu.Item>\r\n        </Menu>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default Actions;\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport { Table, Button, Tag, Input, Modal, DatePicker, TimePicker, message, Select, InputNumber } from 'antd';\r\nimport Avatar from 'assets/Avatar2.png'\r\nimport Actions from './Actions';\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { useLocation } from 'react-router-dom';\r\nimport { set } from 'lodash';\r\n\r\n\r\n\r\nconst ContractTable = ({ setPage, searchText, statuses, selectedFilter, selectedCustomerFilter, selectedJobsiteFilter, selectedTypeFilter, selectedStatusFilter }) => {\r\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\r\n  const [contractsData, setContractsData] = useState([]);\r\n  const [openContractModal, setOpenContractModal] = useState(false);\r\n  const [commencementDate, setCommencementDate] = useState(null);\r\n  const [quoteData, setQuoteData] = useState({});\r\n  const [expiryDate, setExpiryDate] = useState(null);\r\n  const [direct_to_pc, setDirect_to_pc] = useState('');\r\n  const [co_regn_no, setCo_regn_no] = useState('');\r\n  const [contract_number, setContract_number] = useState('');\r\n  const location = useLocation();\r\n  const [wbs_element, setWbs_element] = useState('');\r\n  const [network_activity, setNetwork_activity] = useState('');\r\n  const [officer_in_charge, setOfficer_in_charge] = useState(null);\r\n  const [jobsData, setJobsData] = useState([]);\r\n  const [openJobModal, setOpenJobModal] = useState(false);\r\n  const [description, setDescription] = useState('');\r\n  const [quantity, setQuantity] = useState(null);\r\n  const [unitPrice, setUnitPrice] = useState(null);\r\n  const { TextArea } = Input;\r\n  const [allUsers, setAllUsers] = useState([])\r\n  const customer_id = localStorage.getItem(\"customer_id\");\r\n\r\n  const removeJob = (record) => {\r\n    let jobs = jobsData.filter((e) => e != record);\r\n    setJobsData(jobs)\r\n  }\r\n  const onChangeDesc = (event) => {\r\n    setDescription(event.target.value)\r\n  }\r\n\r\n  const onChangeProvisional = (value) => {\r\n    setQuantity(value)\r\n  }\r\n\r\n  const onChangeUnit = (value) => {\r\n    setUnitPrice(value)\r\n  }\r\n const columns2 = [\r\n    {\r\n      title: 'SR NO',\r\n      dataIndex: 'sr_no',\r\n    },\r\n    {\r\n      title: 'DESCRIPTION',\r\n      dataIndex: 'name',\r\n    },\r\n    {\r\n      title: 'QTY',\r\n      dataIndex: 'quantity',\r\n    },\r\n    {\r\n      title: 'UNIT PRICE',\r\n      dataIndex: 'price',\r\n    },\r\n    {\r\n      title: 'SUBTOTAL',\r\n      dataIndex: 'total',\r\n    },\r\n    {\r\n      title: 'Action',\r\n      dataIndex: '',\r\n      render: (_,record) => {\r\n        return <Button type=\"danger\" className='mt-2' onClick={()=>{removeJob(record)}}>Remove</Button>\r\n      },\r\n    },\r\n  ];\r\n\r\n    const handleJobOk = () => {\r\n      if(!description) message.error(\"Please fill Description\");\r\n      if(!quantity) message.error(\"Please fill Quantity\");\r\n      if(!unitPrice) message.error(\"Please fill Unit Price\");\r\n  \r\n      setJobsData([...jobsData, {\r\n        sr_no: jobsData.length+1,\r\n        name: description,\r\n        quantity: quantity,\r\n        price: unitPrice,\r\n        total: (+quantity * +unitPrice) || 0\r\n        // total: (+jobDetailsTemp.provisionalQty * +jobDetailsTemp.unitPrice) || 0\r\n      }]);\r\n      setDescription('');\r\n      setQuantity(null);  \r\n      setUnitPrice(null);\r\n      setOpenJobModal(false);\r\n    }\r\n  const getAllUsers = () => {\r\n    axios({\r\n      method: 'post',\r\n      url: \"/api/tc/get-users\",\r\n      // data: values,\r\n\r\n    }).then(function (response) {\r\n      console.log(response.data);\r\n      if (response.data.success) {\r\n        setAllUsers(response.data.data)\r\n\r\n      }\r\n    }).catch(function (error) {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  const [remindersData, setRemindersData] = useState([]);\r\n  const removeReminder = (record) => {\r\n    let newRemindersData = remindersData.filter((elem) => elem.sr_no !== record.sr_no);\r\n    setRemindersData(newRemindersData);\r\n  }\r\n\r\n\r\n  const selectChangeHandler = (newSelectedRowKeys) => {\r\n    setSelectedRowKeys(newSelectedRowKeys);\r\n  };\r\n\r\n  const handleContractCancel = () => {\r\n    setOpenContractModal(false);\r\n  };\r\n\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Contract Id',\r\n      dataIndex: 'id',\r\n    },\r\n    {\r\n      title: 'Customer Name',\r\n      dataIndex: 'customer_name',\r\n      // defaultSortOrder: 'descend',\r\n      // sorter: (a, b) => a.customerName - b.customerName,\r\n    },\r\n    {\r\n      title: 'Jobsite',\r\n      dataIndex: 'jobsite_name',\r\n\r\n    },\r\n    {\r\n      title: 'Contract Type',\r\n      dataIndex: 'contract_type',\r\n\r\n    },\r\n    {\r\n      title: 'Commence On',\r\n      dataIndex: 'commence_on',\r\n\r\n    },\r\n    // {\r\n    //   title: 'Expired On',\r\n    //   dataIndex: 'expire_on',\r\n\r\n    // },\r\n    {\r\n      title: 'Status',\r\n      dataIndex: 'status',\r\n      render: (_, record) => {\r\n        const statusStyles = {\r\n          color: \"#00AB6F\",\r\n          backgroundColor: \"#EDFFF9\",\r\n          padding: \"4px 8px\",\r\n          borderRadius: \"6px\",\r\n          fontWeight: \"600\",\r\n          fontSize: \"14px\",\r\n        };\r\n\r\n        if (record.status === \"Completed\") {\r\n          return <span style={statusStyles}>Completed</span>;\r\n        }\r\n        const isBeforeToday = moment(record.start_date, \"YYYY-MM-DD\").isBefore(moment().startOf(\"day\"));\r\n\r\n        return (\r\n          <span style={statusStyles}>\r\n            {isBeforeToday ? \"Ongoing\" : \"Upcoming\"}\r\n          </span>\r\n        );\r\n        // if(record.status.toUpperCase()==='EXPIRED') return <span style={{color: '#F53434', backgroundColor: '#FFF2F2', padding: '4px 8px', borderRadius:'6px', fontWeight:'600', fontSize: '14px'}}>Expired</span>\r\n        // else if(record.status.toUpperCase()==='INACTIVE') return <span style={{color: '#F53434', backgroundColor: '#FFF2F2', padding: '4px 8px', borderRadius:'6px', fontWeight:'600', fontSize: '14px'}}>Inactive</span>\r\n        // else return <span style={{color: \"#00AB6F\", backgroundColor: \"#EDFFF9\", padding: '4px 8px', borderRadius:'6px', fontWeight:'600', fontSize: '14px'}}>Active</span>\r\n      }\r\n    },\r\n    {\r\n      title: 'Action',\r\n      dataIndex: '',\r\n      key: 'x',\r\n      render: (_, record) => <Actions updateStatus={updateStatus} setQuoteData={setQuoteData} contract_id={record.id} record={record} setOpenContractModal={setOpenContractModal} getData={getData} />,\r\n    },\r\n  ];\r\n  const rowSelection = {\r\n    selectedRowKeys,\r\n    onChange: selectChangeHandler\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .post(\r\n        \"/api/tc/get-contracts\",\r\n        {\r\n          page_index: 1,\r\n          page_size: 10,\r\n          // statuses: [\"ACTIVE\", \"INACTIVE\"],\r\n          statuses: null,\r\n          search: searchText ? searchText : null,\r\n          customer_id: selectedCustomerFilter || null,\r\n          job_site_id: selectedJobsiteFilter || null,\r\n          status: selectedStatusFilter || null,\r\n          contract_type: selectedTypeFilter || null,\r\n          customer_id: customer_id\r\n        },\r\n      )\r\n      .then((response) => {\r\n        let res = response.data.data.data;\r\n        console.log(res);\r\n\r\n        let fdata = res.map((elem, ind) => {\r\n          return {\r\n            ...elem,\r\n            key: elem.id,\r\n            id: elem.id,\r\n            customer_name: elem.customer_name || elem.tc_customer_id,\r\n            jobsite_name: elem.job_site_name || (elem.tc_customer_job_site_id || '-'),\r\n            contract_type: elem.type,\r\n            commence_on: moment(elem.start_date).format(\"DD-MM-YYYY\"),\r\n            expire_on: moment(elem.end_date).format(\"DD-MM-YYYY\"),\r\n            contract_type: elem.type,\r\n            status: elem.status,\r\n            start_date: elem.start_date,\r\n          };\r\n        });\r\n        setContractsData(fdata);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, [searchText]);\r\n\r\n  useEffect(() => {\r\n    getAllUsers()\r\n    axios\r\n      .post(\r\n        \"/api/tc/get-contracts\",\r\n        {\r\n          page_index: 1,\r\n          page_size: 10,\r\n          statuses: null,\r\n          search: searchText ? searchText : null,\r\n          customer_id: selectedCustomerFilter || null,\r\n          job_site_id: selectedJobsiteFilter || null,\r\n          status: selectedStatusFilter || null,\r\n          contract_type: selectedTypeFilter || null,\r\n          customer_id: customer_id\r\n        },\r\n      )\r\n      .then((response) => {\r\n        let res = response.data.data.data;\r\n        console.log(res);\r\n\r\n        let fdata = res.map((elem, ind) => {\r\n          return {\r\n            ...elem,\r\n            key: elem.id,\r\n            id: elem.id,\r\n            customer_name: elem.customer_name || elem.tc_customer_id,\r\n            jobsite_name: elem.job_site_name || (elem.tc_customer_job_site_id || '-'),\r\n            contract_type: elem.type,\r\n            commence_on: moment(elem.start_date).format(\"DD-MM-YYYY\"),\r\n            expire_on: moment(elem.end_date).format(\"DD-MM-YYYY\"),\r\n            contract_type: elem.type,\r\n            status: elem.status,\r\n            start_date: elem.start_date,\r\n          };\r\n        });\r\n        setContractsData(fdata);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, [selectedFilter]);\r\n\r\n\r\n  const getData = () => {\r\n    axios\r\n      .post(\r\n        \"/api/tc/get-contracts\",\r\n        {\r\n          page_index: 1,\r\n          page_size: 10,\r\n          statuses: null,\r\n          search: searchText ? searchText : null,\r\n          customer_id: selectedCustomerFilter || null,\r\n          job_site_id: selectedJobsiteFilter || null,\r\n          status: selectedStatusFilter || null,\r\n          contract_type: selectedTypeFilter || null,\r\n          customer_id: customer_id\r\n        },\r\n      )\r\n      .then((response) => {\r\n        let res = response.data.data.data;\r\n        console.log(res);\r\n\r\n        let fdata = res.map((elem, ind) => {\r\n          return {\r\n            ...elem,\r\n            key: elem.id,\r\n            id: elem.id,\r\n            customer_name: elem.customer_name || elem.tc_customer_id,\r\n            jobsite_name: elem.job_site_name || (elem.tc_customer_job_site_id || '-'),\r\n            contract_type: elem.type,\r\n            commence_on: moment(elem.start_date).format(\"DD-MM-YYYY\"),\r\n            expire_on: moment(elem.end_date).format(\"DD-MM-YYYY\"),\r\n            contract_type: elem.type,\r\n            status: elem.status,\r\n            start_date: elem.start_date,\r\n          };\r\n        });\r\n        setContractsData(fdata);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const commencementDateChange = (date) => {\r\n    // contractData.date_of_commencement = date;\r\n    // let newContractData = contractData;\r\n    // newContractData.date_of_commencement = date;\r\n    // console.log(newContractData);\r\n\r\n    setCommencementDate(date);\r\n  }\r\n\r\n  const expiryDateChange = (date) => {\r\n    setExpiryDate(date);\r\n  }\r\n\r\n  const handleAddReminder = () => {\r\n    setRemindersData([...remindersData, {\r\n      sr_no: remindersData.length + 1,\r\n      date: null,\r\n      title: '',\r\n      description: '',\r\n    }]);\r\n  };\r\n  const reminderColumns = [\r\n    {\r\n      title: 'Sr. No.',\r\n      dataIndex: 'sr_no',\r\n    },\r\n    {\r\n      title: 'Date',\r\n      dataIndex: 'date',\r\n      render: (_, record) => {\r\n        return (\r\n          <div>\r\n            <DatePicker value={record.date} className='w-100' onChange={(e) => {\r\n              let data = remindersData\r\n              let index = remindersData.findIndex((elem) => elem === record)\r\n              data[index].date = e\r\n              setRemindersData([...data])\r\n            }} />\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: 'Time',\r\n      dataIndex: 'time',\r\n      render: (_, record) => {\r\n        return (\r\n          <div>\r\n            <TimePicker value={record.time} className='w-100' format={'HH:mm A'} use12Hours={true} onChange={(e) => {\r\n              let data = remindersData\r\n              let index = remindersData.findIndex((elem) => elem === record)\r\n              data[index].time = e;\r\n              setRemindersData([...data])\r\n            }} />\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: 'Title',\r\n      dataIndex: 'title',\r\n      render: (_, record) => {\r\n        return (\r\n          <div>\r\n            <Input value={record.title} className='w-100' onChange={(e) => {\r\n              let data = remindersData\r\n              let index = remindersData.findIndex((elem) => elem === record)\r\n              data[index].title = e.target.value\r\n              setRemindersData([...data])\r\n            }} />\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: 'Content',\r\n      dataIndex: 'description',\r\n      render: (_, record) => {\r\n        return (\r\n          <div>\r\n            <Input value={record.description} className='w-100' onChange={(e) => {\r\n              let data = remindersData\r\n              let index = remindersData.findIndex((elem) => elem === record)\r\n              data[index].description = e.target.value\r\n              setRemindersData([...data])\r\n            }} />\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: 'Action',\r\n      dataIndex: '',\r\n      key: 'x',\r\n      render: (_, record) => <Button type='danger' onClick={() => { removeReminder(record) }} className='font-weight-bold'>remove</Button>,\r\n    },\r\n  ];\r\n\r\n\r\n  const handleCancel = () => {\r\n    setOpenContractModal(false);\r\n    setOpenJobModal(false);\r\n    setCommencementDate(null);\r\n    setExpiryDate(null);\r\n    setRemindersData([]);\r\n    setDirect_to_pc('');\r\n    setCo_regn_no('');\r\n    setContract_number('');\r\n    setWbs_element('');\r\n    setNetwork_activity('');\r\n    setOfficer_in_charge('');\r\n    setDescription('');\r\n    setQuantity(null);\r\n    setUnitPrice(null);\r\n    setJobsData([]);\r\n  };\r\n\r\n  const handleContractOk = () => {\r\n    console.log(quoteData);\r\n    if (!commencementDate || !expiryDate || !direct_to_pc || !co_regn_no || !contract_number || !wbs_element || !network_activity || !officer_in_charge) {\r\n      message.error('Please fill all the fields');\r\n      return;\r\n    }\r\n    if(jobsData.length === 0){\r\n      message.error('Please add job details');\r\n      return;\r\n    }\r\n\r\n    // let data = quotationsData.find((elem) => elem.id === quoteData.quotation_id);\r\n    // console.log(data);\r\n    // date: schema.date(),\r\n    // direct_to_pc: schema.string(),\r\n    // co_regn_no: schema.string(),\r\n    // contract_number: schema.string(),\r\n    // wbs_element: schema.string(),\r\n    // network_activity: schema.string(),\r\n    // officer_in_charge: schema.number(),\r\n    // tc_customer_id: schema.number(),\r\n    // tc_customer_job_site_id: schema.number.optional(),\r\n    // tc_contract_id: schema.number(),\r\n    // tc_quotation_id: schema.number.optional(),\r\n    // start_date: schema.date(),\r\n    // end_date: schema.date(),\r\n    // reminders: schema.array().members(schema.object().anyMembers()),\r\n    // status: schema.string.optional(),\r\n    axios\r\n      .post(\r\n        \"/api/tc/new-work-order\",\r\n        {\r\n          tc_quotation_id: quoteData.quotation_id,\r\n          date: moment(),\r\n          tc_contract_id: quoteData.id,\r\n          tc_customer_id: quoteData.tc_customer_id,\r\n          tc_customer_job_site_id: quoteData.tc_customer_job_site_id || null,\r\n          tc_quotation_id: quoteData.tc_quotation_id,\r\n          start_date: moment(commencementDate),\r\n          end_date: moment(expiryDate),\r\n          reminders: remindersData,\r\n          direct_to_pc: direct_to_pc,\r\n          co_regn_no: co_regn_no,\r\n          contract_number: contract_number,\r\n          wbs_element: wbs_element,\r\n          network_activity: network_activity,\r\n          officer_in_charge: officer_in_charge,\r\n          line_items: jobsData,\r\n          // reminders: remindersData,\r\n          // type: contractType,\r\n          status: 'Active'\r\n        },\r\n      )\r\n      .then((response) => {\r\n        console.log(response);\r\n        setCommencementDate(null);\r\n        setExpiryDate(null);\r\n\r\n        setRemindersData([]);\r\n        setOpenContractModal(false);\r\n        setDirect_to_pc('');\r\n        setCo_regn_no('');\r\n        setContract_number('');\r\n        setWbs_element('');\r\n        setNetwork_activity('');\r\n        setOfficer_in_charge('');\r\n\r\n\r\n\r\n        message.success('Word Order created successfully');\r\n        // updateQuotationStatus();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setOpenContractModal(false);\r\n        message.error('Work Order creation failed');\r\n      });\r\n  };\r\n  const updateStatus = (record, status) => {\r\n\r\n\r\n    // id: schema.number(),\r\n    // tc_customer_id: schema.number(),\r\n    // tc_customer_job_site_id: schema.number.optional(),\r\n    // tc_quotation_id: schema.number(),\r\n    // start_date: schema.date(),\r\n    // end_date: schema.date(),\r\n    // reminder_date: schema.date.optional(),\r\n    // reminders: schema.array().members(schema.object().anyMembers()),\r\n    // type: schema.string(),\r\n    // status: schema.string.optional(),\r\n    axios({\r\n      method: 'post',\r\n      url: \"/api/tc/update-contract\",\r\n      data: {\r\n        id: record.id,\r\n        tc_customer_id: record.tc_customer_id,\r\n        tc_customer_job_site_id: record.tc_customer_job_site_id,\r\n        tc_quotation_id: record.tc_quotation_id,\r\n        start_date: moment(record.start_date, \"YYYY-MM-DD\"),\r\n        end_date: moment(record.end_date, \"YYYY-MM-DD\"),\r\n        // reminder_date:  ,\r\n        reminders: JSON.parse(record.reminders),\r\n        type: record.type,\r\n        status: status,\r\n      },\r\n\r\n    }).then(function (response) {\r\n      if (response.data.success) {\r\n        message.success(\"Contract Status Updated Successfully\")\r\n\r\n        getData();\r\n      } else {\r\n        message.error(response.data.msg)\r\n      }\r\n    }).catch(function (error) {\r\n      console.log(error);\r\n    });\r\n  }\r\n  const handleJobCancel = () => {\r\n    setOpenJobModal(false);\r\n  };\r\n  const funOpenJobModal = () => {\r\n    setOpenJobModal(true)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Table columns={columns} dataSource={contractsData} />\r\n      <Modal\r\n        visible={openContractModal}\r\n        centered\r\n        maskClosable\r\n        width={900}\r\n        onCancel={handleCancel}\r\n        title={'Create Work Order'}\r\n        footer={[\r\n          <Button style={{ color: '#F5F5F5' }} type='primary' className='font-weight-bold' onClick={handleContractOk}>Save</Button>,\r\n          <Button style={{ color: '#000B23' }} onClick={handleContractCancel} className='font-weight-bold'>Cancel</Button>,\r\n        ]}\r\n      >\r\n        <div className='w-100'>\r\n          <h4 className=\"mb-2 mt-4\">Date Of Commencement of Work</h4>\r\n          <DatePicker value={commencementDate} onChange={commencementDateChange} />\r\n        </div>\r\n\r\n        <div className='w-100'>\r\n          <h4 className=\"mb-2 mt-4\">Date of Expiration of Work</h4>\r\n          <DatePicker value={expiryDate} onChange={expiryDateChange} />\r\n        </div>\r\n        <div className='w-100'>\r\n          <h4 className=\"mb-2 mt-4\">Direct to PC</h4>\r\n          <Input value={direct_to_pc} onChange={(e) => setDirect_to_pc(e.target.value)} />\r\n\r\n\r\n        </div>\r\n\r\n        <div className='w-100'>\r\n          <h4 className=\"mb-2 mt-4\">CO Regn No.</h4>\r\n          <Input value={co_regn_no} onChange={(e) => setCo_regn_no(e.target.value)} />\r\n        </div>\r\n\r\n        <div className='w-100'>\r\n          <h4 className=\"mb-2 mt-4\">Contract Number</h4>\r\n          <Input value={contract_number} onChange={(e) => setContract_number(e.target.value)} />\r\n        </div>\r\n\r\n        <div className='w-100'>\r\n          <h4 className=\"mb-2 mt-4\">WBS Element</h4>\r\n          <Input value={wbs_element} onChange={(e) => setWbs_element(e.target.value)} />\r\n        </div>\r\n\r\n        <div className='w-100'>\r\n          <h4 className=\"mb-2 mt-4\">Network Activity</h4>\r\n          <Input value={network_activity} onChange={(e) => setNetwork_activity(e.target.value)} />\r\n        </div>\r\n\r\n        <div className='w-100'>\r\n          <h4 className=\"mb-2 mt-4\">Officer in Charge</h4>\r\n          {/* <Input type='number' value={officer_in_charge} onChange={(e) => setOfficer_in_charge(e.target.value)}\r\n                \r\n              /> */}\r\n          <Select\r\n            // suffixIcon={<AddUserIcon/>}\r\n            showSearch\r\n            style={{\r\n              width: 200,\r\n            }}\r\n            // mode='multiple'\r\n            placeholder=\"Officer in Charge\"\r\n            optionFilterProp=\"children\"\r\n            filterOption={(input, option) => (option?.title ?? '').toString().toLowerCase()?.includes(input?.toLowerCase())}\r\n            filterSort={(optionA, optionB) =>\r\n              (optionA?.label ?? '').toString().toLowerCase().localeCompare((optionB?.label ?? '').toString().toLowerCase())\r\n            }\r\n            value={officer_in_charge}\r\n            onChange={(e) => setOfficer_in_charge(e)}\r\n          >\r\n            {allUsers.map((val, id) => (\r\n              <Select.Option title={val.name} key={id} value={val?.id}>{val.name}</Select.Option>\r\n            ))}\r\n            {/* <Select.Option value={1}>John Smith</Select.Option>\r\n                                            <Select.Option value={2}>Jane Cooper</Select.Option> */}\r\n          </Select>\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n          <Table columns={columns2} dataSource={jobsData} />\r\n          <div className=\"d-flex justify-content-end\">\r\n            <Button type=\"primary\" onClick={funOpenJobModal} className='mt-2'>Add Job</Button>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <h4 className=\"mb-2 mt-4\">Reminders</h4>\r\n          <Table columns={reminderColumns} dataSource={remindersData} />\r\n          <Button type='primary' className='font-weight-bold mt-2' onClick={handleAddReminder}>Add Reminder</Button>\r\n        </div>\r\n\r\n      </Modal>\r\n      <Modal\r\n        visible={openJobModal}\r\n        centered\r\n        maskClosable\r\n        onCancel={handleCancel}\r\n        title={'Job Details'}\r\n        footer={[\r\n            <Button type=\"primary\" className='font-weight-bold' onClick={handleJobOk}>Save</Button>,\r\n            <Button style={{ color: '#000B23' }} onClick={()=>{\r\n              setDescription('');\r\n              setQuantity(null);  \r\n              setUnitPrice(null);\r\n              setOpenJobModal(false);\r\n            }} className='font-weight-bold'>Cancel</Button>,\r\n      ]}\r\n      >   \r\n        <div>\r\n            <h4 className=\"mb-2\">Description</h4>\r\n            <TextArea rows={4} onChange={onChangeDesc} value={description}/>\r\n        </div>\r\n\r\n        <div>\r\n            <h4 className=\"mb-2 mt-2\"> Quantity</h4>\r\n            <InputNumber min={0} onChange={onChangeProvisional} value={quantity} />\r\n        </div>\r\n\r\n        <div>\r\n            <h4 className=\"mb-2 mt-2\">Unit Price</h4>\r\n            <InputNumber min={0} onChange={onChangeUnit} value={unitPrice} />\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ContractTable","import { Button, Dropdown, Menu, Space, Select, Drawer } from 'antd'\r\nimport React, { useState, useEffect } from 'react'\r\nimport SearchBox from 'components/shared-components/SearchBox';\r\nimport axios from 'axios';\r\nimport exportIcon from \"assets/svg/exportIcon.svg\";\r\nimport PageHeading from 'components/shared-components/PageHeading/PageHeading';\r\nimport Icon from \"@ant-design/icons\"\r\nimport { FilterIcon, ItemsAndServicesIcon } from \"assets/svg/icon\";\r\nimport ContractTable from './ContractTable';\r\nimport { CSVLink } from \"react-csv\";\r\nimport moment from \"moment\";\r\n\r\n// import { Link } from 'react-router-dom';\r\n// import plusIcon from \"assets/svg/plus.svg\";\r\n// import UserManagementIcon from \"assets/svg/usermManagementPage.svg\";\r\n// import filterIcon from \"assets/svg/filterIcon.svg\";\r\n// import Filter from 'views/app-views/UserManagement/UserList/Filter';\r\n\r\n\r\nfunction Contracts() {\r\n\r\n  const [searchText, setSearchText] = useState('')\r\n  const [page, setPage] = useState(1)\r\n  const [statusFilter, setStatusFilter] = useState([])\r\n  const [allContractsData, setAllContractsData] = useState([])\r\n  const [current, setCurrent] = useState(['All'])\r\n\r\n  const [allJobsites , setAllJobsites] = useState(false);\r\n  const [allCustomers , setAllCustomers] = useState(false);\r\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n  const [selectedCustomerFilter , setSelectedCustomerFilter] = useState(false);\r\n  const [selectedJobsiteFilter , setSelectedJobsiteFilter] = useState(false);\r\n  const [selectedTypeFilter , setSelectedTypeFilter] = useState(false);\r\n  const [selectedStatusFilter , setSelectedStatusFilter] = useState(false);\r\n  const [selectedFilter , setSelectedFilter] = useState(false);\r\n  const tok = localStorage.getItem('token')\r\n  const customer_id = localStorage.getItem(\"customer_id\");\r\n\r\n  const headers = [\r\n    { label: \"Sr. No\", key: \"sr_no\" },\r\n    { label: \"Contract ID\", key: \"id\" },\r\n    { label: \"Customer Name\", key: \"customer_name\" },\r\n    { label: \"Jobsite\", key: \"jobsite_name\" },\r\n    { label: \"Contract Type\", key: \"contract_type\" },\r\n    { label: \"Commence On\", key: \"commence_on\" },\r\n    { label: \"Expired On\", key: \"expire_on\" },\r\n    { label: \"Status\", key: \"status\" }\r\n  ];\r\n\r\n  const handleFilterClick = (e) => {\r\n    setCurrent([e.key])\r\n    if(e.key === 'ACTIVE') {\r\n      setStatusFilter(['ACTIVE'])\r\n    }else if(e.key === 'INACTIVE') {\r\n      setStatusFilter(['INACTIVE'])\r\n    } else {\r\n      setStatusFilter([])\r\n    }\r\n  }\r\n\r\n  const getAllJobsites = () => {\r\n    axios({\r\n      method: 'post',\r\n      url: \"/api/tc/get-customer-job-sites\",\r\n      data: {\r\n        page_index: 1,\r\n        page_size: 100000,\r\n        customer_id: null,\r\n        search : null\r\n      }\r\n    }).then((response) => {\r\n        if (response.data.success) {\r\n          setAllJobsites(response.data.data.data)\r\n        }\r\n        console.log(\"Job sites data fetched\")\r\n        console.log(response.data.data.data)\r\n    }).catch((err) => {\r\n        console.log(err)\r\n    });\r\n  };\r\n  \r\n  const getAllCustomers = () => {\r\n    axios({\r\n      method: 'post',\r\n      url: \"/api/tc/get-customers\",\r\n      data: {\r\n        page_index: 1,\r\n        page_size: 100000,\r\n        customer_id: null,\r\n        search : null\r\n      }\r\n    }).then((response) => {\r\n        if (response.data.success) {\r\n          setAllCustomers(response.data.data.data)\r\n        }\r\n        console.log(\"Customers data fetched\")\r\n        console.log(response.data.data.data)\r\n    }).catch((err) => {\r\n        console.log(err)\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n    .post(\r\n      \"/api/tc/get-contracts\",\r\n      {\r\n        page_index: 1,\r\n        page_size: 100000,\r\n        search : null,\r\n        customer_id: customer_id\r\n      },\r\n    )\r\n    .then((response) => {\r\n      let res = response.data.data.data;\r\n\r\n      let fdata = res.map((elem, index) => {\r\n        return {\r\n          key: elem.id,\r\n          id: elem.id,\r\n          customer_name: elem.customer_name || elem.tc_customer_id,\r\n          jobsite_name: elem.job_site_name || (elem.tc_customer_job_site_id || '-'),\r\n          contract_type: elem.type,\r\n          commence_on: moment(elem.start_date).format(\"DD-MM-YYYY\"),\r\n          expire_on: moment(elem.end_date).format(\"DD-MM-YYYY\"),\r\n          contract_type: elem.type,\r\n          status: getStatus(elem),\r\n        };\r\n      });\r\n\r\n      setAllContractsData(fdata);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n\r\n    getAllCustomers();\r\n    getAllJobsites();\r\n  }, []);\r\n\r\n  const getStatus = (record) => {\r\n    if (record.status === \"Completed\") {\r\n      return \"Completed\"\r\n    } else {\r\n      const isBeforeToday = moment(record.start_date, \"YYYY-MM-DD\").isBefore(moment().startOf(\"day\"));\r\n      if(isBeforeToday) {\r\n        return \"Ongoing\"\r\n      } else return \"Upcoming\"\r\n    }\r\n  }\r\n\r\n  const menuFilter = (\r\n    <Menu onClick={handleFilterClick} selectedKeys={current}>\r\n      <Menu.Item key={'All'}>All</Menu.Item>\r\n      <Menu.SubMenu title=\"Status\">\r\n        <Menu.Item key={'AllStatus'}>All</Menu.Item>\r\n        <Menu.Item key={'ACTIVE'}>ACTIVE</Menu.Item>\r\n        <Menu.Item key={'INACTIVE'}>INACTIVE</Menu.Item>\r\n      </Menu.SubMenu>\r\n    </Menu>\r\n  );\r\n\r\n  const drawerHandler = () => {\r\n    setDrawerIsOpen((prevState) => !prevState);\r\n  };\r\n\r\n  const handleDrawerOk = () => {\r\n    setSelectedFilter((previousState) => !previousState)\r\n    setDrawerIsOpen(false);\r\n  };\r\n\r\n  const handleDrawerReset = () => {\r\n    setSelectedFilter((previousState) => !previousState)\r\n    setSelectedCustomerFilter(false)\r\n    setSelectedJobsiteFilter(false)\r\n    setSelectedTypeFilter(false)\r\n    setSelectedStatusFilter(false)\r\n\r\n    setDrawerIsOpen(false);\r\n  };\r\n\r\n  const onDrawerClose = () => {\r\n    console.log(\"Closed\")\r\n    setDrawerIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className='d-flex justify-content-between'>\r\n        <PageHeading\r\n          // icon={UserManagementIcon}\r\n          title=\"Contracts\"\r\n        />\r\n        <div className=\"d-flex justify-content-between mb-3\">\r\n          <div className=\" d-flex align-items-center justify-content-between mr-2\">\r\n            <SearchBox setSearchText={setSearchText} />\r\n\r\n            <Button className=\"d-flex align-items-center ml-2\" onClick={drawerHandler}>\r\n              <Icon className=\"mr-2\" component={FilterIcon} />\r\n              Filters\r\n            </Button>\r\n\r\n            <CSVLink data={allContractsData} \r\n              headers={headers} \r\n              filename={\"All-Contracts.csv\"}\r\n            >\r\n              <Button className=\"d-flex align-items-center ml-2\" >\r\n                <img className=\"mr-2\" src={exportIcon} alt=\"exportIcon\"></img>Export\r\n              </Button>\r\n            </CSVLink>\r\n            \r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <ContractTable setPage={setPage} searchText={searchText} statuses={statusFilter} \r\n        selectedCustomerFilter={selectedCustomerFilter} selectedJobsiteFilter={selectedJobsiteFilter} \r\n        selectedStatusFilter={selectedStatusFilter} \r\n        selectedFilter={selectedFilter} selectedTypeFilter={selectedTypeFilter} />\r\n      </div>\r\n      <div>\r\n      <Drawer title=\"Filter\"\r\n          placement=\"right\"\r\n          onClose={onDrawerClose} \r\n          open={drawerIsOpen}\r\n          closable={true}\r\n          // getContainer={false}\r\n          visible={drawerIsOpen}\r\n          footer={[\r\n            <Button key={'submit'} style={{ color: '#F5F5F5' }} type=\"primary\" className='font-weight-bold mr-2' onClick={handleDrawerOk}>Apply</Button>,\r\n            <Button key={'cancel'} style={{ color: '#000B23' }} onClick={() => {handleDrawerReset()}} className='font-weight-bold'>Reset</Button>,\r\n          ]}\r\n        >\r\n          <div className=\"mb-2\">\r\n            <h4>Customer</h4>\r\n            <Select\r\n                showSearch\r\n                placeholder=\"Jobsite\"\r\n                // optionFilterProp=\"children\"\r\n                // filterOption={(input, option) => (option?.title ?? '').toString().toLowerCase()?.includes(input?.toLowerCase())}\r\n                // filterSort={(optionA, optionB) =>\r\n                //     (optionA?.label ?? '').toString().toLowerCase().localeCompare((optionB?.label ?? '').toString().toLowerCase())\r\n                // }\r\n                value={selectedCustomerFilter}\r\n                onChange={(e) => {setSelectedCustomerFilter(e)}}\r\n                className=\"w-100\"\r\n            >\r\n                <Select.Option title={'None'} key={'None'} value={null}>{'None'}</Select.Option>\r\n                {allCustomers && allCustomers.map((val, id) => (\r\n                    <Select.Option title={val.name} key={id} value={val?.id}>{val.name}</Select.Option>\r\n                ))}\r\n            </Select>\r\n          </div>\r\n          <div className=\"mb-2\">\r\n            <h4>Jobsite</h4>\r\n            <Select\r\n                showSearch\r\n                placeholder=\"Jobsite\"\r\n                value={selectedJobsiteFilter}\r\n                onChange={(e) => {setSelectedJobsiteFilter(e)}}\r\n                className=\"w-100\"\r\n            >    \r\n                <Select.Option title={'None'} key={'None'} value={null}>{'None'}</Select.Option>\r\n                {allJobsites && allJobsites.map((val, id) => (\r\n                    <Select.Option title={val.name} key={id} value={val?.id}>{val.name}</Select.Option>\r\n                ))}\r\n            </Select>\r\n          </div>\r\n          <div className='mb-2'>\r\n            <h4>Contract Type</h4>\r\n            <Select\r\n                showSearch\r\n                placeholder=\"Status\"\r\n                value={selectedTypeFilter}\r\n                onChange={(e) => {setSelectedTypeFilter(e)}}\r\n                className=\"w-100\"\r\n            >\r\n                <Select.Option title={'None'} key={'None'} value={null}>{'None'}</Select.Option>\r\n                <Select.Option title={'Ad Hoc'} key={'Ad Hoc'} value={'Ad Hoc'}>{'Ad Hoc'}</Select.Option>\r\n                <Select.Option title={'Routine'} key={'Routine'} value={'Routine'}>{'Routine'}</Select.Option>\r\n            </Select>\r\n          </div>\r\n          <div>\r\n            <h4>Status</h4>\r\n            <Select\r\n                showSearch\r\n                placeholder=\"Status\"\r\n                value={selectedStatusFilter}\r\n                onChange={(e) => {setSelectedStatusFilter(e)}}\r\n                className=\"w-100\"\r\n            >\r\n                <Select.Option title={'None'} key={'None'} value={null}>{'None'}</Select.Option>\r\n                <Select.Option title={'Active'} key={'Active'} value={'Active'}>{'Active'}</Select.Option>\r\n                <Select.Option title={'Expired'} key={'Expired'} value={'Expired'}>{'Expired'}</Select.Option>\r\n            </Select>\r\n          </div>\r\n        </Drawer>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Contracts","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"ViewContract_card__g2jgx\",\"add_details\":\"ViewContract_add_details__yLH9f\",\"total_amt\":\"ViewContract_total_amt__cQ3Jj\",\"tag\":\"ViewContract_tag__3vJXf\",\"send_btn\":\"ViewContract_send_btn__d+kZL\",\"action\":\"ViewContract_action__l6BIP\"};","import { Button, DatePicker, Input, message, Table, TimePicker } from 'antd';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport React, { useState } from 'react'\r\n\r\nfunction Reminder({ reminder,contractData }) {\r\n\r\n    const [remindersData, setRemindersData] = useState(reminder);\r\n    const removeReminder = (record) => {\r\n        let newRemindersData = remindersData.filter((elem) => elem.sr_no !== record.sr_no);\r\n        setRemindersData(newRemindersData);\r\n    }\r\n    const handleAddReminder = () => {\r\n        setRemindersData([...remindersData, {\r\n            sr_no: remindersData.length + 1,\r\n            date: null,\r\n            title: '',\r\n            description: '',\r\n        }]);\r\n    };\r\n    const reminderColumns = [\r\n        {\r\n            title: 'Sr. No.',\r\n            dataIndex: 'sr_no',\r\n        },\r\n        {\r\n            title: 'Date',\r\n            dataIndex: 'date',\r\n            render: (_, record) => {\r\n                return (\r\n                    <div>\r\n                        <DatePicker value={record.date} className='w-100' onChange={(e) => {\r\n                            let data = remindersData\r\n                            let index = remindersData.findIndex((elem) => elem === record)\r\n                            data[index].date = e\r\n                            setRemindersData([...data])\r\n                        }} />\r\n                    </div>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            title: 'Time',\r\n            dataIndex: 'time',\r\n            render: (_, record) => {\r\n                return (\r\n                    <div>\r\n                        <TimePicker value={record.time} className='w-100' format={'HH:mm A'} use12Hours={true} onChange={(e) => {\r\n                            let data = remindersData\r\n                            let index = remindersData.findIndex((elem) => elem === record)\r\n                            data[index].time = e;\r\n                            setRemindersData([...data])\r\n                        }} />\r\n                    </div>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            title: 'Title',\r\n            dataIndex: 'title',\r\n            render: (_, record) => {\r\n                return (\r\n                    <div>\r\n                        <Input value={record.title} className='w-100' onChange={(e) => {\r\n                            let data = remindersData\r\n                            let index = remindersData.findIndex((elem) => elem === record)\r\n                            data[index].title = e.target.value\r\n                            setRemindersData([...data])\r\n                        }} />\r\n                    </div>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            title: 'Content',\r\n            dataIndex: 'description',\r\n            render: (_, record) => {\r\n                return (\r\n                    <div>\r\n                        <Input value={record.description} className='w-100' onChange={(e) => {\r\n                            let data = remindersData\r\n                            let index = remindersData.findIndex((elem) => elem === record)\r\n                            data[index].description = e.target.value\r\n                            setRemindersData([...data])\r\n                        }} />\r\n                    </div>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '',\r\n            key: 'x',\r\n            render: (_, record) => <Button type='danger' onClick={() => { removeReminder(record) }} className='font-weight-bold'>remove</Button>,\r\n        },\r\n    ];\r\n\r\n    const handleSaveReminder = () => {\r\n        for(let i=0; i<remindersData.length; i++){\r\n            if(remindersData[i].date === null || remindersData[i].time === null || remindersData[i].title === '' || remindersData[i].description === ''){\r\n               message.error('Please fill all the fields');\r\n                return;\r\n            }\r\n        }\r\n        updateStatus(contractData);\r\n    }\r\n\r\n\r\n    const updateStatus = (record) => {\r\n        // date: schema.date(),\r\n        // direct_to_pc: schema.string(),\r\n        // co_regn_no: schema.string(),\r\n        // contract_number: schema.string(),\r\n        // wbs_element: schema.string(),\r\n        // network_activity: schema.string(),\r\n        // officer_in_charge: schema.number(),\r\n        // tc_customer_id: schema.number(),\r\n        // tc_customer_job_site_id: schema.number.optional(),\r\n        // tc_contract_id: schema.number(),\r\n        // tc_quotation_id: schema.number.optional(),\r\n        // start_date: schema.date(),\r\n        // end_date: schema.date(),\r\n        // reminders: schema.array().members(schema.object().anyMembers()),\r\n        // status: schema.string.optional(),\r\n\r\n     \r\n        axios({\r\n          method: 'post',\r\n          url: \"/api/tc/update-work-order\",\r\n          data: {\r\n            id: record.id,\r\n            date:  moment(record.date).format('YYYY-MM-DD'),\r\n            direct_to_pc: record.direct_to_pc,\r\n            co_regn_no: record.co_regn_no,\r\n            contract_number: record.contract_number,\r\n            wbs_element: record.wbs_element,\r\n            network_activity: record.network_activity,\r\n            officer_in_charge: record.officer_in_charge,\r\n            tc_customer_id: record.tc_customer_id,\r\n            tc_customer_job_site_id: record.tc_customer_job_site_id,\r\n            tc_contract_id: record.tc_contract_id,\r\n            tc_quotation_id: record.tc_quotation_id,\r\n            // start_date: record.start_date,\r\n            // end_date: record.end_date,\r\n            start_date: moment(record.start_date).format('YYYY-MM-DD'),\r\n            end_date: moment(record.end_date).format('YYYY-MM-DD'),\r\n            reminders: remindersData,\r\n            status: record.status, \r\n            line_items: JSON.parse(record.line_items),\r\n\r\n          },\r\n    \r\n        }).then(function (response) {\r\n          if (response.data.success) {\r\n            message.success(\"Reminders Saved Successfully\")\r\n    \r\n        \r\n          } else {\r\n            message.error(response.data.msg)\r\n          }\r\n        }).catch(function (error) {\r\n          console.log(error);\r\n        });\r\n      }\r\n    return (\r\n        <div>\r\n            <div>\r\n                <h4 className=\"mb-2 mt-4\">Reminders</h4>\r\n                <Table columns={reminderColumns} dataSource={remindersData} />\r\n                <div style={{\r\n                    display: 'flex',\r\n                    justifyContent: 'flex-end',\r\n                    alignItems: 'center',\r\n                    width: '100%',\r\n                    marginTop: '10px',\r\n                }}>\r\n                    <Button type='primary' className='font-weight-bold mt-2' onClick={handleAddReminder}>Add Reminder</Button>\r\n                    <Button type='primary' className='font-weight-bold mt-2 ml-2'\r\n                        onClick={handleSaveReminder}\r\n                    >Save</Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Reminder","\r\nexport const ViewDetailsIcon = () =>(\r\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<g clip-path=\"url(#clip0_3143_14787)\">\r\n<path d=\"M10.1667 5.66667C13.325 5.66667 16.1417 7.44167 17.5167 10.25C16.1417 13.0583 13.325 14.8333 10.1667 14.8333C7.00833 14.8333 4.19167 13.0583 2.81667 10.25C4.19167 7.44167 7.00833 5.66667 10.1667 5.66667ZM10.1667 4C6 4 2.44167 6.59167 1 10.25C2.44167 13.9083 6 16.5 10.1667 16.5C14.3333 16.5 17.8917 13.9083 19.3333 10.25C17.8917 6.59167 14.3333 4 10.1667 4ZM10.1667 8.16667C11.3167 8.16667 12.25 9.1 12.25 10.25C12.25 11.4 11.3167 12.3333 10.1667 12.3333C9.01667 12.3333 8.08333 11.4 8.08333 10.25C8.08333 9.1 9.01667 8.16667 10.1667 8.16667ZM10.1667 6.5C8.1 6.5 6.41667 8.18333 6.41667 10.25C6.41667 12.3167 8.1 14 10.1667 14C12.2333 14 13.9167 12.3167 13.9167 10.25C13.9167 8.18333 12.2333 6.5 10.1667 6.5Z\" fill=\"#455560\"/>\r\n</g>\r\n<defs>\r\n<clipPath id=\"clip0_3143_14787\">\r\n<rect width=\"20\" height=\"20\" fill=\"white\"/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n\r\n)\r\n\r\nexport const DeleteIcon = () => (\r\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<g clip-path=\"url(#clip0_3143_14792)\">\r\n<path d=\"M13.1667 8V16.3333H6.5V8H13.1667ZM11.9167 3H7.75L6.91667 3.83333H4V5.5H15.6667V3.83333H12.75L11.9167 3ZM14.8333 6.33333H4.83333V16.3333C4.83333 17.25 5.58333 18 6.5 18H13.1667C14.0833 18 14.8333 17.25 14.8333 16.3333V6.33333Z\" fill=\"#455560\"/>\r\n</g>\r\n<defs>\r\n<clipPath id=\"clip0_3143_14792\">\r\n<rect width=\"20\" height=\"20\" fill=\"white\"/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n\r\n)\r\n\r\nexport const SendQuotationIcon = () => (\r\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<g clip-path=\"url(#clip0_3143_14797)\">\r\n<path d=\"M11.2167 8.01667L11.9833 8.78333L4.43333 16.3333H3.66667V15.5667L11.2167 8.01667ZM14.2167 3C14.0083 3 13.7917 3.08333 13.6333 3.24167L12.1083 4.76667L15.2333 7.89167L16.7583 6.36667C17.0833 6.04167 17.0833 5.51667 16.7583 5.19167L14.8083 3.24167C14.6417 3.075 14.4333 3 14.2167 3ZM11.2167 5.65833L2 14.875V18H5.125L14.3417 8.78333L11.2167 5.65833Z\" fill=\"#455560\"/>\r\n</g>\r\n<defs>\r\n<clipPath id=\"clip0_3143_14797\">\r\n<rect width=\"20\" height=\"20\" fill=\"white\"/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n\r\n)\r\n\r\nexport const RecordPaymentsIcon = () => (\r\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<g clip-path=\"url(#clip0_3143_14802)\">\r\n<path d=\"M15.8334 11.6668V5.00016C15.8334 4.0835 15.0834 3.3335 14.1667 3.3335H2.50004C1.58337 3.3335 0.833374 4.0835 0.833374 5.00016V11.6668C0.833374 12.5835 1.58337 13.3335 2.50004 13.3335H14.1667C15.0834 13.3335 15.8334 12.5835 15.8334 11.6668ZM14.1667 11.6668H2.50004V5.00016H14.1667V11.6668ZM8.33337 5.8335C6.95004 5.8335 5.83337 6.95016 5.83337 8.3335C5.83337 9.71683 6.95004 10.8335 8.33337 10.8335C9.71671 10.8335 10.8334 9.71683 10.8334 8.3335C10.8334 6.95016 9.71671 5.8335 8.33337 5.8335ZM19.1667 5.8335V15.0002C19.1667 15.9168 18.4167 16.6668 17.5 16.6668H3.33337V15.0002H17.5V5.8335H19.1667Z\" fill=\"#455560\"/>\r\n</g>\r\n<defs>\r\n<clipPath id=\"clip0_3143_14802\">\r\n<rect width=\"20\" height=\"20\" fill=\"white\"/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n\r\n)\r\n\r\nexport const CreateContractIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<g clip-path=\"url(#clip0_886_17351)\">\r\n<path d=\"M14 2H6C4.9 2 4 2.9 4 4V20C4 21.1 4.9 22 6 22H18C19.1 22 20 21.1 20 20V8L14 2ZM6 20V4H13V8H18V20H6ZM11 19H13V18H14C14.55 18 15 17.55 15 17V14C15 13.45 14.55 13 14 13H11V12H15V10H13V9H11V10H10C9.45 10 9 10.45 9 11V14C9 14.55 9.45 15 10 15H13V16H9V18H11V19Z\" fill=\"#455560\"/>\r\n</g>\r\n<defs>\r\n<clipPath id=\"clip0_886_17351\">\r\n<rect width=\"24\" height=\"24\" fill=\"white\"/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n\r\n)","import React from \"react\";\r\nimport { useHistory , useRouteMatch} from \"react-router-dom\";\r\n// import EllipsisDropdown from 'components/shared-components/EllipsisDropdown'\r\nimport Icon from \"@ant-design/icons\";\r\nimport EllipsisDropdown from \"components/shared-components/EllipsisDropdown/index\";\r\nimport { Menu, message } from \"antd\";\r\nimport { ViewDetailsIcon , CreateContractIcon, SendQuotationIcon } from \"./ActionIcons\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\n\r\nconst Actions = ({contract_id,setOpenContractModal,record,getData,setQuoteData}) => {\r\n\tconst history = useHistory();\r\n\tconst match = useRouteMatch();\r\n\r\n\tconst viewContractHandler = () => {\r\n    // history.push(`${match.path}/view-work-order/${contract_id}`);\r\n    // /work-orders/view-service/\r\n    // history.push(`/app/contract-management/work-orders/view-work-order/${contract_id}`);\r\n    history.push(`/app/contract-management/work-orders/view-service/${contract_id}`);\r\n\t}\r\n  \r\n\tconst viewContractDetailsHandler = () => {\r\n    history.push(`${match.path}/view-contract-details/${contract_id}`);\r\n\t}\r\n  \r\n\tconst editContractHandler = () => {\r\n    // history.push(`${match.path}/edit-contract/${contract_id}`);\r\n    history.push(`${match.path}/view-contract-details/${contract_id}`);\r\n\t}\r\n  const createContractHandler = () => {\r\n    setOpenContractModal(true)\r\n    setQuoteData(record)\r\n\t}\r\n\r\n\r\n  return (\r\n    <EllipsisDropdown\r\n      menu={\r\n        <Menu>\r\n           {/* <Menu.Item onClick={createContractHandler} disabled={record.status==='Completed'}>\r\n              <span className=\"d-flex align-items-center\">\r\n                <Icon className=\"mr-2\" component={CreateContractIcon} /> Create Work Order\r\n              </span>\r\n            </Menu.Item> */}\r\n            {/* <Menu.Item  onClick={updateStatus} disabled={record.status==='Completed'}>\r\n              <span className=\"d-flex align-items-center\">\r\n                <Icon className=\"mr-2\" component={SendQuotationIcon} /> Mark as Complete \r\n              </span>\r\n            </Menu.Item> */}\r\n          {/* <Menu.Item onClick={editContractHandler}>\r\n            <span className=\"d-flex align-items-center\">\r\n              <Icon className=\"mr-2\" component={CreateContractIcon} />Edit Contract</span>\r\n          </Menu.Item> */}\r\n\r\n          {/* <Menu.Item onClick={viewContractDetailsHandler}>\r\n            <span className=\"d-flex align-items-center\">\r\n              <Icon className=\"mr-2\" component={CreateContractIcon} />View Contract Details</span>\r\n          </Menu.Item> */}\r\n          <Menu.Item onClick={viewContractHandler}>\r\n            <span className=\"d-flex align-items-center\">\r\n              <Icon className=\"mr-2\" component={ViewDetailsIcon} />\r\n              View Work Entry Sheet\r\n            </span>\r\n          </Menu.Item>\r\n       \r\n        </Menu>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default Actions;\r\n","import React , {useState, useEffect} from 'react'\r\n\r\nimport {Table , Button , Tag, Input, Modal, DatePicker, TimePicker, message} from 'antd';\r\nimport Avatar from 'assets/Avatar2.png'\r\nimport Actions from './Actions';\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\n\r\n\r\n\r\nconst ContractTable = ({ setsetPage, searchText, workOrderId, statuses, selectedFilter, selectedCustomerFilter, id,selectedJobsiteFilter, selectedTypeFilter, selectedStatusFilter }) => {\r\n  const [selectedRowKeys , setSelectedRowKeys] = useState([]);\r\n  const [contractsData , setContractsData] = useState([]);\r\n  const [openContractModal, setOpenContractModal] = useState(false);\r\n  const [commencementDate, setCommencementDate] = useState(null);\r\n  const [quoteData, setQuoteData] = useState({});\r\n  const [expiryDate, setExpiryDate] = useState(null);\r\n  const [direct_to_pc, setDirect_to_pc] = useState('');\r\n  const [co_regn_no, setCo_regn_no] = useState('');\r\n  const [contract_number, setContract_number] = useState('');\r\n  const [wbs_element, setWbs_element] = useState('');\r\n  const [network_activity, setNetwork_activity] = useState('');\r\n  const [officer_in_charge, setOfficer_in_charge] = useState('');\r\n  \r\n  const [remindersData, setRemindersData] = useState([]);\r\n  const removeReminder =(record) => {\r\n    let newRemindersData = remindersData.filter((elem) => elem.sr_no !== record.sr_no);\r\n    setRemindersData(newRemindersData);\r\n  }\r\n\r\n\r\n  const selectChangeHandler = (newSelectedRowKeys) => {\r\n    setSelectedRowKeys(newSelectedRowKeys);\r\n  };\r\n  \r\n  const handleContractCancel = () => {\r\n    setOpenContractModal(false);\r\n  };\r\n\r\n  \r\nconst columns = [\r\n  {\r\n    title: ' Id',\r\n    dataIndex: 'id',\r\n  },\r\n  {\r\n    title: 'Customer Name',\r\n    dataIndex: 'customer_name',\r\n    // defaultSortOrder: 'descend',\r\n    // sorter: (a, b) => a.customerName - b.customerName,\r\n  },\r\n  {\r\n    title: 'Jobsite',\r\n    dataIndex: 'job_site_name',\r\n    \r\n  },\r\n  // {\r\n  //   title: 'Contract Type',\r\n  //   dataIndex: 'contract_type',\r\n    \r\n  // },\r\n  {\r\n    title: 'Target Completion Date',\r\n    dataIndex: 'target_completion_date',\r\n    render: (_,record) => {\r\n      return (\r\n        <span>\r\n          {record.target_completion_date ? moment(record.target_completion_date).format(\"DD-MM-YYYY\") : '-'}\r\n        </span>\r\n      );\r\n    } \r\n    \r\n  },\r\n  {\r\n    title: 'Actual Completion Date',\r\n    dataIndex: 'actual_completion_date',\r\n    render: (_,record) => {\r\n      return (\r\n        <span>\r\n          {record.actual_completion_date ? moment(record.actual_completion_date).format(\"DD-MM-YYYY\") : '-'}\r\n        </span>\r\n      );\r\n    } \r\n    \r\n  },\r\n  {\r\n    title: 'Status',\r\n    dataIndex: 'status',\r\n    render: (_,record) => {\r\n      const statusStyles = {\r\n        color: \"#00AB6F\",\r\n        backgroundColor: \"#EDFFF9\",\r\n        padding: \"4px 8px\",\r\n        borderRadius: \"6px\",\r\n        fontWeight: \"600\",\r\n        fontSize: \"14px\",\r\n      };\r\n      \r\n      return (\r\n        <span style={statusStyles} key={record.status}>\r\n          {record.status}\r\n        </span>\r\n      );\r\n    }\r\n  },\r\n  {\r\n    title: 'Action',\r\n    dataIndex: '',\r\n    key: 'x',\r\n    render: (_,record) => <Actions setQuoteData={setQuoteData} contract_id={record.id} record={record} setOpenContractModal={setOpenContractModal} getData={getData}/>,\r\n  },\r\n];\r\n  const rowSelection = {\r\n    selectedRowKeys,\r\n    onChange: selectChangeHandler\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .post(\r\n        \"/api/tc/get-service_entry_sheets\",\r\n        {\r\n          page_index: 1,\r\n          page_size: 10,\r\n          ...id && {contract_id: +id},\r\n          ...workOrderId && {work_order_id: +workOrderId},\r\n          // statuses: [\"ACTIVE\", \"INACTIVE\"],\r\n          statuses: null,\r\n          search : searchText ? searchText : null,\r\n          customer_id: selectedCustomerFilter || null,\r\n          job_site_id: selectedJobsiteFilter || null,\r\n          status: selectedStatusFilter || null,\r\n          contract_type: selectedTypeFilter || null,\r\n        },\r\n      )\r\n      .then((response) => {\r\n        let res = response.data.data.data;\r\n        console.log(res);\r\n\r\n        let fdata = res.map((elem, ind) => {\r\n          return {\r\n            ...elem,\r\n            key: elem.id,\r\n            id: elem.id,\r\n            customer_name: elem.customer_name || elem.tc_customer_id,\r\n            jobsite_name: elem.jobsite_name || (elem.tc_customer_job_site_id || '-'),\r\n            contract_type: elem.type,\r\n            commence_on: moment(elem.start_date).format(\"DD-MM-YYYY\"),\r\n            expire_on: moment(elem.end_date).format(\"DD-MM-YYYY\"),\r\n            contract_type: elem.type,\r\n            status: elem.status,\r\n            start_date: elem.start_date,\r\n          };\r\n        });\r\n        setContractsData(fdata);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, [searchText]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .post(\r\n        \"/api/tc/get-service_entry_sheets\",\r\n        {\r\n          page_index: 1,\r\n          page_size: 10,\r\n          ...id && {contract_id: +id},\r\n          ...workOrderId && {work_order_id: +workOrderId},\r\n          statuses: null,\r\n          search : searchText ? searchText : null,\r\n          customer_id: selectedCustomerFilter || null,\r\n          job_site_id: selectedJobsiteFilter || null,\r\n          status: selectedStatusFilter || null,\r\n          contract_type: selectedTypeFilter || null,\r\n        },\r\n      )\r\n      .then((response) => {\r\n        let res = response.data.data.data;\r\n        console.log(res);\r\n\r\n        let fdata = res.map((elem, ind) => {\r\n          return {\r\n            ...elem,\r\n            key: elem.id,\r\n            id: elem.id,\r\n            customer_name: elem.customer_name || elem.tc_customer_id,\r\n            jobsite_name: elem.jobsite_name || (elem.tc_customer_job_site_id || '-'),\r\n            contract_type: elem.type,\r\n            commence_on: moment(elem.start_date).format(\"DD-MM-YYYY\"),\r\n            expire_on: moment(elem.end_date).format(\"DD-MM-YYYY\"),\r\n            contract_type: elem.type,\r\n            status: elem.status,\r\n            start_date: elem.start_date,\r\n          };\r\n        });\r\n        setContractsData(fdata);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, [selectedFilter]);\r\n\r\n  const getData = ()=>{\r\n    axios\r\n    .post(\r\n      \"/api/tc/get-service_entry_sheets\",\r\n      {\r\n        page_index: 1,\r\n        page_size: 10,\r\n        statuses: null,\r\n        ...id && {contract_id: +id},\r\n        ...workOrderId && {work_order_id: +workOrderId},\r\n        search : searchText ? searchText : null,\r\n        customer_id: selectedCustomerFilter || null,\r\n        job_site_id: selectedJobsiteFilter || null,\r\n        status: selectedStatusFilter || null,\r\n        contract_type: selectedTypeFilter || null,\r\n      },\r\n    )\r\n    .then((response) => {\r\n      let res = response.data.data.data;\r\n      console.log(res);\r\n\r\n      let fdata = res.map((elem, ind) => {\r\n        return {\r\n          ...elem,\r\n          key: elem.id,\r\n          id: elem.id,\r\n          customer_name: elem.customer_name || elem.tc_customer_id,\r\n          jobsite_name: elem.jobsite_name || (elem.tc_customer_job_site_id || '-'),\r\n          contract_type: elem.type,\r\n          commence_on: moment(elem.start_date).format(\"DD-MM-YYYY\"),\r\n          expire_on: moment(elem.end_date).format(\"DD-MM-YYYY\"),\r\n          contract_type: elem.type,\r\n          status: elem.status,\r\n          start_date: elem.start_date,\r\n        };\r\n      });\r\n      setContractsData(fdata);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  const commencementDateChange = (date) => {\r\n    // contractData.date_of_commencement = date;\r\n    // let newContractData = contractData;\r\n    // newContractData.date_of_commencement = date;\r\n    // console.log(newContractData);\r\n\r\n    setCommencementDate(date);\r\n  }\r\n\r\n  const expiryDateChange = (date) => {\r\n    setExpiryDate(date);\r\n  }\r\n\r\n  const handleAddReminder = () => {\r\n    setRemindersData([...remindersData, {\r\n      sr_no: remindersData.length + 1,\r\n      date: null,\r\n      title: '',\r\n      description: '',\r\n    }]);\r\n  };\r\n  const reminderColumns = [\r\n    {\r\n      title: 'Sr. No.',\r\n      dataIndex: 'sr_no',\r\n    },\r\n    {\r\n      title: 'Date',\r\n      dataIndex: 'date',\r\n      render: (_, record) => {\r\n        return (\r\n          <div>\r\n            <DatePicker value={record.date} className='w-100' onChange={(e) => {\r\n              let data = remindersData\r\n              let index = remindersData.findIndex((elem) => elem === record)\r\n              data[index].date = e\r\n              setRemindersData([...data])\r\n            }}/>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: 'Time',\r\n      dataIndex: 'time',\r\n      render: (_, record) => {\r\n        return (\r\n          <div>\r\n            <TimePicker value={record.time} className='w-100' format={'HH:mm A'} use12Hours={true} onChange={(e) => {\r\n              let data = remindersData\r\n              let index = remindersData.findIndex((elem) => elem === record)\r\n              data[index].time = e;\r\n              setRemindersData([...data])\r\n            }}/>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: 'Title',\r\n      dataIndex: 'title',\r\n      render: (_, record) => {\r\n        return (\r\n          <div>\r\n            <Input value={record.title} className='w-100' onChange={(e) => {\r\n              let data = remindersData\r\n              let index = remindersData.findIndex((elem) => elem === record)\r\n              data[index].title = e.target.value\r\n              setRemindersData([...data])\r\n            }}/>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: 'Content',\r\n      dataIndex: 'description',\r\n      render: (_, record) => {\r\n        return (\r\n          <div>\r\n            <Input value={record.description} className='w-100' onChange={(e) => {\r\n              let data = remindersData\r\n              let index = remindersData.findIndex((elem) => elem === record)\r\n              data[index].description = e.target.value\r\n              setRemindersData([...data])\r\n            }}/>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: 'Action',\r\n      dataIndex: '',\r\n      key: 'x',\r\n      render: (_,record) => <Button type='danger' onClick={() => {removeReminder(record)}} className='font-weight-bold'>remove</Button>,\r\n    },\r\n  ];\r\n\r\n  \r\n\r\n\r\n\r\n  \r\n  return (\r\n    <div>\r\n      <Table columns={columns} dataSource={contractsData} />\r\n     \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ContractTable","import { Button, Dropdown, Menu, Space, Select, Drawer } from 'antd'\r\nimport React, { useState, useEffect } from 'react'\r\nimport SearchBox from 'components/shared-components/SearchBox';\r\nimport axios from 'axios';\r\nimport exportIcon from \"assets/svg/exportIcon.svg\";\r\nimport PageHeading from 'components/shared-components/PageHeading/PageHeading';\r\nimport Icon from \"@ant-design/icons\"\r\nimport { FilterIcon, ItemsAndServicesIcon } from \"assets/svg/icon\";\r\nimport ContractTable from './ContractTable';\r\nimport { CSVLink } from \"react-csv\";\r\nimport moment from \"moment\";\r\n\r\n// import { Link } from 'react-router-dom';\r\n// import plusIcon from \"assets/svg/plus.svg\";\r\n// import UserManagementIcon from \"assets/svg/usermManagementPage.svg\";\r\n// import filterIcon from \"assets/svg/filterIcon.svg\";\r\n// import Filter from 'views/app-views/UserManagement/UserList/Filter';\r\n\r\n\r\nfunction Service({id, workOrderId}) {\r\n\r\n  const [searchText, setSearchText] = useState('')\r\n  const [setPage, setsetPage] = useState(1)\r\n  const [statusFilter, setStatusFilter] = useState([])\r\n  const [allServiceEntryData, setAllServiceEntryData] = useState([])\r\n  const [current, setCurrent] = useState(['All'])\r\n\r\n  const [allJobsites , setAllJobsites] = useState(false);\r\n  const [allCustomers , setAllCustomers] = useState(false);\r\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n  const [selectedCustomerFilter , setSelectedCustomerFilter] = useState(false);\r\n  const [selectedJobsiteFilter , setSelectedJobsiteFilter] = useState(false);\r\n  const [selectedTypeFilter , setSelectedTypeFilter] = useState(false);\r\n  const [selectedStatusFilter , setSelectedStatusFilter] = useState(false);\r\n  const [selectedFilter , setSelectedFilter] = useState(false);\r\n  const tok = localStorage.getItem('token')\r\n\r\n  const headers = [\r\n    { label: \"Sr. No\", key: \"sr_no\" },\r\n    { label: \"ID\", key: \"id\" },\r\n    { label: \"Customer Name\", key: \"customer_name\" },\r\n    { label: \"Jobsite\", key: \"jobsite_name\" },\r\n    { label: \"Target Completion Date\", key: \"target_completion_date\" },\r\n    { label: \"Actual Completion Date\", key: \"actual_completion_date\" },\r\n    { label: \"Status\", key: \"status\" }\r\n  ];\r\n\r\n  // const handleClick = () => {}\r\n\r\n  const handleFilterClick = (e) => {\r\n    setCurrent([e.key])\r\n    if(e.key === 'ACTIVE') {\r\n      setStatusFilter(['ACTIVE'])\r\n    }else if(e.key === 'INACTIVE') {\r\n      setStatusFilter(['INACTIVE'])\r\n    } else {\r\n      setStatusFilter([])\r\n    }\r\n  }\r\n\r\n  const getAllJobsites = () => {\r\n    axios({\r\n      method: 'post',\r\n      url: \"/api/tc/get-customer-job-sites\",\r\n      data: {\r\n        page_index: 1,\r\n        page_size: 100000,\r\n        customer_id: null,\r\n        search : null\r\n      }\r\n    }).then((response) => {\r\n        if (response.data.success) {\r\n          setAllJobsites(response.data.data.data)\r\n        }\r\n        console.log(\"Job sites data fetched\")\r\n        console.log(response.data.data.data)\r\n    }).catch((err) => {\r\n        console.log(err)\r\n    });\r\n  };\r\n  \r\n  const getAllCustomers = () => {\r\n    axios({\r\n      method: 'post',\r\n      url: \"/api/tc/get-customers\",\r\n      data: {\r\n        page_index: 1,\r\n        page_size: 100000,\r\n        customer_id: null,\r\n        search : null\r\n      }\r\n    }).then((response) => {\r\n        if (response.data.success) {\r\n          setAllCustomers(response.data.data.data)\r\n        }\r\n        console.log(\"Customers data fetched\")\r\n        console.log(response.data.data.data)\r\n    }).catch((err) => {\r\n        console.log(err)\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n    .post(\r\n      \"/api/tc/get-service_entry_sheets\",\r\n      {\r\n        page_index: 1,\r\n        page_size: 100000,\r\n        search : null,\r\n        ...id && {contract_id: +id},\r\n        ...workOrderId && {work_order_id: +workOrderId}\r\n      },\r\n    )\r\n    .then((response) => {\r\n      let res = response.data.data.data;\r\n\r\n      let fdata = res.map((elem, index) => {\r\n        return {\r\n          sr_no: index+1,\r\n          key: elem.id,\r\n          id: elem.id,\r\n          customer_name: elem.customer_name || elem.tc_customer_id,\r\n          jobsite_name: elem.job_site_name || (elem.tc_customer_job_site_id || '-'),\r\n          target_completion_date: elem.target_completion_date ? moment(new Date(elem.target_completion_date)).format('DD-MM-YYYY'):'',\r\n          actual_completion_date: elem.actual_completion_date ? moment(new Date(elem.actual_completion_date)).format('DD-MM-YYYY'):'',\r\n          status: elem.status,\r\n        };\r\n      });\r\n\r\n      setAllServiceEntryData(fdata);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n\r\n    getAllCustomers();\r\n    getAllJobsites();\r\n  }, []);\r\n\r\n  const menuFilter = (\r\n    <Menu onClick={handleFilterClick} selectedKeys={current}>\r\n      <Menu.Item key={'All'}>All</Menu.Item>\r\n      <Menu.SubMenu title=\"Status\">\r\n        <Menu.Item key={'AllStatus'}>All</Menu.Item>\r\n        <Menu.Item key={'ACTIVE'}>ACTIVE</Menu.Item>\r\n        <Menu.Item key={'INACTIVE'}>INACTIVE</Menu.Item>\r\n      </Menu.SubMenu>\r\n    </Menu>\r\n  );\r\n\r\n  const drawerHandler = () => {\r\n    setDrawerIsOpen((prevState) => {\r\n      console.log(\"Drawer \" + (!prevState ? 'Open':'Closed'));\r\n\r\n      return !prevState\r\n    });\r\n  };\r\n\r\n  const handleDrawerOk = () => {\r\n    setSelectedFilter((previousState) => !previousState)\r\n    setDrawerIsOpen(false);\r\n  };\r\n\r\n  const handleDrawerReset = () => {\r\n    setSelectedFilter((previousState) => !previousState)\r\n    setSelectedCustomerFilter(false)\r\n    setSelectedJobsiteFilter(false)\r\n    setSelectedTypeFilter(false)\r\n    setSelectedStatusFilter(false)\r\n\r\n    setDrawerIsOpen(false);\r\n  };\r\n\r\n  const onDrawerClose = () => {\r\n    console.log(\"Closed\")\r\n    setDrawerIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className='d-flex justify-content-between'>\r\n        <PageHeading\r\n          // icon={UserManagementIcon}\r\n          title=\"Service Entry Sheets\"\r\n        />\r\n        <div className=\"d-flex justify-content-between mb-3\">\r\n          <div className=\" d-flex align-items-center justify-content-between mr-2\">\r\n            <SearchBox setSearchText={setSearchText} />\r\n\r\n            {/* {\r\n              !id &&  <Button className=\"d-flex align-items-center ml-2\" onClick={drawerHandler}>\r\n              <Icon className=\"mr-2\" component={FilterIcon} />\r\n              Filters\r\n            </Button>\r\n            } */}\r\n\r\n            <CSVLink data={allServiceEntryData} \r\n              headers={headers} \r\n              filename={\"All-Service-Entries.csv\"}\r\n            >\r\n              <Button className=\"d-flex align-items-center ml-2\" >\r\n                <img className=\"mr-2\" src={exportIcon} alt=\"exportIcon\"></img>Export\r\n              </Button>\r\n            </CSVLink>\r\n            \r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <ContractTable workOrderId={workOrderId} setsetPage={setsetPage} searchText={searchText} statuses={statusFilter} \r\n        selectedCustomerFilter={selectedCustomerFilter} selectedJobsiteFilter={selectedJobsiteFilter} \r\n        selectedStatusFilter={selectedStatusFilter} \r\n        selectedFilter={selectedFilter} selectedTypeFilter={selectedTypeFilter} id={id}/>\r\n      </div>\r\n      <div>\r\n      <Drawer title=\"Filter\"\r\n          placement=\"right\"\r\n          onClose={onDrawerClose} \r\n          open={drawerIsOpen}\r\n          closable={true}\r\n          // getContainer={false}\r\n          visible={drawerIsOpen}\r\n          footer={[\r\n            <Button key={'submit'} style={{ color: '#F5F5F5' }} type=\"primary\" className='font-weight-bold mr-2' onClick={handleDrawerOk}>Apply</Button>,\r\n            <Button key={'cancel'} style={{ color: '#000B23' }} onClick={() => {handleDrawerReset()}} className='font-weight-bold'>Reset</Button>,\r\n          ]}\r\n        >\r\n          <div className=\"mb-2\">\r\n            <h4>Customer</h4>\r\n            <Select\r\n                showSearch\r\n                placeholder=\"Jobsite\"\r\n                // optionFilterProp=\"children\"\r\n                // filterOption={(input, option) => (option?.title ?? '').toString().toLowerCase()?.includes(input?.toLowerCase())}\r\n                // filterSort={(optionA, optionB) =>\r\n                //     (optionA?.label ?? '').toString().toLowerCase().localeCompare((optionB?.label ?? '').toString().toLowerCase())\r\n                // }\r\n                value={selectedCustomerFilter}\r\n                onChange={(e) => {setSelectedCustomerFilter(e)}}\r\n                className=\"w-100\"\r\n            >\r\n                <Select.Option title={'None'} key={'None'} value={null}>{'None'}</Select.Option>\r\n                {allCustomers && allCustomers.map((val, id) => (\r\n                    <Select.Option title={val.name} key={id} value={val?.id}>{val.name}</Select.Option>\r\n                ))}\r\n            </Select>\r\n          </div>\r\n          <div className=\"mb-2\">\r\n            <h4>Jobsite</h4>\r\n            <Select\r\n                showSearch\r\n                placeholder=\"Jobsite\"\r\n                value={selectedJobsiteFilter}\r\n                onChange={(e) => {setSelectedJobsiteFilter(e)}}\r\n                className=\"w-100\"\r\n            >    \r\n                <Select.Option title={'None'} key={'None'} value={null}>{'None'}</Select.Option>\r\n                {allJobsites && allJobsites.map((val, id) => (\r\n                    <Select.Option title={val.name} key={id} value={val?.id}>{val.name}</Select.Option>\r\n                ))}\r\n            </Select>\r\n          </div>\r\n          {/* <div className='mb-2'>\r\n            <h4>Contract Type</h4>\r\n            <Select\r\n                showSearch\r\n                placeholder=\"Status\"\r\n                value={selectedTypeFilter}\r\n                onChange={(e) => {setSelectedTypeFilter(e)}}\r\n                className=\"w-100\"\r\n            >\r\n                <Select.Option title={'None'} key={'None'} value={null}>{'None'}</Select.Option>\r\n                <Select.Option title={'Ad Hoc'} key={'Ad Hoc'} value={'Ad Hoc'}>{'Ad Hoc'}</Select.Option>\r\n                <Select.Option title={'Routine'} key={'Routine'} value={'Routine'}>{'Routine'}</Select.Option>\r\n            </Select>\r\n          </div> */}\r\n          {/* <div>\r\n            <h4>Status</h4>\r\n            <Select\r\n                showSearch\r\n                placeholder=\"Status\"\r\n                value={selectedStatusFilter}\r\n                onChange={(e) => {setSelectedStatusFilter(e)}}\r\n                className=\"w-100\"\r\n            >\r\n                <Select.Option title={'None'} key={'None'} value={null}>{'None'}</Select.Option>\r\n                <Select.Option title={'Active'} key={'Active'} value={'Active'}>{'Active'}</Select.Option>\r\n                <Select.Option title={'Expired'} key={'Expired'} value={'Expired'}>{'Expired'}</Select.Option>\r\n            </Select>\r\n          </div> */}\r\n        </Drawer>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Service","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport {\r\n    Card,\r\n    Typography,\r\n    Col,\r\n    Row,\r\n    List,\r\n    Divider,\r\n    Tag,\r\n    Button,\r\n    Select,\r\n    Table,\r\n    DatePicker,\r\n    Modal,\r\n    Input,\r\n    message,\r\n    Tabs\r\n} from \"antd\";\r\nimport Icon from \"@ant-design/icons\";\r\nimport PageHeading from \"components/shared-components/PageHeading/PageHeading\";\r\n\r\nimport logo from \"assets/grand-energy-logo-small.png\";\r\nimport { ItemsAndServicesPageIcon } from \"assets/svg/icon\";\r\nimport HandBagImg from \"assets/HandBag.png\";\r\nimport SneakersImg from \"assets/Sneakers.png\";\r\nimport { PdfIcon } from \"../../../ItemsAndServices/svgIcons\";\r\nimport generatePDF, { Margin } from 'react-to-pdf';\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\n// import Modal from \"components/UI/Modal\";\r\n// import { Link } from \"react-router-dom\";\r\n// import logo from \"assets/grand-energy-logo.png\";\r\n// import { SendIcon } from \"assets/svg/icon\";\r\n\r\nimport classes from \"./ViewContract.module.css\";\r\nimport Reminder from \"../ContractView/Reminder\";\r\nimport Service from \"../../ServiceTimeSheet/WorkOrder\";\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nconst options = {\r\n    page: {\r\n        margin: Margin.SMALL,\r\n    }\r\n};\r\n\r\nconst ViewContract = () => {\r\n    const targetRef = useRef();\r\n    const history = useHistory();\r\n    const param = useParams();\r\n    const [reminder, setReminder] = useState([]);\r\n    const [customerData, setCustomerData] = useState({\r\n        customerId: 0,\r\n        email: '',\r\n        name: '',\r\n        phone: '',\r\n        status: '',\r\n        profile_pic: '',\r\n        contact_name: '',\r\n        office_contact_number: '',\r\n        uen_number: '',\r\n        postal_code: '',\r\n        block_number: '',\r\n        level_number: '',\r\n        unit_number: '',\r\n        street_number: '',\r\n        country: '',\r\n        created_by: '',\r\n        other_details: {}\r\n    });\r\n    const [quoteData, setQuoteData] = useState({\r\n        id: 0,\r\n        customer_id: '',\r\n        jobsite_id: '',\r\n        customerName: '',\r\n        jobsite: '',\r\n        inquiryDate: '',\r\n        quotationDate: '',\r\n        amount: '',\r\n        status: '',\r\n\r\n        tc_customer_id: '',\r\n        task_period_from_date: '',\r\n        task_period_to_date: '',\r\n        due_date: '',\r\n        sub_total: 0,\r\n        tax: 8,\r\n        discount: 0,\r\n        total: 0,\r\n        tc_quotation_file: '',\r\n        quotation_remarks: '',\r\n        line_items: [],\r\n    });\r\n    const [lineItem, setLineItem] = useState([]);\r\n    const [rawContractData, setRawContractData] = useState({});\r\n    const [contractData, setContractData] = useState({\r\n        id: 0,\r\n        customer_id: '',\r\n        jobsite_id: '',\r\n        customerName: '',\r\n        jobsite: '',\r\n        start_date: '',\r\n        end_date: '',\r\n    });\r\n    const [gstData, setGstData] = useState([]);\r\n    // const [openContractModal , setOpenContractModal] = useState(false);\r\n    // const [commencementDate , setCommencementDate] = useState(false);\r\n    // const [expiryDate , setExpiryDate] = useState(false);\r\n    // const [remindersData , setRemindersData] = useState([]);\r\n    // const [contractType , setContractType] = useState(false);\r\n    const [grandTotal, setGrandTotal] = useState([\r\n        //   { text: \"Grand Total\", amt: \"0\" }\r\n    ]);\r\n    const [dataGrandTotal, setDataGrandTotal] = useState([\r\n        //   { text: \"Subtotal\", amt: \"0\" },\r\n        //   { text: \"GST\", amt: \"0\", tag: { text: \"0%\", color: \"#0099A8\" } },\r\n    ]);\r\n\r\n    const getContractData = () => {\r\n        axios\r\n            .post(\r\n                \"/api/tc/get-work-order\",\r\n                {\r\n                    id: +param.id,\r\n                },\r\n            )\r\n            .then((response) => {\r\n                let res = response.data.data;\r\n                setRawContractData(res);\r\n                setContractData({\r\n                    id: res?.id,\r\n                    customer_id: res?.tc_customer_id,\r\n                    jobsite_id: res?.tc_customer_job_site_id,\r\n                    quotation_id: res?.tc_quotation_id,\r\n                    customerName: res?.customer_name,\r\n                    jobsite: res?.job_site_name,\r\n                    start_date: res?.start_date,\r\n                    end_date: res?.end_date,\r\n                    direct_to_pc: res?.direct_to_pc,\r\n                    co_regn_no: res?.co_regn_no,\r\n                    contract_number: res?.contract_number,\r\n                    wbs_element: res?.wbs_element,\r\n                    network_activity: res?.network_activity,\r\n                    officer_in_charge: res?.officer_in_charge_name,\r\n                    // status: res?.status || 'Quote Sent',\r\n                    created_at: moment(res.created_at).format('DD-MM-YYYY hh:mm A')\r\n                })\r\n                setReminder(res?.reminders ? JSON.parse(res?.reminders).map((item)=>{\r\n                    return {\r\n                        sr_no: item.sr_no,\r\n                        date: moment(item.date),\r\n                        time: moment(item.time),\r\n                        title: item.title,\r\n                        description: item.description,\r\n                    }\r\n                }) : [])\r\n                setLineItem(res?.line_items ? JSON.parse(res?.line_items) : [])\r\n                let gst_percentage = 9;\r\n                const sub_total = res.line_items ? JSON.parse(res?.line_items).reduce((acc, item) => acc + item.total, 0) : 0;\r\n                const gst_amount = (gst_percentage / 100) * sub_total || 0;\r\n                // const total_amount = sub_total + gst_amount;\r\n                let total_amount = 0;\r\n                // let subtotal_amount = res.sub_total || res.total;\r\n                // let total_amount = res.total;\r\n                // let gst_amount = (+gst_percentage/100)*subtotal_amount || 0;\r\n                if (gst_amount) {\r\n                    total_amount = sub_total + gst_amount;\r\n                }\r\n\r\n\r\n                setDataGrandTotal([\r\n                    { text: \"Subtotal\", amt: `${sub_total || 0}` },\r\n                    { text: \"GST\", amt: `${gst_amount.toFixed(2) || 0}`, tag: { text: (gst_percentage || 0) + `%`, color: \"#0099A8\" } },\r\n                ]);\r\n                setGrandTotal([\r\n                    { text: \"Grand Total\", amt: (total_amount).toFixed(2) }\r\n                ])\r\n\r\n\r\n                // if(res.total) {\r\n                //     setDataGrandTotal([\r\n                //         { text: \"Subtotal\", amt: `${subtotal_amount || 0}` },\r\n                //         { text: \"GST\", amt: `${gst_amount.toFixed(2) || 0}`, tag: { text: (gst_percentage || 0)+`%`, color: \"#0099A8\" } },\r\n                //     ]);\r\n                //     setGrandTotal([\r\n                //         { text: \"Grand Total\", amt: (total_amount).toFixed(2) }\r\n                //     ])\r\n                // }\r\n                console.log(contractData);\r\n                getQuotationData(res.tc_quotation_id)\r\n\r\n                if (res.tc_customer_id) getCustomerData(res.tc_customer_id);\r\n                // getAllGst(res.total);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    const getQuotationData = (q_id) => {\r\n        axios\r\n            .post(\r\n                \"/api/tc/get-quotation\",\r\n                {\r\n                    id: +q_id,\r\n                },\r\n            )\r\n            .then((response) => {\r\n                let res = response.data.data;\r\n\r\n                setQuoteData({\r\n                    id: res?.id,\r\n                    customer_id: res?.tc_customer_id,\r\n                    jobsite_id: res?.tc_customer_job_site_id,\r\n                    customerName: res?.customer_name,\r\n                    jobsite: res?.jobsite_name,\r\n                    inquiryDate: res?.inquiry_date ? moment(res?.inquiry_date).format('DD-MM-YYYY HH:mm A') : '',\r\n                    quotationDate: moment(res?.task_period_from_date).format('DD-MM-YYYY'),\r\n                    amount: res?.total,\r\n                    status: res?.status || 'Quote Sent',\r\n\r\n                    tc_customer_id: res?.tc_customer_id,\r\n                    task_period_from_date: moment(res?.task_period_from_date),\r\n                    task_period_to_date: moment(res?.task_period_to_date),\r\n                    due_date: moment(res?.due_date).format('DD-MM-YYYY'),\r\n                    sub_total: res?.sub_total || 0,\r\n                    tax: res?.gst || 8,\r\n                    discount: res?.discount || 0,\r\n                    total: res?.total,\r\n                    tc_quotation_file: res?.tc_quotation_file,\r\n                    quotation_remarks: res?.quotation_remarks || '',\r\n                    line_items: res?.line_items || [],\r\n                })\r\n                console.log(quoteData);\r\n\r\n                if (res.tc_customer_id) getCustomerData(res.tc_customer_id);\r\n\r\n                // getAllGst(res.total);\r\n                // let subtotal_amount = res.sub_total || res.total;\r\n                // let total_amount = res.total;\r\n                // let gst_percentage = res?.tax;\r\n                // let gst_amount = (+gst_percentage/100)*subtotal_amount || 0;\r\n                // if(gst_amount) {\r\n                //     total_amount = subtotal_amount + gst_amount;\r\n                // }\r\n\r\n                // if(res.total) {\r\n                //     setDataGrandTotal([\r\n                //         { text: \"Subtotal\", amt: `${subtotal_amount || 0}` },\r\n                //         { text: \"GST\", amt: `${gst_amount.toFixed(2) || 0}`, tag: { text: (gst_percentage || 0)+`%`, color: \"#0099A8\" } },\r\n                //     ]);\r\n                //     setGrandTotal([\r\n                //         { text: \"Grand Total\", amt: (total_amount).toFixed(2) }\r\n                //     ])\r\n                // }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    const getCustomerData = (cust_id) => {\r\n        axios\r\n            .post(\r\n                \"/api/tc/get-customer\",\r\n                {\r\n                    id: cust_id,\r\n                },\r\n            )\r\n            .then((response) => {\r\n                let res = response.data.data;\r\n\r\n                if (res.other_details) {\r\n                    let other_details = JSON.parse(res.other_details);\r\n                    res = { ...res, ...other_details }\r\n                }\r\n                setCustomerData({\r\n                    customerId: res.id,\r\n                    email: res.email,\r\n                    name: res.name,\r\n                    phone: res.phone,\r\n                    status: res.status,\r\n                    profile_pic: res?.profile_pic,\r\n                    contact_name: res?.contact_name,\r\n                    office_contact_number: res?.office_contact_number,\r\n                    uen_number: res?.uen_number,\r\n                    postal_code: res?.postal_code || '000000',\r\n                    block_number: res?.block_number || '',\r\n                    level_number: res?.level_number || '',\r\n                    unit_number: res?.unit_number || '',\r\n                    street_number: res?.street_number || '',\r\n                    country: res?.country || 'Singapore',\r\n                    created_by: res?.created_by || '',\r\n                    other_details: res?.other_details,\r\n                })\r\n                console.log(customerData)\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    // const getAllGst = (total)=> {\r\n    //     axios({\r\n    //         method: 'post',\r\n    //         url: \"/api/tc/get-all-gsts\",\r\n    //         data: {},\r\n    //     }).then(function (response) {\r\n    //         if(response.data.success) {\r\n    //             console.log(response.data.data)\r\n    //             let res = response.data.data.data;\r\n    //             let fdata = res.map((elem, ind) => {\r\n    //               return {\r\n    //                   key: elem.id,\r\n    //                   id: elem.id,\r\n    //                   srNo: ind+1,\r\n    //                   percentage: elem.percentage,\r\n    //                   description: elem.description,\r\n    //                   created_at: moment(elem.created_at).format(\"DD-MM-YYYY\"),\r\n    //                   updated_at: moment(elem.updated_at).format(\"DD-MM-YYYY\"),\r\n    //               };\r\n    //             });\r\n    //             setGstData(fdata);\r\n    //             console.log(fdata)\r\n    //             let gst_percentage = fdata[fdata.length-1].percentage || 0;\r\n    //             let gst_amount = ((gst_percentage/100)*total);\r\n    //             let total_amount = total + (gst_amount || 0)\r\n\r\n    //             if(total) {\r\n    //               setDataGrandTotal([\r\n    //                 { text: \"Subtotal\", amt: `${total || 0}` },\r\n    //                 { text: \"GST\", amt: `${gst_amount.toFixed(2) || 0}`, tag: { text: `${gst_percentage || 9}%`, color: \"#0099A8\" } },\r\n    //               ]);\r\n    //               setGrandTotal([\r\n    //                 { text: \"Grand Total\", amt: (total_amount || 0).toFixed(2) }\r\n    //               ])\r\n    //             }\r\n    //         }\r\n    //     }).catch(function (error) {\r\n    //         console.log(error);\r\n    //     });\r\n    // };\r\n\r\n    useEffect(() => {\r\n        getContractData();\r\n    }, []);\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <PageHeading\r\n                svg={ItemsAndServicesPageIcon}\r\n                title=\"Contracts / View Work Order\"\r\n            />\r\n            <Tabs>\r\n                <Tabs.TabPane tab=\"Work Order \" key=\"1\">\r\n                    <>\r\n                        <Card className=\"quotation-card\">\r\n                            <div ref={targetRef}>\r\n                                <Card className={classes.add_details}>\r\n                                    <div className=\"d-flex justify-content-between\">\r\n                                        <div>\r\n                                            <Text strong>{customerData.name}</Text>\r\n                                            <br />\r\n                                            <Text>{`${customerData.block_number} ${customerData.street_number}, ${customerData.level_number}, ${customerData.unit_number}`}</Text>\r\n                                            <br />\r\n                                            <Text>{`${customerData.country}, ${customerData.postal_code}`}</Text>\r\n                                            <br />\r\n                                            <Text strong>Customer ID: </Text><Text>{customerData.customerId}</Text>\r\n                                            <br />\r\n                                            <Text strong>Tel Number: </Text><Text>{customerData.phone}</Text>\r\n                                            <br />\r\n                                            <Text strong>Jobsite: </Text><Text>{contractData.jobsite}</Text>\r\n                                        </div>\r\n                                        <div className=\"text-left pr-4\">\r\n                                            <div style={{ fontSize: '1.5rem', fontWeight: '700' }} >WORK ORDER</div>\r\n                                            <div className=\"d-flex justify-content-between\">\r\n                                                <div className=\"mr-3\">\r\n                                                    <Text strong>Work Order No: </Text>\r\n                                                    <br />\r\n                                                    <Text strong>Date Of Commencement: </Text>\r\n                                                    <br />\r\n                                                    <Text strong>Date Of Expire: </Text>\r\n                                                    <br />\r\n                                                    <Text strong>Direct To Pc</Text>\r\n                                                    <br />\r\n                                                    <Text strong>Co Regn No</Text>\r\n                                                    <br />\r\n                                                    <Text strong>Contract Number</Text>\r\n                                                    <br />\r\n                                                    <Text strong>Wbs Element</Text>\r\n                                                    <br />\r\n                                                    <Text strong>Network Activity</Text>\r\n                                                    <br />\r\n                                                    <Text strong>Officer In Charge</Text>\r\n                                                    <br />\r\n\r\n\r\n                                                </div>\r\n                                                <div>\r\n                                                    <Text>#{contractData.id}</Text>\r\n                                                    <br />\r\n                                                    <Text>{contractData.start_date}</Text>\r\n                                                    <br />\r\n                                                    <Text>{contractData.end_date}</Text>\r\n                                                    <br />\r\n                                                    <Text>{contractData.direct_to_pc}</Text>\r\n                                                    <br />\r\n                                                    <Text>{contractData.co_regn_no}</Text>\r\n                                                    <br />\r\n                                                    <Text>{contractData.contract_number}</Text>\r\n                                                    <br />\r\n                                                    <Text>{contractData.wbs_element}</Text>\r\n                                                    <br />\r\n                                                    <Text>{contractData.network_activity}</Text>\r\n                                                    <br />\r\n                                                    <Text>{contractData.officer_in_charge}</Text>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Card>\r\n\r\n                                <div>\r\n                                    <Row>\r\n                                        <Col span={3}>\r\n                                            <Title level={4}>Sr. No.</Title>\r\n                                            <List\r\n                                                // dataSource={dataItems}\r\n                                                dataSource={lineItem}\r\n                                                renderItem={(item, index) => (\r\n                                                    <List.Item key={item.name} className=\" pl-0 border-0\">\r\n                                                        {index + 1}\r\n                                                    </List.Item>\r\n                                                )}\r\n                                            />\r\n                                        </Col>\r\n                                        <Col span={21}>\r\n                                            <Row>\r\n                                                <Col span={8}>\r\n                                                    <Title level={4}>Description</Title>\r\n                                                    <List\r\n                                                        // dataSource={dataServices}\r\n                                                        dataSource={lineItem}\r\n                                                        renderItem={(item) => (\r\n                                                            <List.Item key={item.name} className=\"pl-0 border-0\">\r\n                                                                <div\r\n                                                                    style={{ height: \"32px\" }}\r\n                                                                    className=\"d-flex align-items-center\"\r\n                                                                >\r\n                                                                    {item.name}\r\n                                                                </div>\r\n                                                            </List.Item>\r\n                                                        )}\r\n                                                    />\r\n                                                </Col>\r\n                                                <Col span={5}>\r\n                                                    <Title level={4}> Qty</Title>\r\n                                                    <List\r\n                                                        // dataSource={dataQty}\r\n                                                        dataSource={lineItem}\r\n                                                        renderItem={(item) => (\r\n                                                            <List.Item key={item.quantity} className=\"border-0\">\r\n                                                                <div\r\n                                                                    style={{ height: \"32px\" }}\r\n                                                                    className=\"d-flex align-items-center\"\r\n                                                                >\r\n                                                                    {item.quantity}\r\n                                                                </div>\r\n                                                            </List.Item>\r\n                                                        )}\r\n                                                    />\r\n                                                </Col>\r\n                                                <Col span={5}>\r\n                                                    <Title level={4}>Unit </Title>\r\n                                                    <List\r\n                                                        // dataSource={dataPrice}\r\n                                                        dataSource={lineItem}\r\n                                                        renderItem={(item) => (\r\n                                                            <List.Item key={item.price} className=\"pl-0 border-0\">\r\n                                                                <div\r\n                                                                    style={{ height: \"32px\" }}\r\n                                                                    className=\"d-flex align-items-center\"\r\n                                                                >\r\n                                                                    {item.price}\r\n                                                                </div>\r\n                                                            </List.Item>\r\n                                                        )}\r\n                                                    />\r\n                                                </Col>\r\n                                                <Col span={6}>\r\n                                                    <Title level={4}>SUBTOTAL(S$)</Title>\r\n                                                    <List\r\n                                                        // dataSource={dataTotal}\r\n                                                        dataSource={lineItem}\r\n                                                        renderItem={(item) => (\r\n                                                            <List.Item key={item.total} className=\"pl-0 border-0\">\r\n                                                                <div\r\n                                                                    style={{ height: \"32px\" }}\r\n                                                                    className=\"d-flex align-items-center\"\r\n                                                                >\r\n                                                                    {item.total}\r\n                                                                </div>\r\n                                                            </List.Item>\r\n                                                        )}\r\n                                                    />\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </div>\r\n                                <Divider />\r\n                                <div className=\"d-flex justify-content-end\">\r\n                                    <Row\r\n                                        style={{ width: \"40%\" }}\r\n                                        className=\"d-flex justify-content-center\"\r\n                                    >\r\n                                        <Col span={12}>\r\n                                            <List\r\n                                                dataSource={dataGrandTotal}\r\n                                                renderItem={(item) => (\r\n                                                    <List.Item\r\n                                                        key={item.text}\r\n                                                        className=\"pl-0 border-0 d-flex justify-content-center\"\r\n                                                    >\r\n                                                        <div className=\"d-flex align-items-center \">\r\n                                                            <Text strong>{item.text}</Text>\r\n                                                            {item.tag && (\r\n                                                                <div className={`${classes.total_amt} align-items-center`}>\r\n                                                                    {/* <Tag\r\n                                      color={item.tag.color}\r\n                                      className={`h-100 w-100 ${classes.tag}`}\r\n                                      style={{borderRadius: '1.5px', paddingTop: '1px'}}\r\n                                      >\r\n                                      {item.tag.text}\r\n                                      </Tag> */}\r\n                                                                    <span style={{ background: (item.tag.color), padding: '1.5px 4px' }}\r\n                                                                        className=\"ml-2 \"\r\n                                                                    >{item.tag.text}</span>\r\n                                                                </div>\r\n                                                            )}\r\n                                                        </div>\r\n                                                    </List.Item>\r\n                                                )}\r\n                                            />\r\n                                        </Col>\r\n                                        <Col span={12}>\r\n                                            <List\r\n                                                dataSource={dataGrandTotal}\r\n                                                renderItem={(item) => (\r\n                                                    <List.Item\r\n                                                        key={item.amt}\r\n                                                        className=\"pl-0 border-0 d-flex justify-content-center\"\r\n                                                    >\r\n                                                        <div className=\"d-flex align-items-center\">S$ {item.amt}</div>\r\n                                                    </List.Item>\r\n                                                )}\r\n                                            />\r\n                                        </Col>\r\n                                        <Divider />\r\n\r\n                                        <Col span={12}>\r\n                                            <List\r\n                                                dataSource={grandTotal}\r\n                                                renderItem={(item) => (\r\n                                                    <List.Item\r\n                                                        key={item.text}\r\n                                                        className=\"pl-0 border-0 d-flex justify-content-center\"\r\n                                                    >\r\n                                                        <div className=\"d-flex align-items-center \">\r\n                                                            <Text strong>{item.text}</Text>\r\n                                                        </div>\r\n                                                    </List.Item>\r\n                                                )}\r\n                                            />\r\n                                        </Col>\r\n                                        <Col span={12}>\r\n                                            <List\r\n                                                dataSource={grandTotal}\r\n                                                renderItem={(item) => (\r\n                                                    <List.Item\r\n                                                        key={item.amt}\r\n                                                        className=\"pl-0 border-0 d-flex justify-content-center\"\r\n                                                    >\r\n                                                        <div className=\"d-flex align-items-center\">S$ {item.amt}</div>\r\n                                                    </List.Item>\r\n                                                )}\r\n                                            />\r\n                                        </Col>\r\n                                    </Row>\r\n                                </div>\r\n\r\n                                <Divider />\r\n                                <div className=\"mt-5 d-flex justify-content-start\" style={{ fontSize: '14px' }}>\r\n                                    <div style={{ width: '40%' }}>\r\n                                        <Divider />\r\n                                        <h5><b>Grand Energy Technologies Pte Ltd</b></h5>\r\n                                        <div style={{ color: '#72849A' }}>Officer Incharge</div>\r\n                                        <div style={{ color: '#72849A' }}>{quoteData.quotationDate}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Card>\r\n\r\n                        <div className={`d-flex justify-content-between ${classes.action}`}>\r\n                            <div>\r\n                                <Button onClick={() => { history.goBack() }}>\r\n                                    Back\r\n                                </Button>\r\n                            </div>\r\n                            <Button onClick={() => {\r\n                                console.log(\"Downloading Contract...\");\r\n                                generatePDF(targetRef, options, { filename: 'Contract.pdf' });\r\n                            }}>\r\n                                <Icon component={PdfIcon} />\r\n                                Download Work Order\r\n                            </Button>\r\n                        </div></>\r\n                </Tabs.TabPane>\r\n                <Tabs.TabPane tab=\"Reminders \" key=\"2\">\r\n                    <Reminder reminder={reminder} contractData={rawContractData}/>\r\n                </Tabs.TabPane>\r\n                <Tabs.TabPane tab=\"Service Entry Sheet \" key=\"3\">\r\n                    <Service workOrderId={param.id}/>\r\n                </Tabs.TabPane>\r\n            </Tabs>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ViewContract;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"ViewQuotation_card__R444O\",\"quotation-card\":\"ViewQuotation_quotation-card__Fmau+\",\"ant-card-body\":\"ViewQuotation_ant-card-body__L4aPN\",\"add_details\":\"ViewQuotation_add_details__N-woT\",\"total_amt\":\"ViewQuotation_total_amt__sNB7q\",\"tag\":\"ViewQuotation_tag__bstHq\",\"send_btn\":\"ViewQuotation_send_btn__gYYwU\",\"action\":\"ViewQuotation_action__AkSjt\"};","import React , { useState, useEffect, useRef } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nimport {\r\n  Card,\r\n  Typography,\r\n  Col,\r\n  Row,\r\n  List,\r\n  Divider,\r\n  Tag,\r\n  Button,\r\n  Select,\r\n  Table,\r\n  DatePicker,\r\n  Modal,\r\n  Input,\r\n  TimePicker,\r\n  message\r\n  // Avatar,\r\n} from \"antd\";\r\nimport Icon from \"@ant-design/icons\"\r\nimport PageHeading from \"components/shared-components/PageHeading/PageHeading\";\r\nimport logo from \"assets/grand-energy-logo-small.png\";\r\nimport { ItemsAndServicesPageIcon } from \"assets/svg/icon\";\r\nimport HandBagImg from \"assets/HandBag.png\";\r\nimport SneakersImg from \"assets/Sneakers.png\";\r\nimport { PdfIcon } from \"../../../ItemsAndServices/svgIcons\";\r\n// import Modal from \"components/UI/Modal\";\r\n// import logo from \"assets/grand-energy-logo.png\";\r\n// import { SendIcon } from \"assets/svg/icon\";\r\n// import SendQuotationModal from \"./SendQuotationModal\";\r\nimport classes from \"./ViewQuotation.module.css\";\r\nimport generatePDF, { Margin } from 'react-to-pdf';\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\n\r\nconst { Title, Text } = Typography;\r\nconst options = {\r\n    page: {\r\n       margin: Margin.SMALL,\r\n    }\r\n};\r\n\r\n// const dataItems = [\r\n//   { title: \"XYZ Hand Bag\", image: HandBagImg },\r\n//   { title: \"Sneakers\", image: SneakersImg },\r\n// ];\r\n// const dataServices = [\"Leather Replacement\", \"Shoe Shine & Polish\"];\r\n// const dataQty = [1, 1];\r\n// const dataPrice = [\"S$100.00\", \"S$100.00\"];\r\n// const dataTotal = [\"S$100.00\", \"S$100.00\"];\r\n// let dataGrandTotal = [\r\n//     { text: \"Subtotal\", amt: \"S$0\" },\r\n//   //   { text: \"Discount\", amt: \"S$100.00\", tag: { text: \"10%\", color: \"#E82E2E\" } },\r\n//     { text: \"GST\", amt: \"S$100.00\", tag: { text: \"10%\", color: \"#0099A8\" } },\r\n//   ];\r\n\r\nconst ViewQuotation = () => {\r\n    const targetRef = useRef();\r\n    const history = useHistory();\r\n    const param = useParams();\r\n\r\n    const [customerData , setCustomerData] = useState({\r\n        customerId: 0,\r\n        email: '',\r\n        name: '',\r\n        phone: '',\r\n        status: '',\r\n        profile_pic: '',\r\n        contact_name: '',\r\n        office_contact_number: '',\r\n        uen_number: '',\r\n        postal_code: '',\r\n        block_number: '',\r\n        level_number: '',\r\n        unit_number: '',\r\n        street_number: '',\r\n        country: '',\r\n        created_by: '',\r\n        other_details: {}\r\n    });\r\n    const [quoteData , setQuoteData] = useState({\r\n        id: 0,\r\n        customer_id: '',\r\n        jobsite_id: '',\r\n        customerName: '',\r\n        jobsite: '',\r\n        inquiryDate: '',\r\n        quotationDate: '',\r\n        amount: '',\r\n        status: '',\r\n        \r\n        tc_customer_id: '',\r\n        task_period_from_date: '',\r\n        task_period_to_date: '',\r\n        due_date: '',\r\n        sub_total: 0,\r\n        tax: 8,\r\n        discount: 0,\r\n        total: 0,\r\n        tc_quotation_file: '',\r\n        quotation_remarks: '',\r\n        line_items: [],\r\n    });\r\n    const [contactData, setContactData] = useState([]);\r\n    const [gstData, setGstData] = useState([]);\r\n    const [openContractModal , setOpenContractModal] = useState(false);\r\n    const [commencementDate , setCommencementDate] = useState(false);\r\n    const [expiryDate , setExpiryDate] = useState(false);\r\n    const [remindersData , setRemindersData] = useState([]);\r\n    const [contractType , setContractType] = useState(false);\r\n    const [grandTotal , setGrandTotal] = useState([\r\n      // { text: \"Grand Total\", amt: \"0\" }\r\n    ]);\r\n    const [dataGrandTotal , setDataGrandTotal] = useState([\r\n      // { text: \"Subtotal\", amt: \"0\" },\r\n      // { text: \"GST\", amt: \"0\", tag: { text: \"0%\", color: \"#0099A8\" } },\r\n    ]);\r\n\r\n    const removeReminder =(record) => {\r\n        let newRemindersData = remindersData.filter((elem) => elem.sr_no !== record.sr_no);\r\n        setRemindersData(newRemindersData);\r\n    }\r\n\r\n    const reminderColumns = [\r\n        {\r\n          title: 'Sr. No.',\r\n          dataIndex: 'sr_no',\r\n        },\r\n        {\r\n          title: 'Date',\r\n          dataIndex: 'date',\r\n          render: (_, record) => {\r\n            return (\r\n              <div>\r\n                <DatePicker value={record.date} className='w-100' onChange={(e) => {\r\n                  let data = remindersData\r\n                  let index = remindersData.findIndex((elem) => elem === record)\r\n                  data[index].date = e\r\n                  setRemindersData([...data])\r\n                }}/>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          title: 'Time',\r\n          dataIndex: 'time',\r\n          render: (_, record) => {\r\n            return (\r\n              <div>\r\n                <TimePicker value={record.time} className='w-100' format={'HH:mm A'} use12Hours={true} onChange={(e) => {\r\n                  let data = remindersData\r\n                  let index = remindersData.findIndex((elem) => elem === record)\r\n                  data[index].time = e;\r\n                  setRemindersData([...data])\r\n                }}/>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          title: 'Title',\r\n          dataIndex: 'title',\r\n          render: (_, record) => {\r\n            return (\r\n              <div>\r\n                <Input value={record.title} className='w-100' onChange={(e) => {\r\n                  let data = remindersData\r\n                  let index = remindersData.findIndex((elem) => elem === record)\r\n                  data[index].title = e.target.value\r\n                  setRemindersData([...data])\r\n                }}/>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          title: 'Content',\r\n          dataIndex: 'description',\r\n          render: (_, record) => {\r\n            return (\r\n              <div>\r\n                <Input value={record.description} className='w-100' onChange={(e) => {\r\n                  let data = remindersData\r\n                  let index = remindersData.findIndex((elem) => elem === record)\r\n                  data[index].description = e.target.value\r\n                  setRemindersData([...data])\r\n                }}/>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          title: 'Action',\r\n          dataIndex: '',\r\n          key: 'x',\r\n          render: (_,record) => <Button type='danger' onClick={() => {removeReminder(record)}} className='font-weight-bold'>remove</Button>,\r\n        },\r\n    ];\r\n\r\n    const handleContractOk = () => {\r\n        console.log(quoteData);\r\n        axios\r\n          .post(\r\n            \"/api/tc/new-contract\",\r\n            {\r\n              tc_quotation_id: quoteData.id,\r\n              tc_customer_id: quoteData.customer_id,\r\n              tc_customer_job_site_id: quoteData.customer_job_site_id || null,\r\n              start_date: moment(commencementDate),\r\n              end_date: moment(expiryDate),\r\n              reminders: remindersData,\r\n              type: contractType,\r\n              status: 'Active'\r\n            },\r\n          )\r\n          .then((response) => {\r\n            console.log(response);\r\n            setCommencementDate(null);\r\n            setExpiryDate(null);\r\n            setContractType(null);\r\n            setRemindersData([]);\r\n            setOpenContractModal(false);\r\n            message.success('Contract created successfully');\r\n            updateQuotationStatus();\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n            setOpenContractModal(false);\r\n            message.error('Contract cannot be created, please try again later');\r\n          });\r\n      };\r\n\r\n      const updateQuotationStatus = () => {\r\n        console.log(quoteData);\r\n        axios\r\n        .post(\r\n          \"/api/tc/update-quotation\",\r\n          {\r\n            ...quoteData,\r\n            id: quoteData.id,\r\n            tc_customer_id: quoteData.customer_id,\r\n            status: 'Contract Generated'\r\n          },\r\n        )\r\n        .then((response) => {\r\n          let res = response.data;\r\n          console.log(res);\r\n          getQuotationData();\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        }); \r\n      };\r\n    \r\n      const handleContractCancel = () => {\r\n        setOpenContractModal(false);\r\n      };\r\n\r\n      const handleCancel = () => {\r\n        setOpenContractModal(false);\r\n      };\r\n    \r\n      const handleAddReminder = () => {\r\n        setRemindersData([...remindersData, {\r\n          sr_no: remindersData.length + 1,\r\n          date: null,\r\n          title: '',\r\n          description: '',\r\n        }]);\r\n      };\r\n\r\n      const generateInvoiceHandler = () => {\r\n        history.push(`/app/contract-management/quotations/generate-invoice/${+param.id}`)\r\n      }\r\n\r\n      const commencementDateChange = (date) => {\r\n        setCommencementDate(date);\r\n      }\r\n    \r\n      const expiryDateChange = (date) => {\r\n        setExpiryDate(date);\r\n      }\r\n    \r\n      const contractTypeChange = (event) => {\r\n        setContractType(event);\r\n      }\r\n    \r\n      const getQuotationData = () => {\r\n        axios\r\n        .post(\r\n            \"/api/tc/get-quotation\",\r\n            {\r\n            id: +param.id,\r\n            },\r\n        )\r\n        .then((response) => {\r\n            let res = response.data.data;\r\n\r\n            setQuoteData({\r\n                id: res?.id,\r\n                customer_id: res?.tc_customer_id,\r\n                jobsite_id: res?.tc_customer_job_site_id,\r\n                customerName: res?.customer_name,\r\n                jobsite: res?.jobsite_name,\r\n                inquiryDate: res?.inquiry_date ? moment(res?.inquiry_date).format('DD-MM-YYYY HH:mm A'):'',\r\n                quotationDate: moment(res?.task_period_from_date).format('DD-MM-YYYY'),\r\n                amount: res?.total,\r\n                status: res?.status || 'Quote Sent',\r\n                \r\n                tc_customer_id: res?.tc_customer_id,\r\n                task_period_from_date: moment(res?.task_period_from_date),\r\n                task_period_to_date: moment(res?.task_period_to_date),\r\n                due_date: moment(res?.due_date).format('DD-MM-YYYY'),\r\n                sub_total: res?.sub_total || 0,\r\n                tax: res?.gst || 8,\r\n                discount: res?.discount || 0,\r\n                total: res?.total,\r\n                tc_quotation_file: res?.tc_quotation_file,\r\n                quotation_remarks: res?.quotation_remarks || '',\r\n                line_items: res?.line_items || [],\r\n                payment_term: res?.payment_term || '',\r\n                validity: res?.validity || '',\r\n            })\r\n            console.log(quoteData);\r\n\r\n            if(res.tc_customer_id) getCustomerData(res.tc_customer_id);\r\n            // getAllGst(res.total);\r\n            let subtotal_amount = res.sub_total || res.total;\r\n            let total_amount = res.total;\r\n            let gst_percentage = res?.tax;\r\n            let gst_amount = ((gst_percentage/100)*subtotal_amount);\r\n\r\n\r\n            if(res.total) {\r\n                setDataGrandTotal([\r\n                    { text: \"Subtotal\", amt: `${subtotal_amount || 0}` },\r\n                    { text: \"GST\", amt: `${gst_amount.toFixed(2) || 0}`, tag: { text: `${gst_percentage || 0}%`, color: \"#0099A8\" } },\r\n                ]);\r\n                setGrandTotal([\r\n                    // { text: \"Grand Total\", amt: (res.total + (gst_percentage/100)*res.sub_total).toFixed(2) }\r\n                    { text: \"Grand Total\", amt: (total_amount).toFixed(2) }\r\n                ])\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n      }\r\n    \r\n      const getCustomerData = (cust_id) => {\r\n        axios\r\n        .post(\r\n            \"/api/tc/get-customer\",\r\n            {\r\n            id: cust_id,\r\n            },\r\n        )\r\n        .then((response) => {\r\n            let res = response.data.data;\r\n\r\n            if(res.other_details) {\r\n                let other_details = JSON.parse(res.other_details);\r\n                res = {...res, ...other_details}\r\n            }\r\n            setCustomerData({\r\n                customerId: res.id,\r\n                email: res.email,\r\n                name: res.name,\r\n                phone: res.phone,\r\n                status: res.status,\r\n                profile_pic: res?.profile_pic,\r\n                contact_name: res?.contact_name,\r\n                office_contact_number: res?.office_contact_number,\r\n                uen_number: res?.uen_number,\r\n                postal_code: res?.postal_code || '000000',\r\n                block_number: res?.block_number || '',\r\n                level_number: res?.level_number || '',\r\n                unit_number: res?.unit_number || '',\r\n                street_number: res?.street_number || '',\r\n                country: res?.country || 'Singapore',\r\n                created_by: res?.created_by || '',\r\n                other_details: res?.other_details\r\n            })\r\n            console.log(customerData)\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n      }\r\n\r\n      // const getAllGst = (total)=> {\r\n      //   axios({\r\n      //       method: 'post',\r\n      //       url: \"/api/tc/get-all-gsts\",\r\n      //       data: {},\r\n      //   }).then(function (response) {\r\n      //       if(response.data.success) {\r\n      //           console.log(response.data.data)\r\n      //           let res = response.data.data.data;\r\n      //           let fdata = res.map((elem, ind) => {\r\n      //             return {\r\n      //                 key: elem.id,\r\n      //                 id: elem.id,\r\n      //                 srNo: ind+1,\r\n      //                 percentage: elem.percentage,\r\n      //                 description: elem.description,\r\n      //                 created_at: moment(elem.created_at).format(\"DD-MM-YYYY\"),\r\n      //                 updated_at: moment(elem.updated_at).format(\"DD-MM-YYYY\"),\r\n      //             };\r\n      //           });\r\n      //           setGstData(fdata);\r\n      //           console.log(fdata)\r\n      //           let gst_percentage = fdata[fdata.length-1].percentage || 0;\r\n      //           let gst_amount = ((gst_percentage/100)*total).toFixed(2);\r\n\r\n      //           if(total) {\r\n      //             setDataGrandTotal([\r\n      //               { text: \"Subtotal\", amt: `${total || 0}` },\r\n      //               { text: \"GST\", amt: `${gst_amount || 0}`, tag: { text: `${gst_percentage || 9}%`, color: \"#0099A8\" } },\r\n      //             ]);\r\n      //             setGrandTotal([\r\n      //               { text: \"Grand Total\", amt: (total + (gst_percentage/100)*total).toFixed(2) }\r\n      //             ])\r\n      //           }\r\n      //       }\r\n      //   }).catch(function (error) {\r\n      //       console.log(error);\r\n      //   });\r\n      // };\r\n\r\n      const getContactDetails = () => {\r\n        axios({\r\n          method: 'post',\r\n          url: \"/api/tc/get-contact-details\",\r\n          data: {},\r\n        }).then(function (response) {\r\n          console.log(response.data);\r\n          let res = response.data.data;\r\n          setContactData({\r\n            email: res.email,\r\n            mobile: res.mobile,\r\n            tel: res.tel,\r\n            address: res.address,\r\n          })\r\n        }).catch(function (error) {\r\n            console.log(error);\r\n        });\r\n      }\r\n\r\n      useEffect(() => {\r\n          getQuotationData();\r\n          getContactDetails();\r\n      }, []);\r\n  \r\n    return (\r\n      <React.Fragment>\r\n  \r\n        {/* {showModal && <Modal onClose={showModalHandler}><SendQuotationModal/></Modal>} */}\r\n        <PageHeading\r\n          svg={ItemsAndServicesPageIcon}\r\n          title=\"Quotations / View Quotation\"\r\n        />\r\n        \r\n        <Card className=\"quotation-card\">\r\n            <div ref={targetRef}>\r\n                <Card className={classes.card}>\r\n                    <div className=\"mt-2 mb-2 w-100\">\r\n                    <img src={logo} alt=\"logo\" style={{width: '20%'}}/>\r\n                    <div className=\"d-flex justify-content-between mt-3\">\r\n                        <div>\r\n                        <Title strong level={3}>\r\n                            GRAND ENERGY TECHNOLOGIES PTE LTD\r\n                        </Title>\r\n                        <Text><b>Email:</b> {contactData.email || ''}</Text>\r\n                        </div>\r\n                        <div></div>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <div>\r\n                        <Text><b>Phone:</b> {contactData.tel || ''}</Text>\r\n                        <br />\r\n                        <Text><b>UEN/GST No:</b> 201802457D</Text>\r\n                        </div>\r\n                        <div className=\"text-right\">\r\n                        <Text>130 Jurong Gateway Road </Text>\r\n                        <br />\r\n                        <Text>#03-203 Singapore (600130) </Text>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </Card>\r\n                <Card className={classes.add_details}>\r\n                    <div>\r\n                    <h5>Billed To:</h5>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-between\">\r\n                    <div className=\"mr-5\">\r\n                        {/* <Title strong level={3}>\r\n                        Billed To\r\n                        </Title> */}\r\n                        <br />\r\n                        <Text strong>{customerData.name}</Text>\r\n                        <br />\r\n                        <Text>{`${customerData.block_number} ${customerData.street_number}, ${customerData.level_number}, ${customerData.unit_number}`}</Text>\r\n                        <br />\r\n                        <Text>{`${customerData.country}, ${customerData.postal_code}`}</Text>\r\n                        <br />\r\n                        <br />\r\n                        <Text>{customerData.email}</Text>\r\n                        <br />\r\n                        <Text><b>Phone:</b> {customerData.phone}</Text>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <div className=\"mr-4\">\r\n                        <br />\r\n                        <Text strong>Quotation No</Text>\r\n                        <br />\r\n                        <Text>#{quoteData.id}</Text>\r\n                        <br />\r\n                        <br />\r\n                        <Text strong>Quotation Date</Text>\r\n                        <br />\r\n                        <Text>{quoteData.quotationDate}</Text>\r\n                        <br />\r\n                        </div>\r\n                        <div className=\"text-right\">\r\n                        <br />\r\n                        <Text strong>Payment Term</Text>\r\n                        <br />\r\n                        <Text>{quoteData.payment_term || '-'}</Text>\r\n                        <br />\r\n                        <br />\r\n                        <Text strong>Validity</Text>\r\n                        <br />\r\n                        <Text>{quoteData.validity || '0'} Days</Text>\r\n                        <br />\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </Card>\r\n        \r\n                <div>\r\n                    <Row>\r\n                    <Col span={3}>\r\n                        <Title level={4}>Sr. No.</Title>\r\n                        <List\r\n                        // dataSource={dataItems}\r\n                        dataSource={quoteData.line_items}\r\n                        renderItem={(item, index) => (\r\n                            <List.Item key={item.name} className=\" pl-0 border-0\">\r\n                            {index + 1}\r\n                            </List.Item>\r\n                        )}\r\n                        />\r\n                    </Col>\r\n                    <Col span={21}>\r\n                        <Row>\r\n                        <Col span={8}>\r\n                            <Title level={4}>Description</Title>\r\n                            <List\r\n                            // dataSource={dataServices}\r\n                            dataSource={quoteData.line_items}\r\n                            renderItem={(item) => (\r\n                                <List.Item key={item.name} className=\"pl-0 border-0\">\r\n                                <div\r\n                                    style={{ height: \"32px\" }}\r\n                                    className=\"d-flex align-items-center\"\r\n                                >\r\n                                    {item.name}\r\n                                </div>\r\n                                </List.Item>\r\n                            )}\r\n                            />\r\n                        </Col>\r\n                        <Col span={5}>\r\n                            <Title level={4}>Provisional Qty</Title>\r\n                            <List\r\n                            // dataSource={dataQty}\r\n                            dataSource={quoteData.line_items}\r\n                            renderItem={(item) => (\r\n                                <List.Item key={item.quantity} className=\"border-0\">\r\n                                <div\r\n                                    style={{ height: \"32px\" }}\r\n                                    className=\"d-flex align-items-center\"\r\n                                >\r\n                                    {item.quantity}\r\n                                </div>\r\n                                </List.Item>\r\n                            )}\r\n                            />\r\n                        </Col>\r\n                        <Col span={5}>\r\n                            <Title level={4}>Unit Price(S$)</Title>\r\n                            <List\r\n                            // dataSource={dataPrice}\r\n                            dataSource={quoteData.line_items}\r\n                            renderItem={(item) => (\r\n                                <List.Item key={item.price} className=\"pl-0 border-0\">\r\n                                <div\r\n                                    style={{ height: \"32px\" }}\r\n                                    className=\"d-flex align-items-center\"\r\n                                >\r\n                                    {item.price}\r\n                                </div>\r\n                                </List.Item>\r\n                            )}\r\n                            />\r\n                        </Col>\r\n                        <Col span={6}>\r\n                            <Title level={4}>SUBTOTAL(S$)</Title>\r\n                            <List\r\n                            // dataSource={dataTotal}\r\n                            dataSource={quoteData.line_items}\r\n                            renderItem={(item) => (\r\n                                <List.Item key={item.total} className=\"pl-0 border-0\">\r\n                                <div\r\n                                    style={{ height: \"32px\" }}\r\n                                    className=\"d-flex align-items-center\"\r\n                                >\r\n                                    {item.total}\r\n                                </div>\r\n                                </List.Item>\r\n                            )}\r\n                            />\r\n                        </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    </Row>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"d-flex justify-content-end\">\r\n                    <Row\r\n                      style={{ width: \"40%\" }}\r\n                      className=\"d-flex justify-content-center\"\r\n                    >\r\n                      <Col span={12}>\r\n                          <List\r\n                          dataSource={dataGrandTotal}\r\n                          renderItem={(item) => (\r\n                              <List.Item\r\n                              key={item.text}\r\n                              className=\"pl-0 border-0 d-flex justify-content-center\"\r\n                              >\r\n                              <div className=\"d-flex align-items-center \">\r\n                                  <Text strong>{item.text}</Text>\r\n                                  {item.tag && (\r\n                                  <div className={classes.total_amt}>\r\n                                      {/* <Tag\r\n                                      color={item.tag.color}\r\n                                      className={`h-100 w-100 ${classes.tag}`}\r\n                                      style={{borderRadius: '1.5px', paddingTop: '1px'}}\r\n                                      >\r\n                                      {item.tag.text}\r\n                                      </Tag> */}\r\n                                      <span style={{background: (item.tag.color), padding: '1.5px 4px'}}\r\n                                      className=\"ml-2 \"\r\n                                      >{item.tag.text}</span>\r\n                                  </div>\r\n                                  )}\r\n                              </div>\r\n                              </List.Item>\r\n                          )}\r\n                          />\r\n                      </Col>\r\n                      <Col span={12}>\r\n                          <List\r\n                          dataSource={dataGrandTotal}\r\n                          renderItem={(item) => (\r\n                              <List.Item\r\n                              key={item.amt}\r\n                              className=\"pl-0 border-0 d-flex justify-content-center\"\r\n                              >\r\n                              <div className=\"d-flex align-items-center\">S$ {item.amt}</div>\r\n                              </List.Item>\r\n                          )}\r\n                          />\r\n                      </Col>\r\n                      <Divider />\r\n\r\n                      <Col span={12}>\r\n                          <List\r\n                          dataSource={grandTotal}\r\n                          renderItem={(item) => (\r\n                              <List.Item\r\n                              key={item.text}\r\n                              className=\"pl-0 border-0 d-flex justify-content-center\"\r\n                              >\r\n                              <div className=\"d-flex align-items-center \">\r\n                                  <Text strong>{item.text}</Text>\r\n                              </div>\r\n                              </List.Item>\r\n                          )}\r\n                          />\r\n                      </Col>\r\n                      <Col span={12}>\r\n                          <List\r\n                          dataSource={grandTotal}\r\n                          renderItem={(item) => (\r\n                              <List.Item\r\n                              key={item.amt}\r\n                              className=\"pl-0 border-0 d-flex justify-content-center\"\r\n                              >\r\n                              <div className=\"d-flex align-items-center\">S$ {item.amt}</div>\r\n                              </List.Item>\r\n                          )}\r\n                          />\r\n                      </Col>\r\n                    </Row>\r\n                </div>\r\n\r\n                <Divider />\r\n\r\n                <div className=\"text-left w-75 mt-2\" style={{fontSize: '14px'}}>\r\n                   <h5>Term and Conditions</h5>\r\n                   <ol>\r\n                      <li>{quoteData.customerName} shall obtained all approvals from relevant authorities/stakeholders and facilitate our site personnel for site safety procedures including working at night or weekend/public holidays.</li>\r\n                      <li>{quoteData.customerName} site supervisor shall be presented during the whole course of installation work and final joint measurement.</li>\r\n                      <li>50% downpayment upon confirmation, 50% upon completion of work.</li>\r\n                      <li>All price quote excludes GST.</li>\r\n                      <li>We shall not be liable for any loss, damage or injury or any consequential or indirect loss sustained by you or third parties pertaining to the works.</li>\r\n                      <li>Any other items which is not specifically indicated above. Any liability on this job is limited to half of the relevant sum awarded.</li>\r\n                   </ol>\r\n                   <p>We look forward to your confirmation</p>\r\n                </div>\r\n                <div className=\"mt-5 d-flex justify-content-between\" style={{fontSize: '14px'}}>\r\n                   <div style={{width: '40%'}}>\r\n                      <Divider />\r\n                      <h5><b>Grand Energy Technologies Pte Ltd</b></h5>\r\n                      <div style={{color: '#72849A'}}>GET Manager</div>\r\n                      <div style={{color: '#72849A'}}>{quoteData.quotationDate}</div>\r\n                   </div>\r\n                   <div style={{width: '20%'}}>\r\n                      <Divider />\r\n                      <h5><b>Customer Signature</b></h5>\r\n                      <div style={{color: '#72849A'}}>Name: </div>\r\n                      <div style={{color: '#72849A'}}>Designation: </div>\r\n                      <div style={{color: '#72849A'}}>Date: </div>\r\n                   </div>\r\n                </div>\r\n            </div>\r\n        </Card>\r\n  \r\n        <div className={`d-flex justify-content-between ${classes.action}`}>\r\n            <div className=\"d-flex\">\r\n                <Button onClick={() => {history.goBack()}}>\r\n                    Back\r\n                </Button>\r\n                <Button style={{backgroundColor: '#5772FF', color: '#fff'}} onClick={() => {generateInvoiceHandler()}}>\r\n                    Generate Invoice\r\n                </Button>\r\n                {quoteData.status !=='Contract Generated' && <Button style={{backgroundColor: '#5772FF', color: '#fff'}} onClick={() => {setOpenContractModal(true)}}>\r\n                    Create Contract\r\n                </Button>}\r\n            </div>\r\n            <div className=\"d-flex justify-content-end\">\r\n            <Button onClick={() => {\r\n              console.log(\"Downloading Attachment...\");\r\n              window.open(quoteData.tc_quotation_file);\r\n            }}>\r\n              {/* <Icon component={PdfIcon} /> */}\r\n              View Attachment\r\n            </Button>\r\n\r\n            <Button onClick={() => {\r\n              console.log(\"Downloading Quotation...\");\r\n              generatePDF(targetRef, options, {filename: 'Quotation.pdf'});\r\n            }}>\r\n              <Icon component={PdfIcon} />\r\n              Download Quotation\r\n            </Button>\r\n            </div>\r\n        </div>\r\n\r\n        <Modal\r\n          visible={openContractModal}\r\n          centered\r\n          maskClosable\r\n          width={900}\r\n          onCancel={handleCancel}\r\n          title={'Create Contract'}\r\n          footer={[\r\n              <Button style={{ color: '#F5F5F5' }} type=\"primary\" className='font-weight-bold' onClick={handleContractOk}>Save</Button>,\r\n              <Button style={{ color: '#000B23' }} onClick={handleContractCancel} className='font-weight-bold'>Cancel</Button>,\r\n        ]}\r\n        >\r\n          <div className='w-50'>\r\n              <h4 className=\"mb-2 mt-4\">Date Of Commencement of Work</h4>\r\n              <DatePicker value={commencementDate} onChange={commencementDateChange}/>\r\n          </div>\r\n\r\n          <div className='w-50'>\r\n              <h4 className=\"mb-2 mt-4\">Date of Expiration of Work</h4>\r\n              <DatePicker value={expiryDate} onChange={expiryDateChange}/>\r\n          </div>\r\n\r\n          <div>\r\n              <h4 className=\"mb-2 mt-4\">Reminders</h4>\r\n              <Table columns={reminderColumns} dataSource={remindersData} />\r\n              <Button type='primary' className='font-weight-bold mt-2' onClick={handleAddReminder}>Add Reminder</Button>\r\n          </div>\r\n\r\n          <div className='w-50'>\r\n              <h4 className=\"mb-2 mt-4\">Contract Type</h4>\r\n              <Select\r\n                className='w-100'\r\n                showSearch\r\n                placeholder=\"Contract Type\"\r\n                value={contractType}\r\n                onChange={contractTypeChange}\r\n              >\r\n                <Select.Option title={'None'} key={0} value={'None'}>{'None'}</Select.Option>\r\n                <Select.Option title={'Ad Hoc'} key={1} value={'Ad Hoc'}>{'Ad Hoc'}</Select.Option>\r\n                <Select.Option title={'Routine'} key={2} value={'Routine'}>{'Routine'}</Select.Option>\r\n              </Select>\r\n          </div>\r\n        </Modal>\r\n      </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default ViewQuotation","import Icon from \"@ant-design/icons\";\r\nimport React from \"react\";\r\nimport { submitTick } from \"assets/svg/icon\";\r\n\r\nconst QuotationModal = (props) => {\r\n  return (\r\n    <div className=\"text-center\">\r\n      <Icon component={submitTick} />\r\n      <div>\r\n        <h1>New Invoice Created</h1>\r\n        <p>\r\n          Invoice is created successfully.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuotationModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { formats, modules } from \"utils/textEditorModules\";\r\nimport ReactQuill from \"react-quill\";\r\nimport axios from \"axios\";\r\n\r\nimport {\r\n  Form,\r\n  Input,\r\n  DatePicker,\r\n  Select,\r\n  Button,\r\n  InputNumber,\r\n  Upload,\r\n  Row,\r\n  Col,\r\n  Card, \r\n  Modal,\r\n  message,\r\n  Table,\r\n  Typography,\r\n} from \"antd\";\r\nimport { InboxOutlined } from '@ant-design/icons';\r\n\r\nconst { Dragger } = Upload;\r\nconst { TextArea } = Input;\r\n// const { RangePicker } = DatePicker;\r\n// const {Title , Text} = Typography;\r\n\r\nconst FormInvoice = ({form, customers, customer_id, jobsData, setJobsData, setJobFile, jobFileUrl}) => {\r\n    const columns = [\r\n      {\r\n        title: 'SR NO',\r\n        dataIndex: 'sr_no',\r\n      },\r\n      {\r\n        title: 'DESCRIPTION',\r\n        dataIndex: 'name',\r\n      },\r\n      {\r\n        title: 'PROVISIONAL QTY',\r\n        dataIndex: 'quantity',\r\n      },\r\n      {\r\n        title: 'UNIT PRICE',\r\n        dataIndex: 'price',\r\n      },\r\n      {\r\n        title: 'SUBTOTAL',\r\n        dataIndex: 'total',\r\n      },\r\n    ];\r\n\r\n    const customerColumns = [\r\n      {\r\n        title: 'Customer ID',\r\n        dataIndex: 'id',\r\n      },\r\n      {\r\n        title: 'Customer Name',\r\n        dataIndex: 'name',\r\n      },\r\n      {\r\n        title: 'Mobile Number',\r\n        dataIndex: 'phone',\r\n      },\r\n      {\r\n        title: 'Email Address',\r\n        dataIndex: 'email',\r\n      },\r\n      {\r\n        title: 'Customer Since',\r\n        dataIndex: 'created_at',\r\n      },\r\n      {\r\n        title: 'Status',\r\n        dataIndex: '',\r\n        render: (_,record) => {\r\n          return <Button style={{backgroundColor: ''}} className='mt-2 p-1 px-2' >{record.status}</Button>\r\n        },\r\n      },\r\n    ];\r\n    const removeJob = (record) => {\r\n      let jobs = jobsData.filter((e) => e != record);\r\n      setJobsData(jobs)\r\n    }\r\n    \r\n    \r\n    const [customerData, setCustomerData] = useState('');\r\n    const [value, setValue] = useState('');\r\n    const [paymentTerm, setPaymentTerm] = useState('');\r\n    const [selectedJobsite, setSelectedJobsite] = useState(0);\r\n    const [uploadedFile, setUploadedFile] = useState({\r\n      name: '',\r\n      url: ''\r\n    });\r\n    const [allJobsites, setAllJobsites] = useState([]);\r\n    const [allContracts, setAllContracts] = useState([]);\r\n    const tok = localStorage.getItem('token');\r\n    // const [jobDetailsTemp, setJobDetailsTemp] = useState({\r\n    //     sr_no: 0, \r\n    //     id: 0, \r\n    //     description: '', \r\n    //     provisionalQty: 0, \r\n    //     unitPrice: 0\r\n    //   });\r\n    // const [description, setDescription] = useState('');\r\n    // const [quoteDescription, setQuoteDescription] = useState('');\r\n    // const [quantity, setQuantity] = useState(0);\r\n    // const [unitPrice, setUnitPrice] = useState(0);\r\n    // const [openUploadPdfModal, setOpenUploadPdfModal] = useState(false);\r\n    // const [openJobModal, setOpenJobModal] = useState(false);\r\n  \r\n    const getAllJobSites = () => {\r\n      axios({\r\n          method: 'post',\r\n          url: \"/api/tc/get-customer-job-sites\",\r\n          headers: {\r\n              // 'content-type': `multipart/form-data`,\r\n              Authorization: `Bearer ${tok}`\r\n          },\r\n          data: {\r\n              customer_id: form.getFieldValue(\"customer_id\") || 0,\r\n              page_index: 1,\r\n              page_size: 100000,\r\n              search : ''\r\n          }\r\n      }).then((response) => {\r\n          console.log(response.data)\r\n          if (response.data.success) {\r\n            setAllJobsites(response.data.data.data)\r\n          }\r\n          // form.setFieldsValue(\r\n          //   {\r\n          //     ...form.getFieldsValue(),\r\n          //     jobsite_id: res.id,\r\n          //   }\r\n          // )\r\n      }).catch((err) => {\r\n          console.log(err)\r\n      });\r\n    }\r\n  \r\n    const getAllContracts = () => {\r\n      axios({\r\n          method: 'post',\r\n          url: \"/api/tc/get-contracts\",\r\n          headers: {\r\n              // 'content-type': `multipart/form-data`,\r\n              Authorization: `Bearer ${tok}`\r\n          },\r\n          data: {\r\n              customer_id: customer_id || null,\r\n              page_index: 1,\r\n              page_size: 100000,\r\n              search : ''\r\n          }\r\n      }).then((response) => {\r\n          console.log(response.data)\r\n          let res = response.data.data.data[0];\r\n          if (response.data.success) {\r\n            setAllContracts(response.data.data.data);\r\n          }\r\n          form.setFieldsValue(\r\n            {\r\n              ...form.getFieldsValue(),\r\n              contract_id: res.id,\r\n            }\r\n          )\r\n      }).catch((err) => {\r\n          console.log(err)\r\n      });\r\n    }\r\n  \r\n    useEffect(() => {\r\n      getAllJobSites();\r\n      getAllContracts();\r\n\r\n      // setCustomerData([{\r\n      //   id: form.getFieldValue().customer_id,\r\n      //   customer_id: form.getFieldValue().customer_id,\r\n      //   customer_name: form.getFieldValue().customer_name,\r\n      //   phone: form.getFieldValue().phone,\r\n      //   email: form.getFieldValue().email,\r\n      //   status: form.getFieldValue().status,\r\n      // }])\r\n\r\n      setCustomerData([form.getFieldsValue()]);\r\n    }, [])\r\n    \r\n    return (\r\n      <>\r\n        <Card className=\"mt-3\">\r\n            \r\n        <Row align=\"top\">\r\n          <Col span={12}>\r\n            <Form.Item name=\"customer_id\" label=\"Customer Name\" rules={[{ required: true, message: 'Please select Customer!' }]}>\r\n              <Select onChange={getAllJobSites} disabled>\r\n                {customers.map((elem, index) => {\r\n                  return (\r\n                    <Select.Option key={index} value={elem.id}>\r\n                      {elem.company}\r\n                    </Select.Option>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </Form.Item>\r\n          </Col>\r\n          {/* <Col span={24}>\r\n            <Table className=\"my-3\" columns={customerColumns} dataSource={customerData} pagination={false}/>\r\n          </Col> */}\r\n        </Row>\r\n\r\n        <Row >\r\n          <Col span={12}>\r\n            <Form.Item\r\n              label=\"Jobsite\"\r\n              name=\"jobsite_id\"\r\n              rules={[{ required: true, message: \"Required\" }]}\r\n            >\r\n              <Select\r\n                  showSearch\r\n                  placeholder=\"Jobsite\"\r\n                  optionFilterProp=\"children\"\r\n                  filterOption={(input, option) => (option?.title ?? '').toString().toLowerCase()?.includes(input?.toLowerCase())}\r\n                  filterSort={(optionA, optionB) =>\r\n                      (optionA?.label ?? '').toString().toLowerCase().localeCompare((optionB?.label ?? '').toString().toLowerCase())\r\n                  }\r\n                  value={selectedJobsite}\r\n                  onChange={setSelectedJobsite}\r\n                  disabled\r\n              >\r\n                  {allJobsites.map((val, id) => (\r\n                      <Select.Option title={val.name} key={id} value={val?.id}>{val.name}</Select.Option>\r\n                  ))}\r\n              </Select>\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={12}>\r\n            <Form.Item\r\n              label=\"Contract\"\r\n              name=\"contract_id\"\r\n              rules={[{ required: true, message: \"Required\" }]}\r\n            >\r\n              <Select\r\n                  showSearch\r\n                  placeholder=\"contract\"\r\n                  optionFilterProp=\"children\"\r\n                  filterOption={(input, option) => (option?.title ?? '').toString().toLowerCase()?.includes(input?.toLowerCase())}\r\n                  filterSort={(optionA, optionB) =>\r\n                      (optionA?.label ?? '').toString().toLowerCase().localeCompare((optionB?.label ?? '').toString().toLowerCase())\r\n                  }\r\n                  value={selectedJobsite}\r\n                  onChange={setSelectedJobsite}\r\n                  disabled\r\n              >\r\n                  {allContracts.map((val, id) => (\r\n                      <Select.Option title={val.id} key={id} value={val?.id}>#{val.id}</Select.Option>\r\n                  ))}\r\n              </Select>\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n  \r\n        <div className=\"d-flex justify-content-between heading-container my-4\">\r\n            <div className=\"heading\">Job Details</div>\r\n            <div className=\"heading d-flex justify-content-end align-items-center\">\r\n              {jobFileUrl && <div className=\"mr-3\" style={{color: 'blue'}}>\r\n                              <a href={jobFileUrl} target=\"_blank\">Quotation_File</a>\r\n                          </div>\r\n              }\r\n            </div>\r\n        </div>\r\n  \r\n        <div className=\"mb-3\">\r\n          <Table columns={columns} dataSource={jobsData} />\r\n        </div>\r\n  \r\n        <Row>\r\n          <Col span={12}>\r\n            <Form.Item\r\n              label=\"Discount (%)\"\r\n              name=\"discount\"\r\n              rules={[{ required: true, message: \"Required\" }]}\r\n            >\r\n              <Input type=\"number\"/>\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={12}>\r\n            <Form.Item\r\n              label=\"Due Date\"\r\n              name=\"invoice_due_date\"\r\n              rules={[{ required: true, message: \"Required\" }]}\r\n            >\r\n              <DatePicker />\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        </Card>\r\n      </>\r\n    );\r\n  };\r\n\r\nexport default FormInvoice","import React , {useState,useEffect} from \"react\";\r\nimport { Form, Button, Col, Row, message } from \"antd\";\r\nimport PageHeading from \"components/shared-components/PageHeading/PageHeading\";\r\nimport Modal from \"components/UI/Modal\";\r\nimport QuotationModal from \"./QuotationModal\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { useLocation, useHistory, useParams } from 'react-router-dom';\r\nimport FormInvoice from \"./FormInvoice\";\r\n\r\nconst GenerateInvoice = () => {\r\n    const [form] = Form.useForm();\r\n    const param = useParams();\r\n    const [jobsData , setJobsData] = useState([]);\r\n    const [jobFile , setJobFile] = useState({\r\n      name: '',\r\n      url: ''\r\n    });\r\n    const [customerAccountData, setCustomerAccountData] = useState([]);\r\n    const [invoiceData, setInvoiceData] = useState({});\r\n    const [quotationData, setQuotationData] = useState({});\r\n    const [contractData, setContractData] = useState({});\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const history = useHistory();\r\n     \r\n    const [showModal , setShowModal] = useState(false);\r\n  \r\n    const saveQuotationHandler = () => {\r\n      setShowModal(prev => !prev);\r\n    }\r\n  \r\n    const saveQuotaionModal = (\r\n      <Modal onClose = {saveQuotationHandler}>\r\n        <QuotationModal/>\r\n      </Modal>\r\n    )\r\n  \r\n    const finishHandler = (e) => {\r\n        console.log(e)\r\n        if(param.id) {\r\n          axios\r\n        .post(\r\n            \"/api/tc/update-invoice\",\r\n            {\r\n                id: param.id,\r\n                tc_customer_id: e.customer_id,\r\n                tc_contract_id: e.contract_id,\r\n                tc_quotation_id: e.quotation_id,\r\n                tc_customer_job_site_id: e.jobsite_id,\r\n                task_period_from_date: moment(e.quotationDate),\r\n                task_period_to_date: moment(e.quotationDate).add(+e.expiryDate, 'days'),\r\n                due_date: moment(e.quotationDate).add(+e.expiryDate, 'days'),\r\n                sub_total: 0,\r\n                status: e.status || 'Pending',\r\n                tax: e.gst || 8,\r\n                total: quotationData.total,\r\n                tc_quotation_file: quotationData.tc_quotation_file,\r\n                quotation_remarks: e.remarks || '',\r\n                line_items: quotationData.line_items,\r\n\r\n                tc_invoice_file: quotationData.tc_quotation_file,\r\n                invoice_remarks: \"None\",\r\n                discount: e.discount || 0,\r\n            },\r\n            {\r\n                headers: {\r\n                    \"content-type\": \"application/json\"\r\n                },\r\n            }\r\n        )\r\n        .then((response) => {\r\n            if(!response.data.success){\r\n            message.warn(response.data.msg)\r\n            return;\r\n            }\r\n            message.success(\"Invoice generated successfully\")\r\n            history.goBack()\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n        } else {\r\n          axios\r\n        .post(\r\n            \"/api/tc/new-invoice\",\r\n            {\r\n                tc_customer_id: e.customer_id,\r\n                tc_contract_id: e.contract_id,\r\n                tc_quotation_id: e.quotation_id,\r\n                tc_customer_job_site_id: e.jobsite_id,\r\n                task_period_from_date: moment(e.quotationDate),\r\n                task_period_to_date: moment(e.quotationDate).add(+e.expiryDate, 'days'),\r\n                due_date: moment(e.quotationDate).add(+e.expiryDate, 'days'),\r\n                sub_total: 0,\r\n                status: e.status || 'Pending',\r\n                tax: e.gst || 8,\r\n                total: quotationData.total,\r\n                tc_quotation_file: quotationData.tc_quotation_file,\r\n                quotation_remarks: e.remarks || '',\r\n                line_items: quotationData.line_items,\r\n\r\n                tc_invoice_file: quotationData.tc_quotation_file,\r\n                invoice_remarks: \"None\",\r\n                discount: e.discount || 0,\r\n            },\r\n            {\r\n                headers: {\r\n                    \"content-type\": \"application/json\"\r\n                },\r\n            }\r\n        )\r\n        .then((response) => {\r\n            if(!response.data.success){\r\n            message.warn(response.data.msg)\r\n            return;\r\n            }\r\n            message.success(\"Invoice generated successfully\")\r\n            history.goBack()\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n        }\r\n        \r\n    };\r\n\r\n    const getInvoiceDetails = () => {\r\n      axios\r\n        .post(\r\n          \"/api/tc/get-invoice\",\r\n          {\r\n            id: +param.id,\r\n          }\r\n        )\r\n        .then((response) => {\r\n          let res = response.data.data;\r\n          console.log(res);\r\n  \r\n          setInvoiceData(\r\n            {\r\n              ...res,\r\n            }\r\n          );\r\n          form.setFieldsValue(\r\n            {\r\n              // ...res,\r\n              quotation_id: res.id,\r\n              customer_id: res?.tc_customer_id,\r\n              jobsite_id: res?.tc_customer_job_site_id,\r\n              quotation_file: res?.tc_quotation_file,\r\n              discount: res.discount,\r\n              // invoice_due_date: res.due_date,\r\n            }\r\n          )\r\n          console.log(form.getFieldsValue())\r\n          if(res.tc_contract_id) getContractDetails(res.tc_contract_id);\r\n          console.log(invoiceData)\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n\r\n    const getContractDetails = (contract_id) => {\r\n      axios\r\n        .post(\r\n          \"/api/tc/get-contracts\",\r\n          {\r\n            id: +contract_id,\r\n          }\r\n        )\r\n        .then((response) => {\r\n          let res = response.data.data.data[0];\r\n          console.log(res);\r\n          \r\n          if(res.length) {\r\n            setContractData(\r\n              {\r\n                ...res,\r\n              }\r\n            );\r\n            form.setFieldsValue(\r\n              {\r\n                ...form.getFieldsValue(),\r\n                contract_id: res.id,\r\n                discount: 0,\r\n                invoice_due_date: null,\r\n              }\r\n            )\r\n          }\r\n          console.log(contractData);\r\n          if(res.tc_quotation_id) getQuotationDetails(res.tc_quotation_id)\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n\r\n    const getQuotationDetails = (quotation_id) => {\r\n      axios\r\n        .post(\r\n          \"/api/tc/get-quotation\",\r\n          {\r\n            id: +quotation_id,\r\n          }\r\n        )\r\n        .then((response) => {\r\n          let res = response.data.data;\r\n          console.log(res);\r\n  \r\n          setQuotationData(\r\n            {\r\n              ...res,\r\n            }\r\n          );\r\n          form.setFieldsValue(\r\n            {\r\n              // ...res,\r\n              quotation_id: res.id,\r\n              customer_id: res?.tc_customer_id,\r\n              jobsite_id: res?.tc_customer_job_site_id,\r\n              quotation_file: res?.tc_quotation_file,\r\n            }\r\n          )\r\n          // console.log(form.getFieldsValue())\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n\r\n    const getAllCustomers = () => {\r\n      axios\r\n        .post(\r\n          \"/api/tc/get-customers\",\r\n          {\r\n            page_index: 1,\r\n            page_size: 100000,\r\n            statuses: [\"ACTIVE\", \"INACTIVE\", \"PENDING APPROVAL\"],\r\n            searchText : null,\r\n          }\r\n        )\r\n        .then((response) => {\r\n          let res = response.data.data.data;\r\n          console.log(res);\r\n  \r\n          let fdata = res.map((elem, ind) => {\r\n            return {\r\n              key: ind,\r\n              id: elem.id,\r\n              company: elem.name,\r\n              phoneNumber: elem.phone,\r\n              emailId: elem.email\r\n            };\r\n          });\r\n  \r\n          setCustomerAccountData(customerAccountData.concat(fdata));\r\n          console.log(customerAccountData)\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  \r\n    useEffect(() => {\r\n      if(param.id) {\r\n        setIsEdit(true)\r\n        getInvoiceDetails();\r\n      } else {\r\n        getQuotationDetails();\r\n      }\r\n      getAllCustomers();\r\n    }, []);\r\n  \r\n    const clearForm = () => {\r\n      form.resetFields();\r\n      setJobsData([]);\r\n      setJobFile(({\r\n        name: '',\r\n        url: ''\r\n      }));\r\n    }\r\n  \r\n    return (\r\n      <React.Fragment>\r\n        {showModal && saveQuotaionModal}\r\n        <PageHeading\r\n          title={isEdit ? \"Edit Invoice\" : \"Create New Invoice\"}\r\n        />\r\n  \r\n        <Form\r\n          form={form}\r\n          labelCol={{\r\n            span: 10,\r\n          }}\r\n          wrapperCol={{\r\n              span: 18,\r\n          }}\r\n          layout=\"vertical\"\r\n          onFinish={finishHandler}\r\n        >\r\n          {invoiceData ? <FormInvoice form={form} customer_id={invoiceData.tc_customer_id} \r\n          customers={customerAccountData} jobsData={jobsData} setJobsData={setJobsData} \r\n          jobFile={jobFile} setJobFile={setJobFile} jobFileUrl={invoiceData.tc_quotation_file}/> \r\n          : <FormInvoice form={form} customer_id={quotationData.tc_customer_id} \r\n          customers={customerAccountData} jobsData={jobsData} setJobsData={setJobsData} \r\n          jobFile={jobFile} setJobFile={setJobFile} jobFileUrl={quotationData.tc_quotation_file}/>}\r\n  \r\n          <Form.Item>\r\n            <div className=\"w-100 d-flex justify-content-start actions\">\r\n              <Button onClick={() => { history.goBack() }}>Cancel</Button>\r\n              <Button onClick={() => { clearForm() }}>Clear All</Button>\r\n              <Button type=\"primary\" htmlType=\"submit\" style={{width: 'fit-content'}}>Generate Invoice</Button>\r\n            </div>\r\n          </Form.Item>\r\n        </Form>\r\n  \r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\nexport default GenerateInvoice","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"ViewInvoice_card__hCGko\",\"quotation-card\":\"ViewInvoice_quotation-card__xD2TA\",\"ant-card-body\":\"ViewInvoice_ant-card-body__t8tHz\",\"add_details\":\"ViewInvoice_add_details__g0nnq\",\"total_amt\":\"ViewInvoice_total_amt__L9RYU\",\"tag\":\"ViewInvoice_tag__UwQqj\",\"send_btn\":\"ViewInvoice_send_btn__ERcRl\",\"action\":\"ViewInvoice_action__XSltv\"};","import React , { useState, useEffect, useRef } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nimport {\r\n  Card,\r\n  Typography,\r\n  Col,\r\n  Row,\r\n  List,\r\n  Divider,\r\n  Tag,\r\n  Button,\r\n  Select,\r\n  Table,\r\n  DatePicker,\r\n  Modal,\r\n  Input,\r\n  message\r\n  // Avatar,\r\n} from \"antd\";\r\nimport Icon from \"@ant-design/icons\"\r\nimport PageHeading from \"components/shared-components/PageHeading/PageHeading\";\r\nimport logo from \"assets/grand-energy-logo-small.png\";\r\nimport { ItemsAndServicesPageIcon } from \"assets/svg/icon\";\r\nimport HandBagImg from \"assets/HandBag.png\";\r\nimport SneakersImg from \"assets/Sneakers.png\";\r\nimport { PdfIcon } from \"../../../../ItemsAndServices/svgIcons\";\r\nimport classes from \"./ViewInvoice.module.css\";\r\nimport generatePDF, { Margin } from 'react-to-pdf';\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\n\r\nconst { Title, Text } = Typography;\r\nconst options = {\r\n    page: {\r\n       margin: Margin.SMALL,\r\n    }\r\n};\r\n\r\nconst ViewInvoice = () => {\r\n    const targetRef = useRef();\r\n    const history = useHistory();\r\n    const param = useParams();\r\n\r\n    const [customerData , setCustomerData] = useState({\r\n        customerId: 0,\r\n        email: '',\r\n        name: '',\r\n        phone: '',\r\n        status: '',\r\n        profile_pic: '',\r\n        contact_name: '',\r\n        office_contact_number: '',\r\n        uen_number: '',\r\n        postal_code: '',\r\n        block_number: '',\r\n        level_number: '',\r\n        unit_number: '',\r\n        street_number: '',\r\n        country: '',\r\n        created_by: '',\r\n        other_details: {}\r\n    });\r\n    const [quoteData , setQuoteData] = useState({\r\n        id: 0,\r\n        customer_id: '',\r\n        jobsite_id: '',\r\n        customerName: '',\r\n        jobsite: '',\r\n        inquiryDate: '',\r\n        quotationDate: '',\r\n        amount: '',\r\n        status: '',\r\n        \r\n        tc_customer_id: '',\r\n        task_period_from_date: '',\r\n        task_period_to_date: '',\r\n        due_date: '',\r\n        sub_total: 0,\r\n        tax: 8,\r\n        discount: 0,\r\n        total: 0,\r\n        tc_quotation_file: '',\r\n        quotation_remarks: '',\r\n        line_items: [],\r\n    });\r\n    const [invoiceData , setInvoiceData] = useState({\r\n        id: 0,\r\n        customer_id: '',\r\n        jobsite_id: '',\r\n        customerName: '',\r\n        jobsite: '',\r\n        inquiryDate: '',\r\n        quotationDate: '',\r\n        amount: '',\r\n        status: '',\r\n        \r\n        tc_customer_id: '',\r\n        task_period_from_date: '',\r\n        task_period_to_date: '',\r\n        due_date: '',\r\n        sub_total: 0,\r\n        tax: 8,\r\n        discount: 0,\r\n        total: 0,\r\n        tc_quotation_file: '',\r\n        quotation_remarks: '',\r\n        line_items: [],\r\n    });\r\n    const [gstData, setGstData] = useState([]);\r\n    const [openContractModal , setOpenContractModal] = useState(false);\r\n    const [commencementDate , setCommencementDate] = useState(false);\r\n    const [expiryDate , setExpiryDate] = useState(false);\r\n    const [remindersData , setRemindersData] = useState([]);\r\n    const [contractType , setContractType] = useState(false);\r\n    const [contactData, setContactData] = useState([]);\r\n    const [grandTotal , setGrandTotal] = useState([\r\n      // { text: \"Grand Total\", amt: \"0\" }\r\n    ]);\r\n    const [dataGrandTotal , setDataGrandTotal] = useState([\r\n      // { text: \"Subtotal\", amt: \"0\" },\r\n      // { text: \"Discount\", amt: \"0\", tag: { text: \"0%\", color: \"#E82E2E\" } },\r\n      // { text: \"GST\", amt: \"0\", tag: { text: \"0%\", color: \"#0099A8\" } },\r\n    ]);\r\n    \r\n      const getInvoiceData = () => {\r\n        axios\r\n        .post(\r\n            \"/api/tc/get-invoice\",\r\n            {\r\n            id: +param.id,\r\n            },\r\n        )\r\n        .then((response) => {\r\n            let res = response.data.data;\r\n\r\n            setInvoiceData({\r\n                id: res?.id,\r\n                customer_id: res?.tc_customer_id,\r\n                jobsite_id: res?.tc_customer_job_site_id,\r\n                quotation_id: res?.tc_quotation_id,\r\n                customerName: res?.customer_name,\r\n                jobsite: res?.jobsite_name,\r\n                inquiryDate: res?.inquiry_date ? moment(res?.inquiry_date).format('DD-MM-YYYY HH:mm A'):'',\r\n                quotationDate: moment(res?.task_period_from_date).format('DD-MM-YYYY'),\r\n                amount: res?.total,\r\n                discount: res?.discount,\r\n                status: res?.status || 'Quote Sent',\r\n                \r\n                tc_customer_id: res?.tc_customer_id,\r\n                task_period_from_date: moment(res?.task_period_from_date),\r\n                task_period_to_date: moment(res?.task_period_to_date),\r\n                due_date: moment(res?.due_date).format('DD-MM-YYYY'),\r\n                sub_total: res?.sub_total || 0,\r\n                tax: res?.gst || 8,\r\n                discount: res?.discount || 0,\r\n                total: res?.total,\r\n                tc_quotation_file: res?.tc_quotation_file,\r\n                quotation_remarks: res?.quotation_remarks || '',\r\n                line_items: res?.line_items || [],\r\n                invoice_date: moment(res.created_at).format('DD-MM-YYYY')\r\n            })\r\n            console.log(invoiceData);\r\n\r\n            // if(res.tc_quotation_id) getQuotationData(res.tc_quotation_id);\r\n            if(res.tc_contract_id) getContractData(res.tc_contract_id);\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n      }\r\n\r\n      const getContractData = (contract_id) => {\r\n        axios\r\n        .post(\r\n            \"/api/tc/get-contract\",\r\n            {\r\n            id: +contract_id,\r\n            },\r\n        )\r\n        .then((response) => {\r\n            let res = response.data.data;\r\n\r\n            // setContractData({\r\n            //     id: res?.id,\r\n            //     customer_id: res?.tc_customer_id,\r\n            //     jobsite_id: res?.tc_customer_job_site_id,\r\n            //     quotation_id: res?.tc_quotation_id,\r\n            //     customerName: res?.customer_name,\r\n            //     jobsite: res?.job_site_name,\r\n            //     start_date: res?.start_date,\r\n            //     end_date: res?.end_date,\r\n            //     // status: res?.status || 'Quote Sent',\r\n            //     created_at: moment(res.created_at).format('DD-MM-YYYY hh:mm A')\r\n            // })\r\n            getQuotationData(res.tc_quotation_id, )\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n      }\r\n    \r\n      const getQuotationData = (q_id) => {\r\n        axios\r\n        .post(\r\n            \"/api/tc/get-quotation\",\r\n            {\r\n            id: q_id,\r\n            },\r\n        )\r\n        .then((response) => {\r\n            let res = response.data.data;\r\n\r\n            setQuoteData({\r\n                id: res?.id,\r\n                customer_id: res?.tc_customer_id,\r\n                jobsite_id: res?.tc_customer_job_site_id,\r\n                customerName: res?.customer_name,\r\n                jobsite: res?.jobsite_name,\r\n                inquiryDate: res?.inquiry_date ? moment(res?.inquiry_date).format('DD-MM-YYYY HH:mm A'):'',\r\n                quotationDate: moment(res?.task_period_from_date).format('DD-MM-YYYY'),\r\n                amount: res?.total,\r\n                status: res?.status || 'Quote Sent',\r\n                \r\n                tc_customer_id: res?.tc_customer_id,\r\n                task_period_from_date: moment(res?.task_period_from_date),\r\n                task_period_to_date: moment(res?.task_period_to_date),\r\n                due_date: moment(res?.due_date).format('DD-MM-YYYY'),\r\n                sub_total: res?.sub_total || 0,\r\n                tax: res?.gst || 8,\r\n                discount: res?.discount || 0,\r\n                total: res?.total,\r\n                tc_quotation_file: res?.tc_quotation_file,\r\n                quotation_remarks: res?.quotation_remarks || '',\r\n                line_items: res?.line_items || [],\r\n                payment_term: res?.payment_term || '',\r\n            })\r\n            console.log(quoteData);\r\n            if(res.tc_customer_id) getCustomerData(res.tc_customer_id);\r\n\r\n            let subtotal_amount = res.sub_total || res.total;\r\n            let total_amount = res.total;\r\n\r\n            let gst_percentage = res?.tax;\r\n            let gst_amount = (gst_percentage/100)*subtotal_amount;\r\n            let discount_percentage = invoiceData?.discount;\r\n            let discount_amount = 0;\r\n            if(discount_percentage) {\r\n              discount_amount = (discount_percentage/100)*res.total;\r\n              total_amount = total_amount - discount_amount;\r\n            }\r\n\r\n            if(res.total) {\r\n                setDataGrandTotal([\r\n                    { text: \"Subtotal\", amt: `${subtotal_amount || 0}` },\r\n                    { text: \"Discount\", amt: discount_amount, tag: { text: `${discount_percentage ||0}%`, color: \"#E82E2E\" } },\r\n                    { text: \"GST\", amt: `${gst_amount.toFixed(2) || 0}`, tag: { text: `${gst_percentage || 0}%`, color: \"#0099A8\" } },\r\n                ]);\r\n                setGrandTotal([\r\n                    { text: \"Grand Total\", amt: (total_amount).toFixed(2) }\r\n                ])\r\n            }\r\n            // getAllGst(res.total);\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n      }\r\n    \r\n      const getCustomerData = (cust_id) => {\r\n        axios\r\n        .post(\r\n            \"/api/tc/get-customer\",\r\n            {\r\n            id: cust_id,\r\n            },\r\n        )\r\n        .then((response) => {\r\n            let res = response.data.data;\r\n\r\n            if(res.other_details) {\r\n                let other_details = JSON.parse(res.other_details);\r\n                res = {...res, ...other_details}\r\n            }\r\n            setCustomerData({\r\n                customerId: res.id,\r\n                email: res.email,\r\n                name: res.name,\r\n                phone: res.phone,\r\n                status: res.status,\r\n                profile_pic: res?.profile_pic,\r\n                contact_name: res?.contact_name,\r\n                office_contact_number: res?.office_contact_number,\r\n                uen_number: res?.uen_number,\r\n                postal_code: res?.postal_code || '000000',\r\n                block_number: res?.block_number || '',\r\n                level_number: res?.level_number || '',\r\n                unit_number: res?.unit_number || '',\r\n                street_number: res?.street_number || '',\r\n                country: res?.country || 'Singapore',\r\n                created_by: res?.created_by || '',\r\n                other_details: res?.other_details\r\n            })\r\n            console.log(customerData)\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n      }\r\n\r\n      const getContactDetails = () => {\r\n        axios({\r\n          method: 'post',\r\n          url: \"/api/tc/get-contact-details\",\r\n          data: {},\r\n        }).then(function (response) {\r\n          console.log(response.data);\r\n          let res = response.data.data;\r\n          setContactData({\r\n            email: res.email,\r\n            mobile: res.mobile,\r\n            tel: res.tel,\r\n            address: res.address,\r\n          })\r\n        }).catch(function (error) {\r\n            console.log(error);\r\n        });\r\n      }\r\n\r\n      useEffect(() => {\r\n        getInvoiceData();\r\n        getContactDetails();\r\n      }, []);\r\n  \r\n    return (\r\n      <React.Fragment>\r\n  \r\n        {/* {showModal && <Modal onClose={showModalHandler}><SendQuotationModal/></Modal>} */}\r\n        <PageHeading\r\n          svg={ItemsAndServicesPageIcon}\r\n          title=\"Invoices / View Invoice\"\r\n        />\r\n        \r\n        <Card className=\"quotation-card\">\r\n            <div ref={targetRef}>\r\n                <Card className={classes.card}>\r\n                    <div className=\"mt-2 mb-2 w-100\">\r\n                    <img src={logo} alt=\"logo\" style={{width: '20%'}}/>\r\n                    <div className=\"d-flex justify-content-between mt-3\">\r\n                        <div>\r\n                        <Title strong level={3}>\r\n                            GRAND ENERGY TECHNOLOGIES PTE LTD\r\n                        </Title>\r\n                        <Text><b>Email:</b> {contactData.email || ''}</Text>\r\n                        </div>\r\n                        <div></div>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <div>\r\n                        <Text><b>Phone:</b> {contactData.tel || ''}</Text>\r\n                        <br />\r\n                        <Text><b>UEN/GST No:</b> 201802457D</Text>\r\n                        </div>\r\n                        <div className=\"text-right\">\r\n                        <Text>Bik 130 Jurong Gateway Road </Text>\r\n                        <br />\r\n                        <Text>#03-203 Singapore 600130 </Text>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </Card>\r\n                <Card className={classes.add_details}>\r\n                    <div>\r\n                    <h5>Billed To:</h5>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-between\">\r\n                    <div className=\"mr-5\">\r\n                        {/* <Title strong level={3}>\r\n                        Billed To\r\n                        </Title> */}\r\n                        <br />\r\n                        <Text strong>{customerData.name}</Text>\r\n                        <br />\r\n                        <Text>{`${customerData.block_number} ${customerData.street_number}, ${customerData.level_number}, ${customerData.unit_number}`}</Text>\r\n                        <br />\r\n                        <Text>{`${customerData.country}, ${customerData.postal_code}`}</Text>\r\n                        <br />\r\n                        <br />\r\n                        <Text>{customerData.email}</Text>\r\n                        <br />\r\n                        <Text><b>Phone:</b> {customerData.phone}</Text>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <div className=\"mr-4\">\r\n                        <br />\r\n                        <Text strong>Invoice No</Text>\r\n                        <br />\r\n                        <Text>#{invoiceData.id}</Text>\r\n                        <br />\r\n                        <br />\r\n                        <Text strong>Invoice Date</Text>\r\n                        <br />\r\n                        <Text>{invoiceData.created_at}</Text>\r\n                        <br />\r\n                        </div>\r\n                        <div className=\"text-right\">\r\n                        <br />\r\n                        <Text strong>Payment Term</Text>\r\n                        <br />\r\n                        <Text>{quoteData.payment_term}</Text>\r\n                        <br />\r\n                        <br />\r\n                        <Text strong>Validity</Text>\r\n                        <br />\r\n                        <Text>{quoteData.validity}</Text>\r\n                        <br />\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </Card>\r\n        \r\n                <div>\r\n                    <Row>\r\n                    <Col span={3}>\r\n                        <Title level={4}>Sr. No.</Title>\r\n                        <List\r\n                        // dataSource={dataItems}\r\n                        dataSource={quoteData.line_items}\r\n                        renderItem={(item, index) => (\r\n                            <List.Item key={item.name} className=\" pl-0 border-0\">\r\n                            {index + 1}\r\n                            </List.Item>\r\n                        )}\r\n                        />\r\n                    </Col>\r\n                    <Col span={21}>\r\n                        <Row>\r\n                        <Col span={8}>\r\n                            <Title level={4}>Description</Title>\r\n                            <List\r\n                            // dataSource={dataServices}\r\n                            dataSource={quoteData.line_items}\r\n                            renderItem={(item) => (\r\n                                <List.Item key={item.name} className=\"pl-0 border-0\">\r\n                                <div\r\n                                    style={{ height: \"32px\" }}\r\n                                    className=\"d-flex align-items-center\"\r\n                                >\r\n                                    {item.name}\r\n                                </div>\r\n                                </List.Item>\r\n                            )}\r\n                            />\r\n                        </Col>\r\n                        <Col span={5}>\r\n                            <Title level={4}>Provisional Qty</Title>\r\n                            <List\r\n                            // dataSource={dataQty}\r\n                            dataSource={quoteData.line_items}\r\n                            renderItem={(item) => (\r\n                                <List.Item key={item.quantity} className=\"border-0\">\r\n                                <div\r\n                                    style={{ height: \"32px\" }}\r\n                                    className=\"d-flex align-items-center\"\r\n                                >\r\n                                    {item.quantity}\r\n                                </div>\r\n                                </List.Item>\r\n                            )}\r\n                            />\r\n                        </Col>\r\n                        <Col span={5}>\r\n                            <Title level={4}>Unit Price(S$)</Title>\r\n                            <List\r\n                            // dataSource={dataPrice}\r\n                            dataSource={quoteData.line_items}\r\n                            renderItem={(item) => (\r\n                                <List.Item key={item.price} className=\"pl-0 border-0\">\r\n                                <div\r\n                                    style={{ height: \"32px\" }}\r\n                                    className=\"d-flex align-items-center\"\r\n                                >\r\n                                    {item.price}\r\n                                </div>\r\n                                </List.Item>\r\n                            )}\r\n                            />\r\n                        </Col>\r\n                        <Col span={6}>\r\n                            <Title level={4}>SUBTOTAL(S$)</Title>\r\n                            <List\r\n                            // dataSource={dataTotal}\r\n                            dataSource={quoteData.line_items}\r\n                            renderItem={(item) => (\r\n                                <List.Item key={item.total} className=\"pl-0 border-0\">\r\n                                <div\r\n                                    style={{ height: \"32px\" }}\r\n                                    className=\"d-flex align-items-center\"\r\n                                >\r\n                                    {item.total}\r\n                                </div>\r\n                                </List.Item>\r\n                            )}\r\n                            />\r\n                        </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    </Row>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"d-flex justify-content-end\">\r\n                    <Row\r\n                      style={{ width: \"40%\" }}\r\n                      className=\"d-flex justify-content-center\"\r\n                    >\r\n                      <Col span={12}>\r\n                          <List\r\n                          dataSource={dataGrandTotal}\r\n                          renderItem={(item) => (\r\n                              <List.Item\r\n                              key={item.text}\r\n                              className=\"pl-0 border-0 d-flex justify-content-center\"\r\n                              >\r\n                              <div className=\"d-flex align-items-center \">\r\n                                  <Text strong>{item.text}</Text>\r\n                                  {item.tag && (\r\n                                  <div className={classes.total_amt}>\r\n                                      {/* <Tag\r\n                                      color={item.tag.color}\r\n                                      className={`h-100 w-100 ${classes.tag}`}\r\n                                      style={{borderRadius: '1.5px', paddingTop: '1px'}}\r\n                                      >\r\n                                      {item.tag.text}\r\n                                      </Tag> */}\r\n                                      <span style={{background: (item.tag.color), padding: '1.5px 4px'}}\r\n                                      className=\"ml-2 \"\r\n                                      >{item.tag.text}</span>\r\n                                  </div>\r\n                                  )}\r\n                              </div>\r\n                              </List.Item>\r\n                          )}\r\n                          />\r\n                      </Col>\r\n                      <Col span={12}>\r\n                          <List\r\n                          dataSource={dataGrandTotal}\r\n                          renderItem={(item) => (\r\n                              <List.Item\r\n                              key={item.amt}\r\n                              className=\"pl-0 border-0 d-flex justify-content-center\"\r\n                              >\r\n                              <div className=\"d-flex align-items-center\">S$ {item.amt}</div>\r\n                              </List.Item>\r\n                          )}\r\n                          />\r\n                      </Col>\r\n                      <Divider />\r\n\r\n                      <Col span={12}>\r\n                          <List\r\n                          dataSource={grandTotal}\r\n                          renderItem={(item) => (\r\n                              <List.Item\r\n                              key={item.text}\r\n                              className=\"pl-0 border-0 d-flex justify-content-center\"\r\n                              >\r\n                              <div className=\"d-flex align-items-center \">\r\n                                  <Text strong>{item.text}</Text>\r\n                              </div>\r\n                              </List.Item>\r\n                          )}\r\n                          />\r\n                      </Col>\r\n                      <Col span={12}>\r\n                          <List\r\n                          dataSource={grandTotal}\r\n                          renderItem={(item) => (\r\n                              <List.Item\r\n                              key={item.amt}\r\n                              className=\"pl-0 border-0 d-flex justify-content-center\"\r\n                              >\r\n                              <div className=\"d-flex align-items-center\">S$ {item.amt}</div>\r\n                              </List.Item>\r\n                          )}\r\n                          />\r\n                      </Col>\r\n                    </Row>\r\n                </div>\r\n\r\n                <Divider />\r\n\r\n                <div className=\"text-left w-75 mt-2\" style={{fontSize: '14px'}}>\r\n                   <h5>Term and Conditions</h5>\r\n                   <ol>\r\n                      <li>{quoteData.customerName} shall obtained all approvals from relevant authorities/stakeholders and facilitate our site personnel for site safety procedures including working at night or weekend/public holidays.</li>\r\n                      <li>{quoteData.customerName} site supervisor shall be presented during the whole course of installation work and final joint measurement.</li>\r\n                      <li>50% downpayment upon confirmation, 50% upon completion of work.</li>\r\n                      <li>All price quote excludes GST.</li>\r\n                      <li>We shall not be liable for any loss, damage or injury or any consequential or indirect loss sustained by you or third parties pertaining to the works.</li>\r\n                      <li>Any other items which is not specifically indicated above. Any liability on this job is limited to half of the relevant sum awarded.</li>\r\n                   </ol>\r\n                   <p>We look forward to your confirmation</p>\r\n                </div>\r\n                <div className=\"mt-5 d-flex justify-content-between\" style={{fontSize: '14px'}}>\r\n                   <div style={{width: '40%'}}>\r\n                      <Divider />\r\n                      <h5><b>Grand Energy Technologies Pte Ltd</b></h5>\r\n                      <div style={{color: '#72849A'}}>GET Manager</div>\r\n                      <div style={{color: '#72849A'}}>{quoteData.quotationDate}</div>\r\n                   </div>\r\n                   <div style={{width: '20%'}}>\r\n                      {/* <Divider />\r\n                      <h5><b>Customer Signature</b></h5>\r\n                      <div style={{color: '#72849A'}}>Name: </div>\r\n                      <div style={{color: '#72849A'}}>Designation: </div>\r\n                      <div style={{color: '#72849A'}}>Date: </div> */}\r\n                   </div>\r\n                </div>\r\n            </div>\r\n        </Card>\r\n  \r\n        <div className={`d-flex justify-content-between ${classes.action}`}>\r\n            <div className=\"d-flex\">\r\n                <Button className=\"mr-1\" onClick={() => {history.goBack()}}>\r\n                    Back\r\n                </Button>\r\n                <Button className=\"mr-1\" style={{backgroundColor: '#5772FF', color: '#fff'}} onClick={() => {}} disabled>\r\n                    Record Payment\r\n                </Button>\r\n            </div>\r\n            <Button onClick={() => {\r\n              console.log(\"Downloading Quotation...\");\r\n              generatePDF(targetRef, options, {filename: 'Quotation.pdf'});\r\n            }}>\r\n              <Icon component={PdfIcon} />\r\n              Download PDF\r\n            </Button>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default ViewInvoice","\r\nexport const ViewDetailsIcon = () =>(\r\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<g clip-path=\"url(#clip0_3143_14787)\">\r\n<path d=\"M10.1667 5.66667C13.325 5.66667 16.1417 7.44167 17.5167 10.25C16.1417 13.0583 13.325 14.8333 10.1667 14.8333C7.00833 14.8333 4.19167 13.0583 2.81667 10.25C4.19167 7.44167 7.00833 5.66667 10.1667 5.66667ZM10.1667 4C6 4 2.44167 6.59167 1 10.25C2.44167 13.9083 6 16.5 10.1667 16.5C14.3333 16.5 17.8917 13.9083 19.3333 10.25C17.8917 6.59167 14.3333 4 10.1667 4ZM10.1667 8.16667C11.3167 8.16667 12.25 9.1 12.25 10.25C12.25 11.4 11.3167 12.3333 10.1667 12.3333C9.01667 12.3333 8.08333 11.4 8.08333 10.25C8.08333 9.1 9.01667 8.16667 10.1667 8.16667ZM10.1667 6.5C8.1 6.5 6.41667 8.18333 6.41667 10.25C6.41667 12.3167 8.1 14 10.1667 14C12.2333 14 13.9167 12.3167 13.9167 10.25C13.9167 8.18333 12.2333 6.5 10.1667 6.5Z\" fill=\"#455560\"/>\r\n</g>\r\n<defs>\r\n<clipPath id=\"clip0_3143_14787\">\r\n<rect width=\"20\" height=\"20\" fill=\"white\"/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n\r\n)\r\n\r\nexport const DeleteIcon = () => (\r\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<g clip-path=\"url(#clip0_3143_14792)\">\r\n<path d=\"M13.1667 8V16.3333H6.5V8H13.1667ZM11.9167 3H7.75L6.91667 3.83333H4V5.5H15.6667V3.83333H12.75L11.9167 3ZM14.8333 6.33333H4.83333V16.3333C4.83333 17.25 5.58333 18 6.5 18H13.1667C14.0833 18 14.8333 17.25 14.8333 16.3333V6.33333Z\" fill=\"#455560\"/>\r\n</g>\r\n<defs>\r\n<clipPath id=\"clip0_3143_14792\">\r\n<rect width=\"20\" height=\"20\" fill=\"white\"/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n\r\n)\r\n\r\nexport const SendQuotationIcon = () => (\r\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<g clip-path=\"url(#clip0_3143_14797)\">\r\n<path d=\"M11.2167 8.01667L11.9833 8.78333L4.43333 16.3333H3.66667V15.5667L11.2167 8.01667ZM14.2167 3C14.0083 3 13.7917 3.08333 13.6333 3.24167L12.1083 4.76667L15.2333 7.89167L16.7583 6.36667C17.0833 6.04167 17.0833 5.51667 16.7583 5.19167L14.8083 3.24167C14.6417 3.075 14.4333 3 14.2167 3ZM11.2167 5.65833L2 14.875V18H5.125L14.3417 8.78333L11.2167 5.65833Z\" fill=\"#455560\"/>\r\n</g>\r\n<defs>\r\n<clipPath id=\"clip0_3143_14797\">\r\n<rect width=\"20\" height=\"20\" fill=\"white\"/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n\r\n)\r\n\r\nexport const RecordPaymentsIcon = () => (\r\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<g clip-path=\"url(#clip0_3143_14802)\">\r\n<path d=\"M15.8334 11.6668V5.00016C15.8334 4.0835 15.0834 3.3335 14.1667 3.3335H2.50004C1.58337 3.3335 0.833374 4.0835 0.833374 5.00016V11.6668C0.833374 12.5835 1.58337 13.3335 2.50004 13.3335H14.1667C15.0834 13.3335 15.8334 12.5835 15.8334 11.6668ZM14.1667 11.6668H2.50004V5.00016H14.1667V11.6668ZM8.33337 5.8335C6.95004 5.8335 5.83337 6.95016 5.83337 8.3335C5.83337 9.71683 6.95004 10.8335 8.33337 10.8335C9.71671 10.8335 10.8334 9.71683 10.8334 8.3335C10.8334 6.95016 9.71671 5.8335 8.33337 5.8335ZM19.1667 5.8335V15.0002C19.1667 15.9168 18.4167 16.6668 17.5 16.6668H3.33337V15.0002H17.5V5.8335H19.1667Z\" fill=\"#455560\"/>\r\n</g>\r\n<defs>\r\n<clipPath id=\"clip0_3143_14802\">\r\n<rect width=\"20\" height=\"20\" fill=\"white\"/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n\r\n)\r\n\r\nexport const CreateContractIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<g clip-path=\"url(#clip0_886_17351)\">\r\n<path d=\"M14 2H6C4.9 2 4 2.9 4 4V20C4 21.1 4.9 22 6 22H18C19.1 22 20 21.1 20 20V8L14 2ZM6 20V4H13V8H18V20H6ZM11 19H13V18H14C14.55 18 15 17.55 15 17V14C15 13.45 14.55 13 14 13H11V12H15V10H13V9H11V10H10C9.45 10 9 10.45 9 11V14C9 14.55 9.45 15 10 15H13V16H9V18H11V19Z\" fill=\"#455560\"/>\r\n</g>\r\n<defs>\r\n<clipPath id=\"clip0_886_17351\">\r\n<rect width=\"24\" height=\"24\" fill=\"white\"/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n\r\n)","import React from \"react\";\r\nimport { useHistory , useRouteMatch} from \"react-router-dom\";\r\n// import EllipsisDropdown from 'components/shared-components/EllipsisDropdown'\r\nimport Icon from \"@ant-design/icons\";\r\nimport EllipsisDropdown from \"components/shared-components/EllipsisDropdown/index\";\r\nimport { Menu, message } from \"antd\";\r\nimport { ViewDetailsIcon , CreateContractIcon, SendQuotationIcon } from \"./ActionIcons\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\n\r\nconst Actions = ({contract_id,setOpenContractModal,record,getData,setQuoteData,setJobsData}) => {\r\n\tconst history = useHistory();\r\n\tconst match = useRouteMatch();\r\n\r\n\tconst viewContractHandler = () => {\r\n    history.push(`/app/contract-management/work-orders/view-work-order/${contract_id}`);\r\n\t}\r\n  \r\n\tconst viewContractDetailsHandler = () => {\r\n    history.push(`${match.path}/view-contract-details/${contract_id}`);\r\n\t}\r\n  \r\n\tconst editContractHandler = () => {\r\n    // history.push(`${match.path}/edit-contract/${contract_id}`);\r\n    history.push(`${match.path}/view-contract-details/${contract_id}`);\r\n\t}\r\n  const createContractHandler = () => {\r\n    setOpenContractModal(true)\r\n    setQuoteData(record)\r\n    setJobsData(record.line_items ? JSON.parse(record.line_items) : [])\r\n\t}\r\n\r\n\r\n  return (\r\n    <EllipsisDropdown\r\n      menu={\r\n        <Menu>\r\n           {/* <Menu.Item onClick={createContractHandler} disabled={record.status==='Completed'}>\r\n              <span className=\"d-flex align-items-center\">\r\n                <Icon className=\"mr-2\" component={CreateContractIcon} /> Create Work Order\r\n              </span>\r\n            </Menu.Item> */}\r\n            {/* <Menu.Item  onClick={updateStatus} disabled={record.status==='Completed'}>\r\n              <span className=\"d-flex align-items-center\">\r\n                <Icon className=\"mr-2\" component={SendQuotationIcon} /> Mark as Complete \r\n              </span>\r\n            </Menu.Item> */}\r\n          {/* <Menu.Item onClick={editContractHandler}>\r\n            <span className=\"d-flex align-items-center\">\r\n              <Icon className=\"mr-2\" component={CreateContractIcon} />Edit Contract</span>\r\n          </Menu.Item> */}\r\n\r\n          {/* <Menu.Item onClick={viewContractDetailsHandler}>\r\n            <span className=\"d-flex align-items-center\">\r\n              <Icon className=\"mr-2\" component={CreateContractIcon} />View Contract Details</span>\r\n          </Menu.Item> */}\r\n            <Menu.Item onClick={createContractHandler} disabled={record.status === 'Completed'}>\r\n            <span className=\"d-flex align-items-center\">\r\n              <Icon className=\"mr-2\" component={CreateContractIcon} /> Create Service Entry Sheet\r\n            </span>\r\n          </Menu.Item>\r\n          <Menu.Item onClick={viewContractHandler}>\r\n            <span className=\"d-flex align-items-center\">\r\n              <Icon className=\"mr-2\" component={ViewDetailsIcon} />\r\n              View Service Order\r\n            </span>\r\n          </Menu.Item>\r\n        </Menu>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default Actions;\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport { Table, Button, Tag, Input, Modal, DatePicker, TimePicker, message, Select, InputNumber } from 'antd';\r\nimport Avatar from 'assets/Avatar2.png'\r\nimport Actions from './Actions';\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport TextArea from 'antd/lib/input/TextArea';\r\n\r\n\r\n\r\nconst ContractTable = ({ setsetPage, searchText, statuses, selectedFilter, selectedCustomerFilter, id, selectedJobsiteFilter, selectedTypeFilter, selectedStatusFilter }) => {\r\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\r\n  const [contractsData, setContractsData] = useState([]);\r\n  const [openContractModal, setOpenContractModal] = useState(false);\r\n  const [commencementDate, setCommencementDate] = useState(null);\r\n  const [contractType, setContractType] = useState(null);\r\n  const [quoteData, setQuoteData] = useState({});\r\n  const [expiryDate, setExpiryDate] = useState(null);\r\n  const customer_id = localStorage.getItem(\"customer_id\");\r\n\r\n  const [jobsData, setJobsData] = useState([]);\r\n  const [description, setDescription] = useState('');\r\n  const [quantity, setQuantity] = useState(null);\r\n  const [unitPrice, setUnitPrice] = useState(null);\r\n  const [co_regn_no, setCo_regn_no] = useState('');\r\n  const [gl_number, setGl_number] = useState('');\r\n  const [project_number, setProject_number] = useState('');\r\n\r\n  const [openJobModal, setOpenJobModal] = useState(false);\r\n  const [remindersData, setRemindersData] = useState([]);\r\n  const removeReminder = (record) => {\r\n    let newRemindersData = remindersData.filter((elem) => elem.sr_no !== record.sr_no);\r\n    setRemindersData(newRemindersData);\r\n  }\r\n\r\n\r\n  const selectChangeHandler = (newSelectedRowKeys) => {\r\n    setSelectedRowKeys(newSelectedRowKeys);\r\n  };\r\n\r\n  const handleContractCancel = () => {\r\n    setOpenContractModal(false);\r\n  };\r\n\r\n\r\n  const columns = [\r\n    {\r\n      title: ' Id',\r\n      dataIndex: 'id',\r\n    },\r\n    {\r\n      title: 'Customer Name',\r\n      dataIndex: 'customer_name',\r\n      // defaultSortOrder: 'descend',\r\n      // sorter: (a, b) => a.customerName - b.customerName,\r\n    },\r\n    {\r\n      title: 'Jobsite',\r\n      dataIndex: 'job_site_name',\r\n\r\n    },\r\n    // {\r\n    //   title: 'Contract Type',\r\n    //   dataIndex: 'contract_type',\r\n\r\n    // },\r\n    {\r\n      title: 'Commence On',\r\n      dataIndex: 'commence_on',\r\n\r\n    },\r\n    {\r\n      title: 'Expired On',\r\n      dataIndex: 'expire_on',\r\n\r\n    },\r\n    {\r\n      title: 'Status',\r\n      dataIndex: 'status',\r\n      render: (_, record) => {\r\n        const statusStyles = {\r\n          color: \"#00AB6F\",\r\n          backgroundColor: \"#EDFFF9\",\r\n          padding: \"4px 8px\",\r\n          borderRadius: \"6px\",\r\n          fontWeight: \"600\",\r\n          fontSize: \"14px\",\r\n        };\r\n\r\n       \r\n        return (\r\n          <span style={statusStyles} key={record.status}>\r\n            {record.status}\r\n          </span>\r\n        );\r\n        // if(record.status.toUpperCase()==='EXPIRED') return <span style={{color: '#F53434', backgroundColor: '#FFF2F2', padding: '4px 8px', borderRadius:'6px', fontWeight:'600', fontSize: '14px'}}>Expired</span>\r\n        // else if(record.status.toUpperCase()==='INACTIVE') return <span style={{color: '#F53434', backgroundColor: '#FFF2F2', padding: '4px 8px', borderRadius:'6px', fontWeight:'600', fontSize: '14px'}}>Inactive</span>\r\n        // else return <span style={{color: \"#00AB6F\", backgroundColor: \"#EDFFF9\", padding: '4px 8px', borderRadius:'6px', fontWeight:'600', fontSize: '14px'}}>Active</span>\r\n      }\r\n    },\r\n    {\r\n      title: 'Action',\r\n      dataIndex: '',\r\n      key: 'x',\r\n      render: (_, record) => <Actions setJobsData={setJobsData} setQuoteData={setQuoteData} contract_id={record.id} record={record} setOpenContractModal={setOpenContractModal} getData={getData} />,\r\n    },\r\n  ];\r\n\r\n  const removeJob = (record) => {\r\n    let jobs = jobsData.filter((e) => e != record);\r\n    setJobsData(jobs)\r\n  }\r\n  const onChangeDesc = (event) => {\r\n    setDescription(event.target.value)\r\n  }\r\n\r\n  const onChangeProvisional = (value) => {\r\n    setQuantity(value)\r\n  }\r\n\r\n  const onChangeUnit = (value) => {\r\n    setUnitPrice(value)\r\n  }\r\n  const columns2 = [\r\n    {\r\n      title: 'SR NO',\r\n      dataIndex: 'sr_no',\r\n    },\r\n    {\r\n      title: 'DESCRIPTION',\r\n      dataIndex: 'name',\r\n    },\r\n    {\r\n      title: 'QTY',\r\n      dataIndex: 'quantity',\r\n    },\r\n    {\r\n      title: 'UNIT PRICE',\r\n      dataIndex: 'price',\r\n    },\r\n    {\r\n      title: 'SUBTOTAL',\r\n      dataIndex: 'total',\r\n    },\r\n    {\r\n      title: 'Action',\r\n      dataIndex: '',\r\n      render: (_, record) => {\r\n        return <Button type=\"danger\" className='mt-2' onClick={() => { removeJob(record) }}>Remove</Button>\r\n      },\r\n    },\r\n  ];\r\n\r\n  const handleJobOk = () => {\r\n    if (!description) message.error(\"Please fill Description\");\r\n    if (!quantity) message.error(\"Please fill Quantity\");\r\n    if (!unitPrice) message.error(\"Please fill Unit Price\");\r\n\r\n    setJobsData([...jobsData, {\r\n      sr_no: jobsData.length + 1,\r\n      name: description,\r\n      quantity: quantity,\r\n      price: unitPrice,\r\n      total: (+quantity * +unitPrice) || 0\r\n      // total: (+jobDetailsTemp.provisionalQty * +jobDetailsTemp.unitPrice) || 0\r\n    }]);\r\n    setDescription('');\r\n    setQuantity(null);\r\n    setUnitPrice(null);\r\n    setOpenJobModal(false);\r\n  }\r\n  const rowSelection = {\r\n    selectedRowKeys,\r\n    onChange: selectChangeHandler\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .post(\r\n        \"/api/tc/get-work-orders\",\r\n        {\r\n          page_index: 1,\r\n          page_size: 10,\r\n          ...id && { contract_id: +id },\r\n          // statuses: [\"ACTIVE\", \"INACTIVE\"],\r\n          statuses: null,\r\n          search: searchText ? searchText : null,\r\n          customer_id: selectedCustomerFilter || null,\r\n          job_site_id: selectedJobsiteFilter || null,\r\n          status: selectedStatusFilter || null,\r\n          contract_type: selectedTypeFilter || null,\r\n          customer_id: customer_id,\r\n        },\r\n      )\r\n      .then((response) => {\r\n        let res = response.data.data.data;\r\n        console.log(res);\r\n\r\n        let fdata = res.map((elem, ind) => {\r\n          return {\r\n            ...elem,\r\n            key: elem.id,\r\n            id: elem.id,\r\n            customer_name: elem.customer_name || elem.tc_customer_id,\r\n            jobsite_name: elem.jobsite_name || (elem.tc_customer_job_site_id || '-'),\r\n            contract_type: elem.type,\r\n            commence_on: moment(elem.start_date).format(\"DD-MM-YYYY\"),\r\n            expire_on: moment(elem.end_date).format(\"DD-MM-YYYY\"),\r\n            contract_type: elem.type,\r\n            status: elem.status,\r\n            start_date: elem.start_date,\r\n          };\r\n        });\r\n        setContractsData(fdata);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, [searchText]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .post(\r\n        \"/api/tc/get-work-orders\",\r\n        {\r\n          page_index: 1,\r\n          page_size: 10,\r\n          ...id && { contract_id: +id },\r\n          statuses: null,\r\n          search: searchText ? searchText : null,\r\n          customer_id: selectedCustomerFilter || null,\r\n          job_site_id: selectedJobsiteFilter || null,\r\n          status: selectedStatusFilter || null,\r\n          contract_type: selectedTypeFilter || null,\r\n          customer_id: customer_id,\r\n        },\r\n      )\r\n      .then((response) => {\r\n        let res = response.data.data.data;\r\n        console.log(res);\r\n\r\n        let fdata = res.map((elem, ind) => {\r\n          return {\r\n            ...elem,\r\n            key: elem.id,\r\n            id: elem.id,\r\n            customer_name: elem.customer_name || elem.tc_customer_id,\r\n            jobsite_name: elem.jobsite_name || (elem.tc_customer_job_site_id || '-'),\r\n            contract_type: elem.type,\r\n            commence_on: moment(elem.start_date).format(\"DD-MM-YYYY\"),\r\n            expire_on: moment(elem.end_date).format(\"DD-MM-YYYY\"),\r\n            contract_type: elem.type,\r\n            status: elem.status,\r\n            start_date: elem.start_date,\r\n          };\r\n        });\r\n        setContractsData(fdata);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, [selectedFilter]);\r\n\r\n  const getData = () => {\r\n    axios\r\n      .post(\r\n        \"/api/tc/get-work-orders\",\r\n        {\r\n          page_index: 1,\r\n          page_size: 10,\r\n          statuses: null,\r\n          ...id && { contract_id: +id },\r\n          search: searchText ? searchText : null,\r\n          customer_id: selectedCustomerFilter || null,\r\n          job_site_id: selectedJobsiteFilter || null,\r\n          status: selectedStatusFilter || null,\r\n          contract_type: selectedTypeFilter || null,\r\n          customer_id: customer_id,\r\n        },\r\n      )\r\n      .then((response) => {\r\n        let res = response.data.data.data;\r\n        console.log(res);\r\n\r\n        let fdata = res.map((elem, ind) => {\r\n          return {\r\n            ...elem,\r\n            key: elem.id,\r\n            id: elem.id,\r\n            customer_name: elem.customer_name || elem.tc_customer_id,\r\n            jobsite_name: elem.jobsite_name || (elem.tc_customer_job_site_id || '-'),\r\n            contract_type: elem.type,\r\n            commence_on: moment(elem.start_date).format(\"DD-MM-YYYY\"),\r\n            expire_on: moment(elem.end_date).format(\"DD-MM-YYYY\"),\r\n            contract_type: elem.type,\r\n            status: elem.status,\r\n            start_date: elem.start_date,\r\n          };\r\n        });\r\n        setContractsData(fdata);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const commencementDateChange = (date) => {\r\n    // contractData.date_of_commencement = date;\r\n    // let newContractData = contractData;\r\n    // newContractData.date_of_commencement = date;\r\n    // console.log(newContractData);\r\n\r\n    setCommencementDate(date);\r\n  }\r\n\r\n  const expiryDateChange = (date) => {\r\n    setExpiryDate(date);\r\n  }\r\n\r\n  const handleAddReminder = () => {\r\n    setRemindersData([...remindersData, {\r\n      sr_no: remindersData.length + 1,\r\n      date: null,\r\n      title: '',\r\n      description: '',\r\n    }]);\r\n  };\r\n  const reminderColumns = [\r\n    {\r\n      title: 'Sr. No.',\r\n      dataIndex: 'sr_no',\r\n    },\r\n    {\r\n      title: 'Date',\r\n      dataIndex: 'date',\r\n      render: (_, record) => {\r\n        return (\r\n          <div>\r\n            <DatePicker value={record.date} className='w-100' onChange={(e) => {\r\n              let data = remindersData\r\n              let index = remindersData.findIndex((elem) => elem === record)\r\n              data[index].date = e\r\n              setRemindersData([...data])\r\n            }} />\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: 'Time',\r\n      dataIndex: 'time',\r\n      render: (_, record) => {\r\n        return (\r\n          <div>\r\n            <TimePicker value={record.time} className='w-100' format={'HH:mm A'} use12Hours={true} onChange={(e) => {\r\n              let data = remindersData\r\n              let index = remindersData.findIndex((elem) => elem === record)\r\n              data[index].time = e;\r\n              setRemindersData([...data])\r\n            }} />\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: 'Title',\r\n      dataIndex: 'title',\r\n      render: (_, record) => {\r\n        return (\r\n          <div>\r\n            <Input value={record.title} className='w-100' onChange={(e) => {\r\n              let data = remindersData\r\n              let index = remindersData.findIndex((elem) => elem === record)\r\n              data[index].title = e.target.value\r\n              setRemindersData([...data])\r\n            }} />\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: 'Content',\r\n      dataIndex: 'description',\r\n      render: (_, record) => {\r\n        return (\r\n          <div>\r\n            <Input value={record.description} className='w-100' onChange={(e) => {\r\n              let data = remindersData\r\n              let index = remindersData.findIndex((elem) => elem === record)\r\n              data[index].description = e.target.value\r\n              setRemindersData([...data])\r\n            }} />\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: 'Action',\r\n      dataIndex: '',\r\n      key: 'x',\r\n      render: (_, record) => <Button type='danger' onClick={() => { removeReminder(record) }} className='font-weight-bold'>remove</Button>,\r\n    },\r\n  ];\r\n\r\n\r\n  const handleCancel = () => {\r\n    setOpenContractModal(false);\r\n    setOpenJobModal(false);\r\n    setCommencementDate(null);\r\n    setExpiryDate(null);\r\n    setRemindersData([]);\r\n\r\n    setCo_regn_no('');\r\n    setGl_number('');\r\n    setProject_number('');\r\n    setDescription('');\r\n    setQuantity(null);\r\n    setUnitPrice(null);\r\n    setJobsData([]);\r\n  };\r\n\r\n  const handleContractOk = () => {\r\n    console.log(quoteData);\r\n    // if (!commencementDate || !expiryDate || !direct_to_pc || !co_regn_no || !contract_number || !wbs_element || !network_activity || !officer_in_charge) {\r\n    //   message.error('Please fill all the fields');\r\n    //   return;\r\n    // }\r\n    if (!commencementDate || !expiryDate || !contractType || !gl_number || !project_number || !co_regn_no) {\r\n      message.error('Please fill all the fields');\r\n      return;\r\n    }\r\n\r\n\r\n    axios\r\n      .post(\r\n        \"/api/tc/new-service_entry_sheet\",\r\n        {\r\n          tc_quotation_id: quoteData.quotation_id,\r\n          date: moment(),\r\n          tc_contract_id: quoteData.tc_contract_id,\r\n          tc_customer_id: quoteData.tc_customer_id,\r\n          tc_customer_job_site_id: quoteData.tc_customer_job_site_id || null,\r\n          tc_quotation_id: quoteData.tc_quotation_id,\r\n          tc_work_order_id: quoteData.id,\r\n          target_completion_date: moment(commencementDate),\r\n          actual_completion_date: moment(expiryDate),\r\n          order_type: contractType,\r\n          gl_number: gl_number,\r\n          project_number: project_number,\r\n          co_regn_no: co_regn_no,\r\n          line_items: (jobsData),\r\n\r\n          status: 'Active'\r\n        },\r\n      )\r\n      .then((response) => {\r\n        console.log(response);\r\n        setCommencementDate(null);\r\n        setExpiryDate(null);\r\n        setContractType(null);\r\n        setRemindersData([]);\r\n        setOpenContractModal(false);\r\n        setGl_number('');\r\n        setProject_number('');\r\n        setCo_regn_no('');\r\n\r\n        getData();\r\n        window.location.reload();\r\n\r\n\r\n        // updateStatus();\r\n        message.success('Service TimeSheet created successfully');\r\n        // updateQuotationStatus();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setOpenContractModal(false);\r\n        message.error('Work Order creation failed');\r\n      });\r\n  };\r\n\r\n\r\n  const funOpenJobModal = () => {\r\n    setOpenJobModal(true)\r\n  }\r\n  return (\r\n    <div>\r\n      <Table columns={columns} dataSource={contractsData} />\r\n      <Modal\r\n        visible={openContractModal}\r\n        centered\r\n        maskClosable\r\n        width={900}\r\n        onCancel={handleCancel}\r\n        title={'Create Service Entry Sheet'}\r\n        footer={[\r\n          <Button style={{ color: '#F5F5F5' }} type='primary' className='font-weight-bold' onClick={handleContractOk}>Save</Button>,\r\n          <Button style={{ color: '#000B23' }} onClick={handleContractCancel} className='font-weight-bold'>Cancel</Button>,\r\n        ]}\r\n      >\r\n        <div className='w-100'>\r\n          <h4 className=\"mb-2 mt-4\">Target Completion Date</h4>\r\n          <DatePicker value={commencementDate} onChange={commencementDateChange} />\r\n        </div>\r\n\r\n        <div className='w-100'>\r\n          <h4 className=\"mb-2 mt-4\">Actual Completion Date</h4>\r\n          <DatePicker value={expiryDate} onChange={expiryDateChange} />\r\n        </div>\r\n        <div className='w-100'>\r\n          <h4 className=\"mb-2 mt-4\">GL Number</h4>\r\n          <Input value={gl_number} onChange={(e) => {\r\n            setGl_number(e.target.value)\r\n          }}\r\n          />\r\n\r\n        </div>\r\n\r\n        <div className='w-100'>\r\n          <h4 className=\"mb-2 mt-4\">Project Number</h4>\r\n          <Input value={project_number} onChange={(e) => {\r\n            setProject_number(e.target.value)\r\n          }}\r\n          />\r\n        </div>\r\n\r\n        <div className='w-100'>\r\n          <h4 className=\"mb-2 mt-4\">CO Regn No</h4>\r\n          <Input value={co_regn_no} onChange={(e) => {\r\n            setCo_regn_no(e.target.value)\r\n          }}\r\n          />\r\n        </div>\r\n\r\n\r\n\r\n\r\n        <div className='w-100'>\r\n          <h4 className=\"mb-2 mt-4\">Contract Type</h4>\r\n          <Select\r\n            className='w-100'\r\n            showSearch\r\n            placeholder=\"Contract Type\"\r\n            value={contractType}\r\n            onChange={(e) => {\r\n              setContractType(e)\r\n            }}\r\n          >\r\n            <Select.Option title={'None'} key={0} value={'None'}>{'None'}</Select.Option>\r\n            <Select.Option title={'Ad Hoc'} key={1} value={'Ad Hoc'}>{'Ad Hoc'}</Select.Option>\r\n            <Select.Option title={'Routine'} key={2} value={'Routine'}>{'Routine'}</Select.Option>\r\n          </Select>\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n          <Table columns={columns2} dataSource={jobsData} />\r\n          <div className=\"d-flex justify-content-end\">\r\n            <Button type=\"primary\" onClick={funOpenJobModal} className='mt-2'>Add Job</Button>\r\n          </div>\r\n        </div>\r\n\r\n\r\n      </Modal>\r\n      <Modal\r\n        visible={openJobModal}\r\n        centered\r\n        maskClosable\r\n        onCancel={handleCancel}\r\n        title={'Job Details'}\r\n        footer={[\r\n          <Button type=\"primary\" className='font-weight-bold' onClick={handleJobOk}>Save</Button>,\r\n          <Button style={{ color: '#000B23' }} onClick={() => {\r\n            setDescription('');\r\n            setQuantity(null);\r\n            setUnitPrice(null);\r\n            setOpenJobModal(false);\r\n          }} className='font-weight-bold'>Cancel</Button>,\r\n        ]}\r\n      >\r\n        <div>\r\n          <h4 className=\"mb-2\">Description</h4>\r\n          <TextArea rows={4} onChange={onChangeDesc} value={description} />\r\n        </div>\r\n\r\n        <div>\r\n          <h4 className=\"mb-2 mt-2\"> Quantity</h4>\r\n          <InputNumber min={0} onChange={onChangeProvisional} value={quantity} />\r\n        </div>\r\n\r\n        <div>\r\n          <h4 className=\"mb-2 mt-2\">Unit Price</h4>\r\n          <InputNumber min={0} onChange={onChangeUnit} value={unitPrice} />\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ContractTable","import { Button, Dropdown, Menu, Space, Select, Drawer } from 'antd'\r\nimport React, { useState, useEffect } from 'react'\r\nimport SearchBox from 'components/shared-components/SearchBox';\r\nimport axios from 'axios';\r\nimport exportIcon from \"assets/svg/exportIcon.svg\";\r\nimport PageHeading from 'components/shared-components/PageHeading/PageHeading';\r\nimport Icon from \"@ant-design/icons\"\r\nimport { FilterIcon, ItemsAndServicesIcon } from \"assets/svg/icon\";\r\nimport ContractTable from './ContractTable';\r\nimport { CSVLink } from \"react-csv\";\r\nimport moment from \"moment\";\r\n\r\n// import { Link } from 'react-router-dom';\r\n// import plusIcon from \"assets/svg/plus.svg\";\r\n// import UserManagementIcon from \"assets/svg/usermManagementPage.svg\";\r\n// import filterIcon from \"assets/svg/filterIcon.svg\";\r\n// import Filter from 'views/app-views/UserManagement/UserList/Filter';\r\n\r\n\r\nfunction WorkOrder({id}) {\r\n\r\n  const [searchText, setSearchText] = useState('')\r\n  const [setPage, setsetPage] = useState(1)\r\n  const [statusFilter, setStatusFilter] = useState([])\r\n  const [allContractsData, setAllContractsData] = useState([])\r\n  const [current, setCurrent] = useState(['All'])\r\n  const customer_id = localStorage.getItem(\"customer_id\");\r\n\r\n  const [allJobsites , setAllJobsites] = useState(false);\r\n  const [allCustomers , setAllCustomers] = useState(false);\r\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n  const [selectedCustomerFilter , setSelectedCustomerFilter] = useState(false);\r\n  const [selectedJobsiteFilter , setSelectedJobsiteFilter] = useState(false);\r\n  const [selectedTypeFilter , setSelectedTypeFilter] = useState(false);\r\n  const [selectedStatusFilter , setSelectedStatusFilter] = useState(false);\r\n  const [selectedFilter , setSelectedFilter] = useState(false);\r\n  const tok = localStorage.getItem('token')\r\n\r\n  const headers = [\r\n    { label: \"Sr. No\", key: \"sr_no\" },\r\n    { label: \"ID\", key: \"id\" },\r\n    { label: \"Customer Name\", key: \"customer_name\" },\r\n    { label: \"Jobsite\", key: \"jobsite_name\" },\r\n    { label: \"Commence On\", key: \"commence_on\" },\r\n    { label: \"Expired On\", key: \"expire_on\" },\r\n    { label: \"Status\", key: \"status\" }\r\n  ];\r\n\r\n  // const getPdf = async () => {\r\n  //   try {\r\n  //     const response = await axios.post(\r\n  //       \"/api/tc/get-customers\",\r\n  //       {\r\n  //         page_index: setPage,\r\n  //         search: searchText ? searchText : null,\r\n  //         statuses: statusFilter || [\"ACTIVE\", \"INACTIVE\"],\r\n  //         export_type: \"pdf\"\r\n  //       },\r\n  //       {\r\n  //         headers: {\r\n  //           \"content-type\": \"application/json\",\r\n  //           Authorization: `Bearer ${tok}`\r\n  //         },\r\n  //       }\r\n  //     );\r\n  //     console.log(response.data.url); // add this line to log the PDF URL\r\n  //     if (response.data.status) {\r\n  //       return response.data.url;\r\n  //     }\r\n  //   } catch (error) {\r\n  //     console.log(error);\r\n  //   }\r\n  // };\r\n  \r\n\r\n  // async function downloadPDF() {\r\n  //   try {\r\n  //     const pdfUrl = await getPdf();\r\n  //     if (pdfUrl) {\r\n  //       window.open(pdfUrl);\r\n  //     }\r\n  //   } catch (error) {\r\n  //     console.error(\"Error downloading PDF:\", error);\r\n  //   }\r\n  // }\r\n  // const handleClick = () => {}\r\n\r\n  const handleFilterClick = (e) => {\r\n    setCurrent([e.key])\r\n    if(e.key === 'ACTIVE') {\r\n      setStatusFilter(['ACTIVE'])\r\n    }else if(e.key === 'INACTIVE') {\r\n      setStatusFilter(['INACTIVE'])\r\n    } else {\r\n      setStatusFilter([])\r\n    }\r\n  }\r\n\r\n  const getAllJobsites = () => {\r\n    axios({\r\n      method: 'post',\r\n      url: \"/api/tc/get-customer-job-sites\",\r\n      data: {\r\n        page_index: 1,\r\n        page_size: 100000,\r\n        customer_id: null,\r\n        search : null\r\n      }\r\n    }).then((response) => {\r\n        if (response.data.success) {\r\n          setAllJobsites(response.data.data.data)\r\n        }\r\n        console.log(\"Job sites data fetched\")\r\n        console.log(response.data.data.data)\r\n    }).catch((err) => {\r\n        console.log(err)\r\n    });\r\n  };\r\n  \r\n  const getAllCustomers = () => {\r\n    axios({\r\n      method: 'post',\r\n      url: \"/api/tc/get-customers\",\r\n      data: {\r\n        page_index: 1,\r\n        page_size: 100000,\r\n        customer_id: null,\r\n        search : null\r\n      }\r\n    }).then((response) => {\r\n        if (response.data.success) {\r\n          setAllCustomers(response.data.data.data)\r\n        }\r\n        console.log(\"Customers data fetched\")\r\n        console.log(response.data.data.data)\r\n    }).catch((err) => {\r\n        console.log(err)\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n    .post(\r\n      \"/api/tc/get-work-orders\",\r\n      {\r\n        page_index: 1,\r\n        page_size: 100000,\r\n        search : null,\r\n        customer_id: customer_id,\r\n        ...id && {contract_id: +id}\r\n      },\r\n    )\r\n    .then((response) => {\r\n      let res = response.data.data.data;\r\n\r\n      let fdata = res.map((elem, index) => {\r\n        return {\r\n          sr_no: index+1,\r\n          key: elem.id,\r\n          id: elem.id,\r\n          customer_name: elem.customer_name || elem.tc_customer_id,\r\n          jobsite_name: elem.job_site_name || (elem.tc_customer_job_site_id || '-'),\r\n          contract_type: elem.type,\r\n          commence_on: moment(elem.start_date).format(\"DD-MM-YYYY\"),\r\n          expire_on: moment(elem.end_date).format(\"DD-MM-YYYY\"),\r\n          contract_type: elem.type,\r\n          status: elem.status,\r\n        };\r\n      });\r\n\r\n      setAllContractsData(fdata);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n\r\n    getAllCustomers();\r\n    getAllJobsites();\r\n  }, []);\r\n\r\n  const menuFilter = (\r\n    <Menu onClick={handleFilterClick} selectedKeys={current}>\r\n      <Menu.Item key={'All'}>All</Menu.Item>\r\n      <Menu.SubMenu title=\"Status\">\r\n        <Menu.Item key={'AllStatus'}>All</Menu.Item>\r\n        <Menu.Item key={'ACTIVE'}>ACTIVE</Menu.Item>\r\n        <Menu.Item key={'INACTIVE'}>INACTIVE</Menu.Item>\r\n      </Menu.SubMenu>\r\n    </Menu>\r\n  );\r\n\r\n  const drawerHandler = () => {\r\n    setDrawerIsOpen((prevState) => {\r\n      console.log(\"Drawer \" + (!prevState ? 'Open':'Closed'));\r\n\r\n      return !prevState\r\n    });\r\n  };\r\n\r\n  const handleDrawerOk = () => {\r\n    setSelectedFilter((previousState) => !previousState)\r\n    setDrawerIsOpen(false);\r\n  };\r\n\r\n  const handleDrawerReset = () => {\r\n    setSelectedFilter((previousState) => !previousState)\r\n    setSelectedCustomerFilter(false)\r\n    setSelectedJobsiteFilter(false)\r\n    setSelectedTypeFilter(false)\r\n    setSelectedStatusFilter(false)\r\n\r\n    setDrawerIsOpen(false);\r\n  };\r\n\r\n  const onDrawerClose = () => {\r\n    console.log(\"Closed\")\r\n    setDrawerIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className='d-flex justify-content-between'>\r\n        <PageHeading\r\n          // icon={UserManagementIcon}\r\n          title=\"Work Order\"\r\n        />\r\n        <div className=\"d-flex justify-content-between mb-3\">\r\n          <div className=\" d-flex align-items-center justify-content-between mr-2\">\r\n            <SearchBox setSearchText={setSearchText} />\r\n\r\n            {\r\n              !id &&  <Button className=\"d-flex align-items-center ml-2\" onClick={drawerHandler}>\r\n              <Icon className=\"mr-2\" component={FilterIcon} />\r\n              Filters\r\n            </Button>\r\n            }\r\n\r\n            <CSVLink data={allContractsData} \r\n              headers={headers} \r\n              filename={\"All-Work-Orders.csv\"}\r\n            >\r\n              <Button className=\"d-flex align-items-center ml-2\" >\r\n                <img className=\"mr-2\" src={exportIcon} alt=\"exportIcon\"></img>Export\r\n              </Button>\r\n            </CSVLink>\r\n            \r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <ContractTable setsetPage={setsetPage} searchText={searchText} statuses={statusFilter} \r\n        selectedCustomerFilter={selectedCustomerFilter} selectedJobsiteFilter={selectedJobsiteFilter} \r\n        selectedStatusFilter={selectedStatusFilter} \r\n        selectedFilter={selectedFilter} selectedTypeFilter={selectedTypeFilter} id={id}/>\r\n      </div>\r\n      <div>\r\n      <Drawer title=\"Filter\"\r\n          placement=\"right\"\r\n          onClose={onDrawerClose} \r\n          open={drawerIsOpen}\r\n          closable={true}\r\n          // getContainer={false}\r\n          visible={drawerIsOpen}\r\n          footer={[\r\n            <Button key={'submit'} style={{ color: '#F5F5F5' }} type=\"primary\" className='font-weight-bold mr-2' onClick={handleDrawerOk}>Apply</Button>,\r\n            <Button key={'cancel'} style={{ color: '#000B23' }} onClick={() => {handleDrawerReset()}} className='font-weight-bold'>Reset</Button>,\r\n          ]}\r\n        >\r\n          <div className=\"mb-2\">\r\n            <h4>Customer</h4>\r\n            <Select\r\n                showSearch\r\n                placeholder=\"Jobsite\"\r\n                // optionFilterProp=\"children\"\r\n                // filterOption={(input, option) => (option?.title ?? '').toString().toLowerCase()?.includes(input?.toLowerCase())}\r\n                // filterSort={(optionA, optionB) =>\r\n                //     (optionA?.label ?? '').toString().toLowerCase().localeCompare((optionB?.label ?? '').toString().toLowerCase())\r\n                // }\r\n                value={selectedCustomerFilter}\r\n                onChange={(e) => {setSelectedCustomerFilter(e)}}\r\n                className=\"w-100\"\r\n            >\r\n                <Select.Option title={'None'} key={'None'} value={null}>{'None'}</Select.Option>\r\n                {allCustomers && allCustomers.map((val, id) => (\r\n                    <Select.Option title={val.name} key={id} value={val?.id}>{val.name}</Select.Option>\r\n                ))}\r\n            </Select>\r\n          </div>\r\n          <div className=\"mb-2\">\r\n            <h4>Jobsite</h4>\r\n            <Select\r\n                showSearch\r\n                placeholder=\"Jobsite\"\r\n                value={selectedJobsiteFilter}\r\n                onChange={(e) => {setSelectedJobsiteFilter(e)}}\r\n                className=\"w-100\"\r\n            >    \r\n                <Select.Option title={'None'} key={'None'} value={null}>{'None'}</Select.Option>\r\n                {allJobsites && allJobsites.map((val, id) => (\r\n                    <Select.Option title={val.name} key={id} value={val?.id}>{val.name}</Select.Option>\r\n                ))}\r\n            </Select>\r\n          </div>\r\n          {/* <div className='mb-2'>\r\n            <h4>Contract Type</h4>\r\n            <Select\r\n                showSearch\r\n                placeholder=\"Status\"\r\n                value={selectedTypeFilter}\r\n                onChange={(e) => {setSelectedTypeFilter(e)}}\r\n                className=\"w-100\"\r\n            >\r\n                <Select.Option title={'None'} key={'None'} value={null}>{'None'}</Select.Option>\r\n                <Select.Option title={'Ad Hoc'} key={'Ad Hoc'} value={'Ad Hoc'}>{'Ad Hoc'}</Select.Option>\r\n                <Select.Option title={'Routine'} key={'Routine'} value={'Routine'}>{'Routine'}</Select.Option>\r\n            </Select>\r\n          </div> */}\r\n          {/* <div>\r\n            <h4>Status</h4>\r\n            <Select\r\n                showSearch\r\n                placeholder=\"Status\"\r\n                value={selectedStatusFilter}\r\n                onChange={(e) => {setSelectedStatusFilter(e)}}\r\n                className=\"w-100\"\r\n            >\r\n                <Select.Option title={'None'} key={'None'} value={null}>{'None'}</Select.Option>\r\n                <Select.Option title={'Active'} key={'Active'} value={'Active'}>{'Active'}</Select.Option>\r\n                <Select.Option title={'Expired'} key={'Expired'} value={'Expired'}>{'Expired'}</Select.Option>\r\n            </Select>\r\n          </div> */}\r\n        </Drawer>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default WorkOrder","import { Card } from 'antd'\r\nimport moment from 'moment'\r\nimport React, { useState } from 'react'\r\n\r\nfunction BasicDetails({customerData}) {\r\n\r\n  return (\r\n    <div>\r\n      <Card style={{ background: \"#FAFAFB\", textAlign: 'start' }} >\r\n        <div className='d-flex justify-content-between'>\r\n          <div className='w-25'>\r\n            <div className='d-flex justify-content-start my-1'>\r\n               <h5>Customer Name: &emsp;</h5>\r\n            </div>\r\n            <div className='d-flex justify-content-start my-1'>\r\n              <h5>Job Site Name: &emsp;</h5>\r\n            </div>\r\n            <div className='d-flex justify-content-start my-1'>\r\n              <h5>Commence Date: &emsp;</h5>\r\n            </div>\r\n            <div className='d-flex justify-content-start my-1'>\r\n              <h5>Type: &emsp;</h5>\r\n            </div>\r\n          </div>\r\n          <div className='w-75'>\r\n            <div className='d-flex justify-content-start my-1'>\r\n              <h5>{ customerData.customer_name }</h5>\r\n            </div>\r\n            <div className='d-flex justify-content-start my-1'>\r\n              <h5>{ customerData.job_site_name }</h5>\r\n            </div>\r\n            <div className='d-flex justify-content-start my-1'>\r\n              <h5>{ moment(customerData.start_date).format(\"DD-MM-YYYY\") }</h5>\r\n             </div> \r\n            <div className='d-flex justify-content-start my-1'>\r\n              <h5>{ customerData.type }</h5>\r\n              </div>\r\n\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BasicDetails\r\n\r\n// \"tc_customer_id\": 18,\r\n// \"tc_customer_job_site_id\": 19,\r\n// \"tc_quotation_id\": 14,\r\n// \"start_date\": \"2025-02-20\",\r\n// \"end_date\": null,\r\n// \"reminder_date\": null,\r\n// \"type\": \"None\",\r\n// \"created_at\": \"2025-02-19 06:17:07\",\r\n// \"updated_at\": \"2025-02-19 06:17:07\",\r\n// \"reminders\": \"[]\",\r\n// \"status\": \"Upcoming\",\r\n// \"customer_name\": \"Tony Test Co\",\r\n// \"job_site_name\": \"Test Location KS\",\r\n// \"customer_image\": \"https://grand-energy.s3.ap-southeast-1.amazonaws.com/task_document/1736995329359-sMN7.jpeg\",\r\n// \"tasks\": []","import PageHeading from \"components/shared-components/PageHeading/PageHeading\";\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport {\r\n  AddressDetailsActiveIcon,\r\n  AddressDetailsIcon,\r\n  AttendanceManagementActiveIcon,\r\n  AttendanceManagementIcon,\r\n  BasicDetailsActiveIcon,\r\n  BasicDetailsIcon,\r\n} from \"views/app-views/UserManagement/SvgIcons\";\r\n// import AttendanceManagementIcons from 'assets/svg/AttendanceManagement.svg'\r\nimport { Button, Tabs } from \"antd\";\r\nimport Icon from \"@ant-design/icons\";\r\nimport BasicDetails from \"./BasicDetails\";\r\n\r\nimport { UserManagementIcon } from \"configs/svgIcons\";\r\nimport plusIcon from \"assets/svg/plus.svg\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Reminder from \"./Reminder\";\r\nimport WorkOrder from \"../../WorkdOrder/WorkOrder\";\r\nimport Service from \"../../ServiceTimeSheet/WorkOrder\";\r\n\r\nconst tabs = [\r\n  {\r\n    title: \"Basic Details\",\r\n\r\n\r\n  },\r\n  {\r\n    title: \"Work Orders\",\r\n  },\r\n  {\r\n    title: \"Service Entry Sheets\",\r\n  }\r\n\r\n\r\n];\r\n\r\nfunction ContractView() {\r\n  const param = useParams()\r\n\r\n  const [customerData, setCustomerData] = useState({\r\n    reminders: []\r\n  });\r\n\r\n  const [currActiveKey, setCurrActiveKey] = useState(\"1\");\r\n  const tabChangeHandler = (key) => {\r\n    setCurrActiveKey(key);\r\n  };\r\n\r\n  const nextHandler = () => {\r\n    if (+currActiveKey < 3) {\r\n      const newKey = +currActiveKey + 1;\r\n\r\n      setCurrActiveKey(newKey.toString());\r\n    }\r\n  };\r\n  const preHandler = () => {\r\n    if (+currActiveKey <= 3) {\r\n      const newKey = +currActiveKey - 1;\r\n\r\n      setCurrActiveKey(newKey.toString());\r\n    }\r\n  };\r\n\r\n  const content = [\r\n    <BasicDetails customerData={customerData} />,\r\n    <WorkOrder id={param.id}/>,\r\n    <Service id={param.id}/>,\r\n    // <Reminder customerData={customerData} />,\r\n  ];\r\n\r\n  const extraBottons = (\r\n    <Link to={`/app/customer-management/customer-accounts/add-new-customer-user/${param.id}`}>\r\n      <Button className=\"d-flex align-items-center\" type=\"primary\" size=\"large\">\r\n        <img className=\"mr-2\" src={plusIcon} alt=\"plusIcon\"></img>\r\n        Add New\r\n      </Button>\r\n    </Link>\r\n  );\r\n\r\n  const [hideBasicDetail, setHideBasicDetail] = useState(false)\r\n  const location = useLocation()\r\n\r\n\r\n  const getContractData = () => {\r\n    axios\r\n      .post(\r\n        \"/api/tc/get-contract\",\r\n        {\r\n          id: +param.id,\r\n        },\r\n      )\r\n      .then((response) => {\r\n        let res = response.data.data;\r\n\r\n        setCustomerData(res);\r\n\r\n\r\n\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    getContractData();\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <PageHeading\r\n        title={\"Contract Management / Contract List / View Contract\"}\r\n        svg={UserManagementIcon}\r\n      />\r\n\r\n      <Tabs\r\n        activeKey={currActiveKey}\r\n        size=\"large\"\r\n        onChange={tabChangeHandler}\r\n\r\n      >\r\n        {/* <Tabs.TabPane\r\n          tab={\r\n            <span className=\"d-flex align-items-center hover-color\">\r\n\r\n              {tabs[0].title}\r\n            </span>\r\n          }\r\n          key=\"1\"\r\n\r\n        >\r\n          {content[0]}\r\n        </Tabs.TabPane> */}\r\n\r\n        {\r\n          content.map((item, index) => {\r\n            return (\r\n              <Tabs.TabPane\r\n                tab={\r\n                  <span className=\"d-flex align-items-center hover-color\">\r\n\r\n                    {tabs[index].title}\r\n                  </span>\r\n                }\r\n                key={(index + 1).toString()}\r\n\r\n              >\r\n                {item}\r\n              </Tabs.TabPane>\r\n            )\r\n          })\r\n        }\r\n\r\n\r\n      </Tabs>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ContractView;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Service_card__TfAmZ\",\"add_details\":\"Service_add_details__A9Le2\",\"total_amt\":\"Service_total_amt__6lQQx\",\"tag\":\"Service_tag__t4qNP\",\"send_btn\":\"Service_send_btn__3Wx9j\",\"action\":\"Service_action__FajZf\"};","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport {\r\n    Card,\r\n    Typography,\r\n    Col,\r\n    Row,\r\n    List,\r\n    Divider,\r\n    Tag,\r\n    Button,\r\n    Select,\r\n    Table,\r\n    DatePicker,\r\n    Modal,\r\n    Input,\r\n    message,\r\n    Tabs\r\n} from \"antd\";\r\nimport Icon from \"@ant-design/icons\";\r\nimport PageHeading from \"components/shared-components/PageHeading/PageHeading\";\r\n\r\nimport logo from \"assets/grand-energy-logo-small.png\";\r\nimport { ItemsAndServicesPageIcon } from \"assets/svg/icon\";\r\nimport HandBagImg from \"assets/HandBag.png\";\r\nimport SneakersImg from \"assets/Sneakers.png\";\r\n// import { PdfIcon } from \"../../../ItemsAndServices/svgIcons\";\r\nimport generatePDF, { Margin } from 'react-to-pdf';\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\n// import Modal from \"components/UI/Modal\";\r\n// import { Link } from \"react-router-dom\";\r\n// import logo from \"assets/grand-energy-logo.png\";\r\n// import { SendIcon } from \"assets/svg/icon\";\r\n\r\nimport classes from \"./Service.module.css\";\r\nimport { PdfIcon } from \"views/app-views/ItemsAndServices/svgIcons\";\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nconst options = {\r\n    page: {\r\n        margin: Margin.SMALL,\r\n    }\r\n};\r\n\r\nconst ViewContract = () => {\r\n    const targetRef = useRef();\r\n    const history = useHistory();\r\n    const param = useParams();\r\n    const [reminder, setReminder] = useState([]);\r\n    const [customerData, setCustomerData] = useState({\r\n        customerId: 0,\r\n        email: '',\r\n        name: '',\r\n        phone: '',\r\n        status: '',\r\n        profile_pic: '',\r\n        contact_name: '',\r\n        office_contact_number: '',\r\n        uen_number: '',\r\n        postal_code: '',\r\n        block_number: '',\r\n        level_number: '',\r\n        unit_number: '',\r\n        street_number: '',\r\n        country: '',\r\n        created_by: '',\r\n        other_details: {}\r\n    });\r\n    const [quoteData, setQuoteData] = useState({\r\n        id: 0,\r\n        customer_id: '',\r\n        jobsite_id: '',\r\n        customerName: '',\r\n        jobsite: '',\r\n        inquiryDate: '',\r\n        quotationDate: '',\r\n        amount: '',\r\n        status: '',\r\n\r\n        tc_customer_id: '',\r\n        task_period_from_date: '',\r\n        task_period_to_date: '',\r\n        due_date: '',\r\n        sub_total: 0,\r\n        tax: 8,\r\n        discount: 0,\r\n        total: 0,\r\n        tc_quotation_file: '',\r\n        quotation_remarks: '',\r\n        line_items: [],\r\n    });\r\n    const [lineItem, setLineItem] = useState([]);\r\n    const [rawContractData, setRawContractData] = useState({});\r\n    const [contractData, setContractData] = useState({\r\n        id: 0,\r\n        customer_id: '',\r\n        jobsite_id: '',\r\n        customerName: '',\r\n        jobsite: '',\r\n        start_date: '',\r\n        end_date: '',\r\n    });\r\n    const [gstData, setGstData] = useState([]);\r\n    // const [openContractModal , setOpenContractModal] = useState(false);\r\n    // const [commencementDate , setCommencementDate] = useState(false);\r\n    // const [expiryDate , setExpiryDate] = useState(false);\r\n    // const [remindersData , setRemindersData] = useState([]);\r\n    // const [contractType , setContractType] = useState(false);\r\n    const [grandTotal, setGrandTotal] = useState([\r\n        //   { text: \"Grand Total\", amt: \"0\" }\r\n    ]);\r\n    const [dataGrandTotal, setDataGrandTotal] = useState([\r\n        //   { text: \"Subtotal\", amt: \"0\" },\r\n        //   { text: \"GST\", amt: \"0\", tag: { text: \"0%\", color: \"#0099A8\" } },\r\n    ]);\r\n\r\n    const getContractData = () => {\r\n        axios\r\n            .post(\r\n                \"/api/tc/get-service_entry_sheet\",\r\n                {\r\n                    id: +param.id,\r\n                },\r\n            )\r\n            .then((response) => {\r\n                let res = response.data.data;\r\n                setRawContractData(res);\r\n                // setContractData({\r\n                //     id: res?.id,\r\n                //     customer_id: res?.tc_customer_id,\r\n                //     jobsite_id: res?.tc_customer_job_site_id,\r\n                //     quotation_id: res?.tc_quotation_id,\r\n                //     customerName: res?.customer_name,\r\n                //     jobsite: res?.job_site_name,\r\n                //     start_date: res?.start_date,\r\n                //     end_date: res?.end_date,\r\n                //     direct_to_pc: res?.direct_to_pc,\r\n                //     co_regn_no: res?.co_regn_no,\r\n                //     contract_number: res?.contract_number,\r\n                //     wbs_element: res?.wbs_element,\r\n                //     network_activity: res?.network_activity,\r\n                //     officer_in_charge: res?.officer_in_charge_name,\r\n                //     // status: res?.status || 'Quote Sent',\r\n                //     created_at: moment(res.created_at).format('DD-MM-YYYY hh:mm A')\r\n                // })\r\n                setContractData(res);\r\n\r\n                setLineItem(res?.line_items ? JSON.parse(res?.line_items) : [])\r\n                let gst_percentage = 9;\r\n                const sub_total = res.line_items ? JSON.parse(res?.line_items).reduce((acc, item) => acc + item.total, 0) : 0;\r\n                const gst_amount = (gst_percentage / 100) * sub_total || 0;\r\n                // const total_amount = sub_total + gst_amount;\r\n                let total_amount = 0;\r\n                // let subtotal_amount = res.sub_total || res.total;\r\n                // let total_amount = res.total;\r\n                // let gst_amount = (+gst_percentage/100)*subtotal_amount || 0;\r\n                if (gst_amount) {\r\n                    total_amount = sub_total + gst_amount;\r\n                }\r\n\r\n\r\n                setDataGrandTotal([\r\n                    { text: \"Subtotal\", amt: `${sub_total || 0}` },\r\n                    { text: \"GST\", amt: `${gst_amount.toFixed(2) || 0}`, tag: { text: (gst_percentage || 0) + `%`, color: \"#0099A8\" } },\r\n                ]);\r\n                setGrandTotal([\r\n                    { text: \"Grand Total\", amt: (total_amount).toFixed(2) }\r\n                ])\r\n\r\n\r\n                // if(res.total) {\r\n                //     setDataGrandTotal([\r\n                //         { text: \"Subtotal\", amt: `${subtotal_amount || 0}` },\r\n                //         { text: \"GST\", amt: `${gst_amount.toFixed(2) || 0}`, tag: { text: (gst_percentage || 0)+`%`, color: \"#0099A8\" } },\r\n                //     ]);\r\n                //     setGrandTotal([\r\n                //         { text: \"Grand Total\", amt: (total_amount).toFixed(2) }\r\n                //     ])\r\n                // }\r\n                console.log(contractData);\r\n                getQuotationData(res.tc_quotation_id)\r\n\r\n                if (res.tc_customer_id) getCustomerData(res.tc_customer_id);\r\n                // getAllGst(res.total);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    const getQuotationData = (q_id) => {\r\n        axios\r\n            .post(\r\n                \"/api/tc/get-quotation\",\r\n                {\r\n                    id: +q_id,\r\n                },\r\n            )\r\n            .then((response) => {\r\n                let res = response.data.data;\r\n\r\n                setQuoteData({\r\n                    id: res?.id,\r\n                    customer_id: res?.tc_customer_id,\r\n                    jobsite_id: res?.tc_customer_job_site_id,\r\n                    customerName: res?.customer_name,\r\n                    jobsite: res?.jobsite_name,\r\n                    inquiryDate: res?.inquiry_date ? moment(res?.inquiry_date).format('DD-MM-YYYY HH:mm A') : '',\r\n                    quotationDate: moment(res?.task_period_from_date).format('DD-MM-YYYY'),\r\n                    amount: res?.total,\r\n                    status: res?.status || 'Quote Sent',\r\n\r\n                    tc_customer_id: res?.tc_customer_id,\r\n                    task_period_from_date: moment(res?.task_period_from_date),\r\n                    task_period_to_date: moment(res?.task_period_to_date),\r\n                    due_date: moment(res?.due_date).format('DD-MM-YYYY'),\r\n                    sub_total: res?.sub_total || 0,\r\n                    tax: res?.gst || 8,\r\n                    discount: res?.discount || 0,\r\n                    total: res?.total,\r\n                    tc_quotation_file: res?.tc_quotation_file,\r\n                    quotation_remarks: res?.quotation_remarks || '',\r\n                    line_items: res?.line_items || [],\r\n                })\r\n                console.log(quoteData);\r\n\r\n                if (res.tc_customer_id) getCustomerData(res.tc_customer_id);\r\n\r\n                // getAllGst(res.total);\r\n                // let subtotal_amount = res.sub_total || res.total;\r\n                // let total_amount = res.total;\r\n                // let gst_percentage = res?.tax;\r\n                // let gst_amount = (+gst_percentage/100)*subtotal_amount || 0;\r\n                // if(gst_amount) {\r\n                //     total_amount = subtotal_amount + gst_amount;\r\n                // }\r\n\r\n                // if(res.total) {\r\n                //     setDataGrandTotal([\r\n                //         { text: \"Subtotal\", amt: `${subtotal_amount || 0}` },\r\n                //         { text: \"GST\", amt: `${gst_amount.toFixed(2) || 0}`, tag: { text: (gst_percentage || 0)+`%`, color: \"#0099A8\" } },\r\n                //     ]);\r\n                //     setGrandTotal([\r\n                //         { text: \"Grand Total\", amt: (total_amount).toFixed(2) }\r\n                //     ])\r\n                // }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    const getCustomerData = (cust_id) => {\r\n        axios\r\n            .post(\r\n                \"/api/tc/get-customer\",\r\n                {\r\n                    id: cust_id,\r\n                },\r\n            )\r\n            .then((response) => {\r\n                let res = response.data.data;\r\n\r\n                if (res.other_details) {\r\n                    let other_details = JSON.parse(res.other_details);\r\n                    res = { ...res, ...other_details }\r\n                }\r\n                setCustomerData({\r\n                    customerId: res.id,\r\n                    email: res.email,\r\n                    name: res.name,\r\n                    phone: res.phone,\r\n                    status: res.status,\r\n                    profile_pic: res?.profile_pic,\r\n                    contact_name: res?.contact_name,\r\n                    office_contact_number: res?.office_contact_number,\r\n                    uen_number: res?.uen_number,\r\n                    postal_code: res?.postal_code || '000000',\r\n                    block_number: res?.block_number || '',\r\n                    level_number: res?.level_number || '',\r\n                    unit_number: res?.unit_number || '',\r\n                    street_number: res?.street_number || '',\r\n                    country: res?.country || 'Singapore',\r\n                    created_by: res?.created_by || '',\r\n                    other_details: res?.other_details,\r\n                })\r\n                console.log(customerData)\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    // const getAllGst = (total)=> {\r\n    //     axios({\r\n    //         method: 'post',\r\n    //         url: \"/api/tc/get-all-gsts\",\r\n    //         data: {},\r\n    //     }).then(function (response) {\r\n    //         if(response.data.success) {\r\n    //             console.log(response.data.data)\r\n    //             let res = response.data.data.data;\r\n    //             let fdata = res.map((elem, ind) => {\r\n    //               return {\r\n    //                   key: elem.id,\r\n    //                   id: elem.id,\r\n    //                   srNo: ind+1,\r\n    //                   percentage: elem.percentage,\r\n    //                   description: elem.description,\r\n    //                   created_at: moment(elem.created_at).format(\"DD-MM-YYYY\"),\r\n    //                   updated_at: moment(elem.updated_at).format(\"DD-MM-YYYY\"),\r\n    //               };\r\n    //             });\r\n    //             setGstData(fdata);\r\n    //             console.log(fdata)\r\n    //             let gst_percentage = fdata[fdata.length-1].percentage || 0;\r\n    //             let gst_amount = ((gst_percentage/100)*total);\r\n    //             let total_amount = total + (gst_amount || 0)\r\n\r\n    //             if(total) {\r\n    //               setDataGrandTotal([\r\n    //                 { text: \"Subtotal\", amt: `${total || 0}` },\r\n    //                 { text: \"GST\", amt: `${gst_amount.toFixed(2) || 0}`, tag: { text: `${gst_percentage || 9}%`, color: \"#0099A8\" } },\r\n    //               ]);\r\n    //               setGrandTotal([\r\n    //                 { text: \"Grand Total\", amt: (total_amount || 0).toFixed(2) }\r\n    //               ])\r\n    //             }\r\n    //         }\r\n    //     }).catch(function (error) {\r\n    //         console.log(error);\r\n    //     });\r\n    // };\r\n\r\n    useEffect(() => {\r\n        getContractData();\r\n    }, []);\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <PageHeading\r\n                svg={ItemsAndServicesPageIcon}\r\n                title=\"Contracts / View Work Order\"\r\n            />\r\n          \r\n                    <>\r\n                        <Card className=\"quotation-card\">\r\n                            <div ref={targetRef}>\r\n                                <Card className={classes.add_details}>\r\n                                    <div className=\"d-flex justify-content-between\">\r\n                                        <div>\r\n                                            <Text strong>{customerData.name}</Text>\r\n                                            <br />\r\n                                            <Text>{`${customerData.block_number} ${customerData.street_number}, ${customerData.level_number}, ${customerData.unit_number}`}</Text>\r\n                                            <br />\r\n                                            <Text>{`${customerData.country}, ${customerData.postal_code}`}</Text>\r\n                                            <br />\r\n                                            <Text strong>Customer ID: </Text><Text>{customerData.customerId}</Text>\r\n                                            <br />\r\n                                            <Text strong>Tel Number: </Text><Text>{customerData.phone}</Text>\r\n                                            <br />\r\n                                            <Text strong>Jobsite: </Text><Text>{contractData.job_site_name}</Text>\r\n                                        </div>\r\n                                        <div className=\"text-left pr-4\">\r\n                                            <div style={{ fontSize: '1.5rem', fontWeight: '700' }} >\r\n                                                Service Entry Sheet\r\n                                            </div>\r\n                                            <div className=\"d-flex justify-content-between\">\r\n                                                <div className=\"mr-5\">\r\n                                                    <Text strong>Service Entry No: </Text>\r\n                                                    <br />\r\n                                                    <Text strong>Target Completion Date: </Text>\r\n                                                    <br />\r\n                                                    <Text strong>Actual Completion Date: </Text>\r\n                                                    <br />\r\n                                                    <Text strong>GL Number</Text>\r\n                                                    <br />\r\n                                                    <Text strong>Co Regn No</Text>\r\n                                                    <br />\r\n                                                    <Text strong>project_number</Text>\r\n                                              \r\n                                                    \r\n\r\n\r\n                                                </div>\r\n                                                <div>\r\n                                                    <Text>#{contractData.id}</Text>\r\n                                                    <br />\r\n                                                    <Text>{ moment(contractData.target_completion_date).format(\"DD-MM-YYYY\")}</Text>\r\n                                                    <br />\r\n                                                    <Text>{ moment(contractData.actual_completion_date).format(\"DD-MM-YYYY\")}</Text>\r\n                                                    <br />\r\n                                                    <Text>{\r\n                                                        contractData.gl_number\r\n                                                        }</Text>\r\n                                                    <br />\r\n                                                    <Text>{contractData.co_regn_no}</Text>\r\n                                                    <br />\r\n                                                    <Text>{contractData.project_number}</Text>\r\n                                                    <br />\r\n                                                   \r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Card>\r\n\r\n                                <div>\r\n                                    <Row>\r\n                                        <Col span={3}>\r\n                                            <Title level={4}>Sr. No.</Title>\r\n                                            <List\r\n                                                // dataSource={dataItems}\r\n                                                dataSource={lineItem}\r\n                                                renderItem={(item, index) => (\r\n                                                    <List.Item key={item.name} className=\" pl-0 border-0\">\r\n                                                        {index + 1}\r\n                                                    </List.Item>\r\n                                                )}\r\n                                            />\r\n                                        </Col>\r\n                                        <Col span={21}>\r\n                                            <Row>\r\n                                                <Col span={8}>\r\n                                                    <Title level={4}>Description</Title>\r\n                                                    <List\r\n                                                        // dataSource={dataServices}\r\n                                                        dataSource={lineItem}\r\n                                                        renderItem={(item) => (\r\n                                                            <List.Item key={item.name} className=\"pl-0 border-0\">\r\n                                                                <div\r\n                                                                    style={{ height: \"32px\" }}\r\n                                                                    className=\"d-flex align-items-center\"\r\n                                                                >\r\n                                                                    {item.name}\r\n                                                                </div>\r\n                                                            </List.Item>\r\n                                                        )}\r\n                                                    />\r\n                                                </Col>\r\n                                                <Col span={5}>\r\n                                                    <Title level={4}> Qty</Title>\r\n                                                    <List\r\n                                                        // dataSource={dataQty}\r\n                                                        dataSource={lineItem}\r\n                                                        renderItem={(item) => (\r\n                                                            <List.Item key={item.quantity} className=\"border-0\">\r\n                                                                <div\r\n                                                                    style={{ height: \"32px\" }}\r\n                                                                    className=\"d-flex align-items-center\"\r\n                                                                >\r\n                                                                    {item.quantity}\r\n                                                                </div>\r\n                                                            </List.Item>\r\n                                                        )}\r\n                                                    />\r\n                                                </Col>\r\n                                                <Col span={5}>\r\n                                                    <Title level={4}>Unit </Title>\r\n                                                    <List\r\n                                                        // dataSource={dataPrice}\r\n                                                        dataSource={lineItem}\r\n                                                        renderItem={(item) => (\r\n                                                            <List.Item key={item.price} className=\"pl-0 border-0\">\r\n                                                                <div\r\n                                                                    style={{ height: \"32px\" }}\r\n                                                                    className=\"d-flex align-items-center\"\r\n                                                                >\r\n                                                                    {item.price}\r\n                                                                </div>\r\n                                                            </List.Item>\r\n                                                        )}\r\n                                                    />\r\n                                                </Col>\r\n                                                <Col span={6}>\r\n                                                    <Title level={4}>SUBTOTAL(S$)</Title>\r\n                                                    <List\r\n                                                        // dataSource={dataTotal}\r\n                                                        dataSource={lineItem}\r\n                                                        renderItem={(item) => (\r\n                                                            <List.Item key={item.total} className=\"pl-0 border-0\">\r\n                                                                <div\r\n                                                                    style={{ height: \"32px\" }}\r\n                                                                    className=\"d-flex align-items-center\"\r\n                                                                >\r\n                                                                    {item.total}\r\n                                                                </div>\r\n                                                            </List.Item>\r\n                                                        )}\r\n                                                    />\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </div>\r\n                                <Divider />\r\n                                <div className=\"d-flex justify-content-end\">\r\n                                    <Row\r\n                                        style={{ width: \"40%\" }}\r\n                                        className=\"d-flex justify-content-center\"\r\n                                    >\r\n                                        <Col span={12}>\r\n                                            <List\r\n                                                dataSource={dataGrandTotal}\r\n                                                renderItem={(item) => (\r\n                                                    <List.Item\r\n                                                        key={item.text}\r\n                                                        className=\"pl-0 border-0 d-flex justify-content-center\"\r\n                                                    >\r\n                                                        <div className=\"d-flex align-items-center \">\r\n                                                            <Text strong>{item.text}</Text>\r\n                                                            {item.tag && (\r\n                                                                <div className={`${classes.total_amt} align-items-center`}>\r\n                                                                    {/* <Tag\r\n                                      color={item.tag.color}\r\n                                      className={`h-100 w-100 ${classes.tag}`}\r\n                                      style={{borderRadius: '1.5px', paddingTop: '1px'}}\r\n                                      >\r\n                                      {item.tag.text}\r\n                                      </Tag> */}\r\n                                                                    <span style={{ background: (item.tag.color), padding: '1.5px 4px' }}\r\n                                                                        className=\"ml-2 \"\r\n                                                                    >{item.tag.text}</span>\r\n                                                                </div>\r\n                                                            )}\r\n                                                        </div>\r\n                                                    </List.Item>\r\n                                                )}\r\n                                            />\r\n                                        </Col>\r\n                                        <Col span={12}>\r\n                                            <List\r\n                                                dataSource={dataGrandTotal}\r\n                                                renderItem={(item) => (\r\n                                                    <List.Item\r\n                                                        key={item.amt}\r\n                                                        className=\"pl-0 border-0 d-flex justify-content-center\"\r\n                                                    >\r\n                                                        <div className=\"d-flex align-items-center\">S$ {item.amt}</div>\r\n                                                    </List.Item>\r\n                                                )}\r\n                                            />\r\n                                        </Col>\r\n                                        <Divider />\r\n\r\n                                        <Col span={12}>\r\n                                            <List\r\n                                                dataSource={grandTotal}\r\n                                                renderItem={(item) => (\r\n                                                    <List.Item\r\n                                                        key={item.text}\r\n                                                        className=\"pl-0 border-0 d-flex justify-content-center\"\r\n                                                    >\r\n                                                        <div className=\"d-flex align-items-center \">\r\n                                                            <Text strong>{item.text}</Text>\r\n                                                        </div>\r\n                                                    </List.Item>\r\n                                                )}\r\n                                            />\r\n                                        </Col>\r\n                                        <Col span={12}>\r\n                                            <List\r\n                                                dataSource={grandTotal}\r\n                                                renderItem={(item) => (\r\n                                                    <List.Item\r\n                                                        key={item.amt}\r\n                                                        className=\"pl-0 border-0 d-flex justify-content-center\"\r\n                                                    >\r\n                                                        <div className=\"d-flex align-items-center\">S$ {item.amt}</div>\r\n                                                    </List.Item>\r\n                                                )}\r\n                                            />\r\n                                        </Col>\r\n                                    </Row>\r\n                                </div>\r\n\r\n                                <Divider />\r\n                                <div className=\"mt-5 d-flex justify-content-start\" style={{ fontSize: '14px' }}>\r\n                                    <div style={{ width: '40%' }}>\r\n                                        <Divider />\r\n                                        <h5><b>Grand Energy Technologies Pte Ltd</b></h5>\r\n                                        <div style={{ color: '#72849A' }}>Officer Incharge</div>\r\n                                        <div style={{ color: '#72849A' }}>{quoteData.quotationDate}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Card>\r\n\r\n                        <div className={`d-flex justify-content-between ${classes.action}`}>\r\n                            <div>\r\n                                <Button onClick={() => { history.goBack() }}>\r\n                                    Back\r\n                                </Button>\r\n                            </div>\r\n                            <Button onClick={() => {\r\n                                console.log(\"Downloading Contract...\");\r\n                                generatePDF(targetRef, options, { filename: 'Contract.pdf' });\r\n                            }}>\r\n                                <Icon component={PdfIcon} />\r\n                                Download PDF\r\n                            </Button>\r\n                        </div></>\r\n \r\n              \r\n  \r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ViewContract;\r\n","import React from \"react\";\r\nimport { Route , Redirect , useRouteMatch } from \"react-router-dom\";\r\n\r\nimport { APP_PREFIX_PATH, AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\n\r\nimport Quotations from \"./Quotations/Quotations\";\r\nimport AddNewQuotation from \"./Quotations/AddNewQuotation\";\r\nimport SendQuotation from \"./Quotations/SendQuotation/SendQuotation\";\r\nimport RecordPayments from \"./Quotations/RecordPayments/RecordPayments\";\r\nimport Contracts from \"./Contracts/Contracts\";\r\nimport ViewContract from \"./Contracts/ViewContract/ViewContract\";\r\nimport ViewQuotation from \"./Quotations/ViewQuotation/ViewQuotation\";\r\nimport GenerateInvoice from \"./Quotations/Invoice/GenerateInvoice\";\r\nimport ViewInvoice from \"./Quotations/Invoice/ViewInvoice/ViewInvoice\";\r\nimport ContractDetails from \"./Contracts/ContractDetails/ContractDetails\";\r\nimport WorkOrder from \"./WorkdOrder/WorkOrder\";\r\nimport ContractView from \"./Contracts/ContractView\";\r\nimport ServiceInvoice from \"./ServiceTimeSheet/ServiceInvoice\";\r\n// import Invoices from \"./Invoices/Invoices\";\r\n// import SendQuotation from \"./Quotations/SendQuotation/SendQuotation\";\r\n// import SendInvoice from \"./Invoices/SendInvoice/SendInvoice\";\r\n// import CreateItemId from \"./Invoices/CreateItemId/CreateItemId\";\r\n// import ViewItems from \"./Invoices/ViewItems/ViewItems\";\r\n// import ItemDetails from \"./Invoices/ViewItems/ItemDetails/ItemDetails\";\r\n// import PhysicalAssessment from \"./Invoices/ViewItems/PhysicalAssessment/PhysicalAssessment\";\r\n\r\nconst ContractManagement = () => {\r\n\r\n  const match = useRouteMatch();\r\n  return (\r\n    <div>\r\n      <Route path={`${APP_PREFIX_PATH}/contract-management`} exact>\r\n        <Redirect to={`${match.path}/quotations`} />\r\n      </Route>\r\n      <Route path={`${match.path}/quotations`} exact>\r\n        <Quotations/>\r\n      </Route>\r\n      <Route path={`${match.path}/quotations/add-new-quotation`} exact>\r\n        <AddNewQuotation/>\r\n      </Route>\r\n      <Route path={`${match.path}/quotations/add-new-quotation/:inquiry_id`} exact>\r\n        <AddNewQuotation/>\r\n      </Route>\r\n      <Route path={`${match.path}/quotations/view-quotation/:id`} exact>\r\n        <ViewQuotation/>\r\n      </Route>\r\n\r\n      {/* <Route path={`${match.path}/quotations/record-payments`} exact> */}\r\n      <Route path={`${match.path}/quotations/record-new-payment/:quotation_id`} exact>\r\n        <RecordPayments/>\r\n      </Route>\r\n\r\n      <Route path={`${match.path}/quotations/generate-invoice/:quotation_id`} exact>\r\n        <GenerateInvoice/>\r\n      </Route>\r\n      <Route path={`${match.path}/quotations/view-invoice/:id`} exact>\r\n        <ViewInvoice/>\r\n      </Route>\r\n      <Route path={`${match.path}/quotations/edit-invoice/:id`} exact>\r\n        <GenerateInvoice/>\r\n      </Route>\r\n      {/* <Route path={`${match.path}/invoices`} exact>\r\n        <Invoices/>\r\n      </Route>\r\n      <Route path={`${match.path}/invoices/send-invoice`} exact>\r\n        <SendInvoice/>\r\n      </Route>\r\n      <Route path={`${match.path}/invoices/create-item-id`} exact>\r\n        <CreateItemId/>\r\n      </Route> */}\r\n\r\n      <Route path={`${match.path}/contracts`} exact>\r\n        <Contracts />\r\n      </Route>\r\n      <Route path={`${match.path}/work-orders/view-work-order/:id`} exact>\r\n        <ViewContract/>\r\n      </Route>\r\n      <Route path={`${match.path}/work-orders/view-service/:id`} exact>\r\n        <ServiceInvoice/>\r\n      </Route>\r\n      <Route path={`${match.path}/contracts/view-contract-details/:id`} exact>\r\n        <ContractView/>\r\n      </Route>\r\n      {/* <Route path={`${match.path}/contracts/view-contract-details/:id`} exact>\r\n        <ContractDetails/>\r\n      </Route> */}\r\n      <Route path={`${match.path}/contracts/send-invoice`} exact>\r\n        <SendQuotation/>\r\n      </Route>\r\n      <Route path={`${match.path}/work-orders`} exact>\r\n        <WorkOrder/>\r\n      </Route>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContractManagement;","import { Table } from \"antd\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Icon from \"@ant-design/icons\";\r\nimport { InvoiceIcon } from \"views/app-views/UserManagement/SvgIcons\";\r\nimport { VisibilityIcon, DeleteIcon, EditIcon } from \"assets/svg/ActionsSvg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport EllipsisDropdown from \"components/shared-components/EllipsisDropdown/index\";\r\nimport { Menu } from \"antd\";\r\nimport { Button, Modal } from \"antd\";\r\nimport moment from \"moment\";\r\n\r\nfunction InvoiceTable({ searchText, custId }) {\r\n  const [invoiceData, setInvoiceData] = useState([]);\r\n  const [openDeleteModal, setOpenDeleteModal] = useState(false);\r\n\r\n  const tok = localStorage.getItem(\"token\");\r\n\r\n  const columns = [\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"id\",\r\n    },\r\n    {\r\n      title: \"Contract ID\",\r\n      dataIndex: \"tc_contract_id\",\r\n    },\r\n    {\r\n      title: \"Jobsite Name\",\r\n      dataIndex: \"jobsite_name\",\r\n    },\r\n    {\r\n      title: \"Total Tasks\",\r\n      dataIndex: \"total_tasks\",\r\n    },\r\n    {\r\n      title: \"Net Amount (S$)\",\r\n      dataIndex: \"total\",\r\n    },\r\n    {\r\n      title: \"Paid amount (S$)\",\r\n      dataIndex: \"amount_paid\",\r\n      render: (_, record) =>{\r\n        return <div>{record.amount_paid || 0}</div>\r\n      }\r\n    },\r\n    {\r\n      title: \"Invoice Date\",\r\n      dataIndex: \"created_at\",\r\n      render: (_, record) =>{\r\n        return <div>{moment(record.created_at).format(\"DD-MM-YYYY\")}</div>\r\n      }\r\n    },\r\n    {\r\n      title: \"Status\",\r\n      dataIndex: \"status\",\r\n      render: (_,record) => {\r\n        if(record.status==='Paid' || record.status==='PAID') return <span style={{color: \"#00AB6F\", backgroundColor: \"#EDFFF9\", padding: '4px 8px', borderRadius:'6px', fontWeight:'600', fontSize: '14px'}}>Paid</span>\r\n        else if(record.status==='Overdue' || record.status==='OVERDUE') return <span style={{color: '#F53434', backgroundColor: '#FFF2F2', padding: '4px 8px', borderRadius:'6px', fontWeight:'600', fontSize: '14px'}}>Overdue</span>\r\n        else return <span style={{color: '#FFC700', backgroundColor: '#FFC7001A', padding: '4px 8px', borderRadius:'6px', fontWeight:'600', fontSize: '14px'}}>Pending</span>\r\n      }\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      // dataIndex:'Action',\r\n      render: (_, record) => {\r\n        return (\r\n          <>\r\n            <EllipsisDropdown\r\n              menu={\r\n                <Menu>\r\n                  <Menu.Item>\r\n                    <Link\r\n                      to={`/app/contract-management/quotations/view-invoice/${record.id}`}\r\n                      className=\"d-flex align-items-center\"\r\n                    >\r\n                      <Icon component={InvoiceIcon} />\r\n                      View Invoice\r\n                    </Link>\r\n                  </Menu.Item>\r\n                  <Menu.Item>\r\n                    <Link\r\n                      to={`/app/contract-management/quotations/edit-invoice/${record.id}`}\r\n                      className=\"d-flex align-items-center\"\r\n                    >\r\n                      <Icon className=\"mr-2\" component={EditIcon} />\r\n                      Edit\r\n                    </Link>\r\n                  </Menu.Item>\r\n                  <Menu.Item\r\n                    onClick={() => {\r\n                      ShowDeleteModal();\r\n                    }}\r\n                  >\r\n                    <span className=\"d-flex align-items-center\">\r\n                      <Icon className=\"mr-2\" component={DeleteIcon} />\r\n                      Delete\r\n                    </span>\r\n                  </Menu.Item>\r\n\r\n                  <Modal\r\n                    visible={openDeleteModal}\r\n                    // onOk={handleOk}\r\n                    // onCancel={handleCancel}\r\n                    centered\r\n                    footer={[\r\n                      <Button\r\n                        style={{ color: \"#000B23\" }}\r\n                        onClick={handleCancel}\r\n                        className=\"font-weight-bold\"\r\n                      >\r\n                        No, Cancel\r\n                      </Button>,\r\n                      <Button\r\n                        type=\"primary\"\r\n                        className=\"font-weight-bold\"\r\n                        onClick={()=>handleOk(record.id)}\r\n                      >\r\n                        Yes, Confirm\r\n                      </Button>,\r\n                    ]}\r\n                  >\r\n                    <div\r\n                      style={{ color: \"#000B23\" }}\r\n                      className=\"font-weight-bolder font-size-md\"\r\n                    >\r\n                      Are Sure you want to delete this invoice?\r\n                    </div>\r\n                  </Modal>\r\n                </Menu>\r\n              }\r\n            />\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const handleCancel = () => {\r\n    setOpenDeleteModal(false);\r\n  };\r\n\r\n  const handleOk = (id) => {\r\n    deleteInvoice(id);\r\n    setOpenDeleteModal(false);\r\n  };\r\n\r\n  const ShowDeleteModal = () => {\r\n    setOpenDeleteModal(true);\r\n  };\r\n\r\n  const deleteInvoice = (id) => {\r\n    console.log(\"Invoice deleted\", id);\r\n    axios({\r\n      method: \"post\",\r\n      url: \"/api/tc/delete-invoice\",\r\n      data: { id: id },\r\n      headers: {\r\n        // \"Content-Type\": \"multipart/form-data; boundary=-- --WebKitFormBoundary7MA4YWxkTrZu0gW\",\r\n        Authorization: `Bearer ${tok}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setInvoiceData(\r\n          invoiceData.filter((elem) => {\r\n            return elem.id !== id;\r\n          })\r\n        );\r\n      })\r\n      .then((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const data = { customer_id: custId };\r\n    axios({\r\n      method: \"post\",\r\n      url: \"/api/tc/get-invoices\",\r\n      data: data\r\n    })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        if (response.data.success) {\r\n          setInvoiceData(\r\n            response.data.data.data.map((elem, ind) => {\r\n              return {\r\n                ...elem,\r\n                index: ind + 1,\r\n              };\r\n            })\r\n          );\r\n        } else {\r\n          console.log(response);\r\n        }\r\n      })\r\n      .then((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const data = { \r\n      customer_id: custId,\r\n      search: searchText\r\n     };\r\n    axios({\r\n      method: \"post\",\r\n      url: \"/api/tc/get-invoices\",\r\n      data: data\r\n    })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        if (response.data.success) {\r\n          setInvoiceData(\r\n            response.data.data.data.map((elem, ind) => {\r\n              return {\r\n                ...elem,\r\n                index: ind + 1,\r\n              };\r\n            })\r\n          );\r\n        } else {\r\n          console.log(response);\r\n        }\r\n      })\r\n      .then((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [searchText]);\r\n\r\n  return (\r\n    <div>\r\n      <Table\r\n        // scroll={{ x: 1300 }}\r\n        columns={columns}\r\n        dataSource={invoiceData}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InvoiceTable;\r\n","import { Table } from 'antd'\r\nimport React, { useState, useEffect } from 'react'\r\nimport Icon from \"@ant-design/icons\";\r\nimport { InvoiceIcon } from 'views/app-views/UserManagement/SvgIcons';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios'\r\nimport moment from 'moment'\r\n\r\n\r\n\r\nlet data = []\r\n\r\nfunction Payments({searchText, custId}) {\r\n\r\n    const [paymentsData, setPaymentsData] = useState(data)\r\n\r\n    const columns=[\r\n        {\r\n            title:'ID',\r\n            dataIndex:'id',\r\n        },\r\n        {\r\n            title:'Contract ID',\r\n            dataIndex:'id',\r\n        },\r\n        {\r\n            title:'Jobsite Name',\r\n            dataIndex:'jobSite',\r\n        },\r\n        {\r\n            title:'Total Tasks',\r\n            dataIndex:'tasks',\r\n        },\r\n        {\r\n            title:'Net Amount(S$)',\r\n            dataIndex:'netAmount',\r\n        },\r\n        {\r\n            title:'Paid Amount(S$)',\r\n            dataIndex:'paid',\r\n            render: (_, record) =>{\r\n                return <div>{record.amount_paid || 0}</div>\r\n              }\r\n        },\r\n        {\r\n            title:'Payment Date',\r\n            dataIndex:'created_at',\r\n            render: (_, record) =>{\r\n                return <div>{moment(record.created_at).format(\"DD-MM-YYYY\")}</div>\r\n            }\r\n        },\r\n        {\r\n            title:'Status',\r\n            dataIndex:'status',\r\n            render: (_,record) => {\r\n                if(record.status==='Paid' || record.status==='PAID') return <span style={{color: \"#00AB6F\", backgroundColor: \"#EDFFF9\", padding: '4px 8px', borderRadius:'6px', fontWeight:'600', fontSize: '14px'}}>Paid</span>\r\n                else if(record.status==='Overdue' || record.status==='OVERDUE') return <span style={{color: '#F53434', backgroundColor: '#FFF2F2', padding: '4px 8px', borderRadius:'6px', fontWeight:'600', fontSize: '14px'}}>Overdue</span>\r\n                else return <span style={{color: '#FFC700', backgroundColor: '#FFC7001A', padding: '4px 8px', borderRadius:'6px', fontWeight:'600', fontSize: '14px'}}>Pending</span>\r\n              }\r\n        },\r\n        // {\r\n        //     title:'Action',\r\n        //     render : (_,record) =>{\r\n        //         return <Link to='/app/customer-management/customer-accounts/customer-details/123/invoice'>\r\n        //                     <Icon component={InvoiceIcon}/>\r\n        //                 </Link>\r\n        //     } \r\n        // },\r\n    ]\r\n\r\n    useEffect(() => {\r\n        const data = { customer_id: custId };\r\n        axios({\r\n          method: \"post\",\r\n          url: \"/api/tc/get-payment\",\r\n          data: data\r\n        })\r\n          .then((response) => {\r\n            console.log(response.data);\r\n            if (response.data.success) {\r\n              setPaymentsData(\r\n                response.data.data.data.map((elem, ind) => {\r\n                  return {\r\n                    ...elem,\r\n                    index: ind + 1,\r\n                  };\r\n                })\r\n              );\r\n            } else {\r\n              console.log(response);\r\n            }\r\n          })\r\n          .then((err) => {\r\n            console.log(err);\r\n          });\r\n      }, []);\r\n\r\n    useEffect(() => {\r\n        const data = { \r\n            customer_id: custId,\r\n            search: searchText\r\n         };\r\n        axios({\r\n          method: \"post\",\r\n          url: \"/api/tc/get-payment\",\r\n          data: data\r\n        })\r\n          .then((response) => {\r\n            console.log(response.data);\r\n            if (response.data.success) {\r\n              setPaymentsData(\r\n                response.data.data.data.map((elem, ind) => {\r\n                  return {\r\n                    ...elem,\r\n                    index: ind + 1,\r\n                  };\r\n                })\r\n              );\r\n            } else {\r\n              console.log(response);\r\n            }\r\n          })\r\n          .then((err) => {\r\n            console.log(err);\r\n          });\r\n      }, [searchText]);\r\n\r\n    return (\r\n    <div>\r\n        <Table\r\n        // scroll={\r\n        //     {x:1300}\r\n        // }\r\n        columns={columns} dataSource={paymentsData} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Payments","export const CrossIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<g clip-path=\"url(#clip0_215_9541)\">\r\n<path d=\"M18.2995 5.70948C17.9095 5.31948 17.2795 5.31948 16.8895 5.70948L11.9995 10.5895L7.10948 5.69948C6.71948 5.30948 6.08948 5.30948 5.69948 5.69948C5.30948 6.08948 5.30948 6.71948 5.69948 7.10948L10.5895 11.9995L5.69948 16.8895C5.30948 17.2795 5.30948 17.9095 5.69948 18.2995C6.08948 18.6895 6.71948 18.6895 7.10948 18.2995L11.9995 13.4095L16.8895 18.2995C17.2795 18.6895 17.9095 18.6895 18.2995 18.2995C18.6895 17.9095 18.6895 17.2795 18.2995 16.8895L13.4095 11.9995L18.2995 7.10948C18.6795 6.72948 18.6795 6.08948 18.2995 5.70948Z\" fill=\"#455560\"/>\r\n</g>\r\n<defs>\r\n<clipPath id=\"clip0_215_9541\">\r\n<rect width=\"24\" height=\"24\" fill=\"white\"/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n\r\n)\r\n\r\nexport const ChangeAssigneeIcon = () => (\r\n  <svg width=\"20\" height=\"18\" viewBox=\"0 0 20 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<path d=\"M8 8C10.21 8 12 6.21 12 4C12 1.79 10.21 0 8 0C5.79 0 4 1.79 4 4C4 6.21 5.79 8 8 8ZM8 2C9.1 2 10 2.9 10 4C10 5.1 9.1 6 8 6C6.9 6 6 5.1 6 4C6 2.9 6.9 2 8 2Z\" fill=\"#455560\"/>\r\n<path d=\"M2 14C2.22 13.28 5.31 12 8 12C8 11.3 8.13 10.63 8.35 10.01C5.62 9.91002 0 11.27 0 14V16H9.54C9.02 15.42 8.61 14.75 8.35 14H2Z\" fill=\"#455560\"/>\r\n<path d=\"M17.43 14.02C17.79 13.43 18 12.74 18 12C18 9.79 16.21 8 14 8C11.79 8 10 9.79 10 12C10 14.21 11.79 16 14 16C14.74 16 15.43 15.78 16.02 15.43C16.95 16.36 17.64 17.05 18.59 18L20 16.59C18.5 15.09 19.21 15.79 17.43 14.02ZM14 14C12.9 14 12 13.1 12 12C12 10.9 12.9 10 14 10C15.1 10 16 10.9 16 12C16 13.1 15.1 14 14 14Z\" fill=\"#455560\"/>\r\n</svg>\r\n\r\n)\r\n\r\nexport const ReportEnquiryIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<g clip-path=\"url(#clip0_215_9556)\">\r\n<path d=\"M12.36 6L12.76 8H18V14H14.64L14.24 12H7V6H12.36ZM14 4H5V21H7V14H12.6L13 16H20V6H14.4L14 4Z\" fill=\"#455560\"/>\r\n</g>\r\n<defs>\r\n<clipPath id=\"clip0_215_9556\">\r\n<rect width=\"24\" height=\"24\" fill=\"white\"/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n\r\n)\r\nexport const CreateQuotationIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n  <g clip-path=\"url(#clip0_886_13832)\">\r\n  <path d=\"M14 2H6C4.9 2 4 2.9 4 4V20C4 21.1 4.9 22 6 22H18C19.1 22 20 21.1 20 20V8L14 2ZM6 20V4H13V8H18V20H6ZM11 19H13V18H14C14.55 18 15 17.55 15 17V14C15 13.45 14.55 13 14 13H11V12H15V10H13V9H11V10H10C9.45 10 9 10.45 9 11V14C9 14.55 9.45 15 10 15H13V16H9V18H11V19Z\" fill=\"#475569\"/>\r\n  </g>\r\n  <defs>\r\n  <clipPath id=\"clip0_886_13832\">\r\n  <rect width=\"24\" height=\"24\" fill=\"white\"/>\r\n  </clipPath>\r\n  </defs>\r\n  </svg>\r\n)\r\nexport const InquiryStatusIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n  <g clipPath=\"url(#clip0_886_13838)\">\r\n  <path d=\"M11 12C13.21 12 15 10.21 15 8C15 5.79 13.21 4 11 4C8.79 4 7 5.79 7 8C7 10.21 8.79 12 11 12ZM11 6C12.1 6 13 6.9 13 8C13 9.1 12.1 10 11 10C9.9 10 9 9.1 9 8C9 6.9 9.9 6 11 6ZM5 18C5.2 17.37 7.57 16.32 9.96 16.06L12 14.06C11.61 14.02 11.32 14 11 14C8.33 14 3 15.34 3 18V20H12L10 18H5ZM20.6 12.5L15.47 17.67L13.4 15.59L12 17L15.47 20.5L22 13.91L20.6 12.5Z\" fill=\"#475569\"/>\r\n  </g>\r\n  <defs>\r\n  <clipPath id=\"clip0_886_13838\">\r\n  <rect width=\"24\" height=\"24\" fill=\"white\"/>\r\n  </clipPath>\r\n  </defs>\r\n  </svg>\r\n)"],"names":["formats","modules","toolbar","font","header","color","background","script","list","indent","content","Menu","Typography","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","InternalTimePicker","DatePicker","InternalRangePicker","RangePicker","React","props","ref","_extends","dropdownClassName","popupClassName","picker","mode","undefined","TimePicker","_a","addon","renderExtraFooter","restProps","internalRenderExtraFooter","devWarning","displayName","ViewDetailsIcon","_jsxs","width","height","viewBox","fill","xmlns","children","_jsx","clipPath","d","id","SendQuotationIcon","Input","_ref","setOpenContractModal","quotationData","setQuoteData","quoteData","setOpenStatusModal","getQuotations","history","useHistory","match","useRouteMatch","_Fragment","EllipsisDropdown","menu","onClick","push","concat","path","className","Icon","component","_objectSpread","quotation_id","customer_id","customer_job_site_id","jobsite_id","disabled","status","TextArea","setsetPage","statuses","searchText","selectedFilter","selectedCustomerFilter","selectedJobsiteFilter","selectedStatusFilter","_useState","useState","_useState2","_slicedToArray","quotationsData","setQuotationsData","_useState3","_useState4","setJobSiteData","localStorage","getItem","_useState5","_useState6","openContractModal","_useState7","_useState8","_useState9","_useState10","commencementDate","setCommencementDate","_useState11","_useState12","setExpiryDate","_useState13","_useState14","remindersData","setRemindersData","_useState15","_useState16","contractType","setContractType","_useState17","_useState18","openStatusModal","_useState19","_useState20","setStatus","_useState21","_useState22","remark","setRemark","columns","title","dataIndex","render","_","record","jobsite","style","backgroundColor","padding","borderRadius","fontWeight","fontSize","key","Actions","updateQuotationStatus","console","log","axios","tc_customer_id","then","response","res","data","catch","error","page_index","page_size","search","fdata","map","elem","ind","tc_customer_job_site_id","customerName","customer_name","jobsite_name","inquiryDate","inquiry_date","moment","format","quotationDate","task_period_from_date","amount","total","task_period_to_date","due_date","sub_total","tax","gst","discount","tc_quotation_file","quotation_remarks","line_items","useEffect","_defineProperty","job_site_id","job_site_name","method","url","success","err","Table","dataSource","scroll","x","Modal","visible","centered","maskClosable","onCancel","footer","Button","type","Radio","size","onChange","target","value","defaultValue","defaultChecked","rows","tc_quotation_id","start_date","reminders","message","date","Select","showSearch","placeholder","event","setShowExportOption","setSelectedCustomerFilter","setSelectedJobsiteFilter","setSelectedStatusFilter","setSelectedFilter","setSearchText","allJobsites","setAllJobsites","allCustomers","setAllCustomers","drawerIsOpen","setDrawerIsOpen","allQuotationsData","setAllQuotationsData","exportHandler","prev","index","sr_no","PageHeading","SearchBox","prevState","FilterIcon","CSVLink","headers","label","filename","src","exportIcon","alt","Link","to","QuotationTable","Drawer","placement","onClose","open","closable","previousState","val","name","Dragger","Upload","form","customers","jobsData","setJobsData","setJobFile","jobFile","removeJob","jobs","filter","setValue","paymentTerm","selectedJobsite","setSelectedJobsite","uploadedFile","setUploadedFile","tok","description","provisionalQty","unitPrice","setDescription","quantity","setQuantity","setUnitPrice","openUploadPdfModal","setOpenUploadPdfModal","openJobModal","setOpenJobModal","handleCancel","filelist","image_props","multiple","action","Authorization","info","file","fileList","onDrop","dataTransfer","files","getJobSites","currPage","getFieldValue","setFieldsValue","Card","Row","align","Col","span","Form","rules","required","company","gutter","optionFilterProp","filterOption","input","option","_toString$toLowerCase","_option$title","toString","toLowerCase","includes","filterSort","optionA","optionB","_optionA$label","_optionB$label","localeCompare","margin","ReactQuill","paddingBottom","theme","InboxOutlined","_toConsumableArray","price","InputNumber","min","submitTick","_Form$useForm","useParams","inquiry_id","gstData","setGstData","customerAccountData","setCustomerAccountData","showModal","setShowModal","saveQuotaionModal","QuotationModal","getSubTotalAmount","getTotalAmount","gst_percentage","phoneNumber","phone","emailId","email","srNo","percentage","created_at","updated_at","labelCol","wrapperCol","layout","onFinish","add","validity","payment_term","remarks","goBack","msg","Form1","resetFields","htmlType","Title","Text","dataItems","image","HandBagImg","SneakersImg","dataServices","dataQty","dataPrice","dataTotal","dataGrandTotal","text","amt","tag","SendQuotationModal","svg","ItemsAndServicesPageIcon","classes","logo","strong","level","List","renderItem","item","Divider","Tag","PdfIcon","invoice_id","param","savePaymentModal","SaveRecordPaymentsModal","payment_method","PaymentRecordForm","contract_id","getData","updateStatus","setPage","selectedTypeFilter","contractsData","setContractsData","expiryDate","direct_to_pc","setDirect_to_pc","co_regn_no","setCo_regn_no","contract_number","setContract_number","useLocation","wbs_element","setWbs_element","network_activity","setNetwork_activity","_useState23","_useState24","officer_in_charge","setOfficer_in_charge","_useState25","_useState26","_useState27","_useState28","_useState29","_useState30","_useState31","_useState32","_useState33","_useState34","_useState35","_useState36","allUsers","setAllUsers","columns2","_useState37","_useState38","statusStyles","isBeforeToday","isBefore","startOf","contract_type","_objectSpread2","commence_on","expire_on","end_date","_objectSpread3","_objectSpread4","reminderColumns","findIndex","time","use12Hours","newRemindersData","removeReminder","JSON","parse","_axios$post4","tc_contract_id","statusFilter","allContractsData","setAllContractsData","setSelectedTypeFilter","getStatus","ContractTable","reminder","contractData","display","justifyContent","alignItems","marginTop","workOrderId","target_completion_date","actual_completion_date","work_order_id","allServiceEntryData","setAllServiceEntryData","Date","options","page","Margin","targetRef","useRef","setReminder","customerId","profile_pic","contact_name","office_contact_number","uen_number","postal_code","block_number","level_number","unit_number","street_number","country","created_by","other_details","customerData","setCustomerData","lineItem","setLineItem","rawContractData","setRawContractData","setContractData","grandTotal","setGrandTotal","setDataGrandTotal","getQuotationData","q_id","getCustomerData","cust_id","_res","_res2","_res3","_res4","_res5","_res6","_res7","_res8","_res9","_res10","_res11","_res12","officer_in_charge_name","reduce","acc","gst_amount","total_amount","toFixed","Tabs","tab","generatePDF","Reminder","Service","contactData","setContactData","subtotal_amount","mobile","tel","address","window","jobFileUrl","allContracts","setAllContracts","getAllJobSites","getFieldsValue","_toString$toLowerCase2","_option$title2","_optionA$label2","_optionB$label2","href","invoiceData","setInvoiceData","setQuotationData","isEdit","setIsEdit","getContractDetails","invoice_due_date","getQuotationDetails","quotation_file","tc_invoice_file","invoice_remarks","FormInvoice","getContractData","discount_percentage","discount_amount","_setInvoiceData","CreateContractIcon","gl_number","setGl_number","project_number","setProject_number","_objectSpread5","_objectSpread7","_axios$post","location","reload","_ref2","textAlign","tabs","currActiveKey","setCurrActiveKey","BasicDetails","WorkOrder","plusIcon","UserManagementIcon","activeKey","Route","APP_PREFIX_PATH","exact","Redirect","Quotations","AddNewQuotation","ViewQuotation","RecordPayments","GenerateInvoice","ViewInvoice","Contracts","ViewContract","ServiceInvoice","ContractView","SendQuotation","custId","openDeleteModal","setOpenDeleteModal","amount_paid","InvoiceIcon","EditIcon","ShowDeleteModal","DeleteIcon","handleOk","deleteInvoice","paymentsData","setPaymentsData","ChangeAssigneeIcon","InquiryStatusIcon"],"sourceRoot":""}