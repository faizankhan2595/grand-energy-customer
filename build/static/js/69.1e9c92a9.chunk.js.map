{"version":3,"file":"static/js/69.1e9c92a9.chunk.js","mappings":"6KAoCaA,EAAsB,WAAH,OAC9BC,EAAAA,EAAAA,MAAA,OAAKC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,MAAM,6BAA4BC,SAAA,EAC9FC,EAAAA,EAAAA,KAAA,KAAG,YAAU,wBAAuBD,UACpCC,EAAAA,EAAAA,KAAA,QAAMC,EAAE,kQAAkQJ,KAAK,eAE/QG,EAAAA,EAAAA,KAAA,QAAAD,UACAC,EAAAA,EAAAA,KAAA,YAAUE,GAAG,kBAAiBH,UAC9BC,EAAAA,EAAAA,KAAA,QAAMN,MAAM,KAAKC,OAAO,KAAKE,KAAK,gBAG5B,EAEKM,EAAoB,WAAH,OAC5BV,EAAAA,EAAAA,MAAA,OAAKC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,MAAM,6BAA4BC,SAAA,EAC9FC,EAAAA,EAAAA,KAAA,KAAG,YAAU,wBAAuBD,UACpCC,EAAAA,EAAAA,KAAA,QAAMC,EAAE,iWAAiWJ,KAAK,eAE9WG,EAAAA,EAAAA,KAAA,QAAAD,UACAC,EAAAA,EAAAA,KAAA,YAAUE,GAAG,kBAAiBH,UAC9BC,EAAAA,EAAAA,KAAA,QAAMN,MAAM,KAAKC,OAAO,KAAKE,KAAK,gBAG5B,C,yPCtDFO,GACJJ,EAAAA,EAAAA,KAACK,EAAAA,EAAI,CACHC,MAAO,CACL,CACEC,OAAOP,EAAAA,EAAAA,KAAA,KAAAD,SAAG,aACVS,IAAK,KAEP,CACED,OAAOP,EAAAA,EAAAA,KAAA,KAAGS,KAAK,yBAAwBV,SAAC,kBACxCS,IAAK,KAEP,CACEE,KAAM,WAER,CACEH,MAAO,gBACPC,IAAK,QAYb,EANuB,WACrB,OACER,EAAAA,EAAAA,KAACW,EAAAA,EAAc,CAACC,KAAK,SAASR,KAAMA,GAExC,E,WCxBOS,EAASC,EAAAA,EAAAA,MAyBhB,EAvBe,SAACC,GACd,IAAOC,EAAWD,EAAXC,QACP,OACEvB,EAAAA,EAAAA,MAAA,OAAKwB,UAAU,kBAAiBlB,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,OAAKiB,UAAU,aAAYlB,UACzBC,EAAAA,EAAAA,KAACkB,EAAAA,EAAM,CAACC,QAASH,EAAQjB,SAAC,aAE5BN,EAAAA,EAAAA,MAAA,OAAKwB,UAAU,OAAMlB,SAAA,EACnBC,EAAAA,EAAAA,KAAA,OAAKoB,IAAKC,EAAAA,EAAYC,IAAI,gBAC1BtB,EAAAA,EAAAA,KAACa,EAAK,CAAAd,SAAC,6BAETN,EAAAA,EAAAA,MAAA,OAAKwB,UAAU,iBAAgBlB,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,uBACHC,EAAAA,EAAAA,KAACuB,EAAc,QAEjB9B,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACEC,EAAAA,EAAAA,KAACkB,EAAAA,EAAM,CAACD,UAAU,WAAWP,KAAK,UAASX,SAAC,kBAC5CC,EAAAA,EAAAA,KAACkB,EAAAA,EAAM,CAACD,UAAU,MAAME,QAASH,EAAQjB,SAAC,oBAIlD,E,mGC4BA,GAtCwBe,EAAAA,EAAAA,MAAAA,EAAAA,EAAAA,KAER,SAAHU,GAAmBA,EAAdC,eAAgD,IAAjCC,EAAeF,EAAfE,gBAAgBC,EAAUH,EAAVG,WACzCC,GAAUC,EAAAA,EAAAA,OACFC,EAAAA,EAAAA,MAUd,OACE9B,EAAAA,EAAAA,KAAA+B,EAAAA,SAAA,CAAAhC,UACEC,EAAAA,EAAAA,KAACgC,EAAAA,EAAgB,CACf5B,MACEX,EAAAA,EAAAA,MAACY,EAAAA,EAAI,CAAAN,SAAA,EACHC,EAAAA,EAAAA,KAACK,EAAAA,EAAAA,KAAS,CAACc,QATU,WAC7BS,EAAQK,KAAK,yDAADC,OAA0DP,GACxE,EAOqD5B,UACzCN,EAAAA,EAAAA,MAAA,QAAMwB,UAAU,4BAA2BlB,SAAA,EACzCC,EAAAA,EAAAA,KAACmC,EAAAA,EAAI,CAAClB,UAAU,OAAOmB,UAAW5C,EAAAA,KAAwB,yBAI9DQ,EAAAA,EAAAA,KAACK,EAAAA,EAAAA,KAAS,CAAEc,QAnBO,WAC3BO,GAAgB,SAACW,GAAI,OAAMA,CAAI,GACjC,EAiBoDtC,UACxCN,EAAAA,EAAAA,MAAA,QAAMwB,UAAU,4BAA2BlB,SAAA,EACzCC,EAAAA,EAAAA,KAACmC,EAAAA,EAAI,CAAClB,UAAU,OAAOmB,UAAWjC,EAAAA,KAAsB,4BASxE,G,+BC9CQmC,EAAaC,EAAAA,EAAAA,SA0MrB,EAzLyB,SAAHf,GAAgI,IAA3HgB,EAAYhB,EAAZgB,aAAcC,EAAejB,EAAfiB,gBAA0BC,GAAFlB,EAAPmB,QAAmBnB,EAAVkB,YAAYE,EAAcpB,EAAdoB,eAAgBC,EAAyBrB,EAAzBqB,0BAA2BC,EAAoBtB,EAApBsB,qBAExHC,GAAsCC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CI,EAAWF,EAAA,GAAExB,EAAcwB,EAAA,GAClCG,GAA8CJ,EAAAA,EAAAA,WAAS,GAAMK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAtD1B,EAAe2B,EAAA,GAAEC,EAAkBD,EAAA,GAC1CE,GAA4BP,EAAAA,EAAAA,UAAS,QAAOQ,GAAAN,EAAAA,EAAAA,GAAAK,EAAA,GAArCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAA4BX,EAAAA,EAAAA,WAAS,GAAMY,GAAAV,EAAAA,EAAAA,GAAAS,EAAA,GAApCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAClBG,EAAU,CACd,CACEC,MAAO,aACPC,UAAW,MAEb,CACED,MAAO,gBACPC,UAAW,iBAIb,CACED,MAAO,WACPC,UAAW,SAKb,CACED,MAAO,gBACPC,UAAW,UAIb,CACED,MAAO,eACPC,UAAW,iBAeb,CACED,MAAO,SACPC,UAAW,SACXC,OAAQ,SAACT,GACP,OACEzD,EAAAA,EAAAA,KAAA,QAAAD,UACEC,EAAAA,EAAAA,KAACmE,EAAAA,EAAG,CAACC,MAAM,QAAOrE,SACf0D,GADqBA,IAK9B,GAEF,CACEO,MAAM,SACNC,UAAW,SACXC,OAAQ,SAACG,EAAEC,GACT,OACEtE,EAAAA,EAAAA,KAACuE,EAAO,CAAC9C,eAAgBA,EAAgB0B,YAAamB,EAAQ5C,gBAAiBA,EAAiBC,WAAY2C,EAAOpE,IAEvH,KAmCJsE,EAAAA,EAAAA,YAAU,WACRC,GACF,GAAG,CAAC/B,KAEJ8B,EAAAA,EAAAA,YAAU,WACRC,GACF,GAAG,CAAC7B,IAGJ,IAAM6B,EAAU,WACdC,EAAAA,EAAAA,KAEI,wBACA,CACEC,WAAY,EACZC,UAAW,GACXC,SAAU,KACVC,OAAQpC,GAA0B,KAClCqC,aAAclC,GAA6B,KAC3CY,OAAQX,GAAwB,OAGnCkC,MAAK,SAACC,GACL,IAGIC,EAHMD,EAASE,KAAKA,KAAKA,KAGbC,KAAI,SAACC,EAAMC,GACzB,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKF,GAAI,IACPG,MAAOF,EAAI,EACX9E,IAAK6E,EAAKnF,GACVA,GAAImF,EAAKnF,GACTuF,cAAeJ,EAAKI,eAAiBJ,EAAKK,eAC1CC,MAAON,EAAKM,OAAS,IACrBC,OAAQP,EAAKO,QAAU,IACvBC,cAAeC,IAAOT,EAAKU,YAAYC,OAAO,cAC9CvC,OAAQ4B,EAAK5B,QAEjB,IACAhB,EAAgByC,EAClB,IACCe,OAAM,SAACC,GACNC,QAAQC,IAAIF,EACd,GACJ,EAGA,OACEzG,EAAAA,EAAAA,MAAA,OAAKwB,UAAU,OAAMlB,SAAA,EAEnBC,EAAAA,EAAAA,KAACqG,EAAAA,EAAK,CAACtC,QAASA,EAASuC,WAAY9D,EAAcvB,UAAU,WAE7DxB,EAAAA,EAAAA,MAAC8G,EAAAA,EAAK,CACJC,QAAS9E,EACT+E,UAAQ,EACRC,cAAY,EACZC,SAAU,WAAOrD,GAAmB,EAAO,EAC3CU,MAAO,iBACP4C,OAAQ,EACJ5G,EAAAA,EAAAA,KAACkB,EAAAA,EAAM,CAAgB2F,MAAO,CAAEzC,MAAO,WAAa1D,KAAK,UAAUO,UAAU,mBAAmBE,QAxFnF,WACrBgF,QAAQC,IAAIjD,GACZuB,EAAAA,EAAAA,KAEE,0BAAwBa,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAEnBpC,GAAW,IACdjD,GAAIiD,EAAYjD,GAChBwF,eAAgBvC,EAAY2D,YAC5BrD,OAAQA,KAGXuB,MAAK,SAACC,GACL,IAAI8B,EAAM9B,EAASE,KACnBgB,QAAQC,IAAIW,GACZzD,GAAmB,GACnBmB,GACF,IACCwB,OAAM,SAACC,GACNC,QAAQC,IAAIF,EACd,GAEF,EAkEkInG,SAAC,QAA5G,WACbC,EAAAA,EAAAA,KAACkB,EAAAA,EAAM,CAAgB2F,MAAO,CAAEzC,MAAO,WAAajD,QAlEnC,WACvBuC,EAAU,IACVI,EAAU,IACVR,GAAmB,EACvB,EA8D2FrC,UAAU,mBAAkBlB,SAAC,UAAjG,WACfA,SAAA,EAEFC,EAAAA,EAAAA,KAAA,OAAAD,UACIN,EAAAA,EAAAA,MAACuH,EAAAA,GAAAA,MAAW,CACRC,KAAK,QACLC,SAAU,SAACC,GAAC,OAAKzD,EAAUyD,EAAEC,OAAOC,MAAM,EAC1CC,aAAc,OAAOvH,SAAA,EAErBC,EAAAA,EAAAA,KAACgH,EAAAA,GAAK,CAACK,MAAM,OAAOE,gBAAc,EAAAxH,SAAC,YACnCC,EAAAA,EAAAA,KAACgH,EAAAA,GAAK,CAACK,MAAM,QAAOtH,SAAC,iBAI7BN,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIiB,UAAU,YAAWlB,SAAC,aAC1BC,EAAAA,EAAAA,KAACsC,EAAQ,CAACkF,KAAM,EAAGN,SAAU,SAACC,GAAC,OAAKrD,EAAUqD,EAAEC,OAAOC,MAAM,EAAEA,MAAOxD,YAKlF,E,iCCDA,EA7LoB,WAElB,IAAAd,GAAgDC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAxD0E,EAAgBxE,EAAA,GAAEyE,EAAmBzE,EAAA,GAC5CG,GAAoCJ,EAAAA,EAAAA,UAAS,IAAGK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAA7BuE,GAAFtE,EAAA,GAAeA,EAAA,IAChCE,GAAwCP,EAAAA,EAAAA,WAAS,GAAMQ,GAAAN,EAAAA,EAAAA,GAAAK,EAAA,GAAhDqE,EAAYpE,EAAA,GAAEqE,EAAerE,EAAA,GACpCG,GAA6DX,EAAAA,EAAAA,WAAS,GAAMY,GAAAV,EAAAA,EAAAA,GAAAS,EAAA,GAC5EmE,GAD6BlE,EAAA,GAA4BA,EAAA,IACUZ,EAAAA,EAAAA,WAAS,IAAM+E,GAAA7E,EAAAA,EAAAA,GAAA4E,EAAA,GAA3EjF,EAAyBkF,EAAA,GAAGC,EAA4BD,EAAA,GAC/DE,GAAyDjF,EAAAA,EAAAA,WAAS,GAAMkF,GAAAhF,EAAAA,EAAAA,GAAA+E,EAAA,GAAjEnF,EAAoBoF,EAAA,GAAGC,EAAuBD,EAAA,GACrDE,GAA6CpF,EAAAA,EAAAA,WAAS,GAAMqF,GAAAnF,EAAAA,EAAAA,GAAAkF,EAAA,GAArDxF,EAAcyF,EAAA,GAAGC,EAAiBD,EAAA,GACzCE,GAAuCvF,EAAAA,EAAAA,WAAS,GAAMwF,GAAAtF,EAAAA,EAAAA,GAAAqF,EAAA,GACtDE,GADkBD,EAAA,GAAiBA,EAAA,IACMxF,EAAAA,EAAAA,WAAS,IAAM0F,GAAAxF,EAAAA,EAAAA,GAAAuF,EAAA,GAClD3B,GADa4B,EAAA,GAAkBA,EAAA,GACjBC,aAAaC,QAAQ,gBAEzCC,GAAyC7F,EAAAA,EAAAA,UAAS,IAAG8F,GAAA5F,EAAAA,EAAAA,GAAA2F,EAAA,GAA9CrG,EAAYsG,EAAA,GAAGrG,EAAeqG,EAAA,GAa/BC,EAAgB,WACpBrB,GAAoB,SAACrF,GAAI,OAAMA,CAAI,GACrC,EAEM2G,IACJhJ,EAAAA,EAAAA,KAACuG,EAAAA,EAAK,CAAC0C,QAASF,EAAchJ,UAC5BC,EAAAA,EAAAA,KAACkJ,EAAM,CAAClI,QAAS+H,MAmErB,OANAvE,EAAAA,EAAAA,YAAU,WAlCRE,EAAAA,EAAAA,KAEE,wBACA,CACEC,WAAY,EACZC,UAAW,IACXE,OAAS,KACTgC,YAAaA,IAGhB9B,MAAK,SAACC,GACL,IAEIC,EAFMD,EAASE,KAAKA,KAAKA,KAEbC,KAAI,SAACC,EAAM8D,GACzB,OAAA5D,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKF,GAAI,IACLG,MAAO2D,EAAM,EACb3I,IAAK6E,EAAKnF,GACVA,GAAImF,EAAKnF,GACTuF,cAAeJ,EAAKI,eAAiBJ,EAAKK,eAC1CC,MAAON,EAAKM,OAAS,IACrBC,OAAQP,EAAKO,QAAU,IACvBC,cAAeC,IAAOT,EAAKU,YAAYC,OAAO,cAC9CvC,OAAQ4B,EAAK5B,QAEnB,IAEAhB,EAAgByC,EAClB,IACCe,OAAM,SAACC,GACNC,QAAQC,IAAIF,EACd,GAKF,GAAG,KAKDzG,EAAAA,EAAAA,MAAAsC,EAAAA,SAAA,CAAAhC,SAAA,CACG0H,GAAoBuB,IACrBvJ,EAAAA,EAAAA,MAAA,OAAKwB,UAAU,oDAAmDlB,SAAA,EAChEC,EAAAA,EAAAA,KAACoJ,EAAAA,EAEC,CACApF,MAAM,kBAERvE,EAAAA,EAAAA,MAAA,OAAKwB,UAAU,iDAAgDlB,SAAA,EAC7DC,EAAAA,EAAAA,KAACqJ,EAAAA,EAAS,CAAC1B,cAAeA,KAE1BlI,EAAAA,EAAAA,MAACyB,EAAAA,EAAM,CAACD,UAAU,iCAAiCE,QA3ErC,WACpB0G,GAAgB,SAACyB,GAAS,OAAMA,CAAS,GAC3C,EAyEkFvJ,SAAA,EACxEC,EAAAA,EAAAA,KAACmC,EAAAA,EAAI,CAAClB,UAAU,OAAOmB,UAAWmH,EAAAA,KAAc,cAIlDvJ,EAAAA,EAAAA,KAACwJ,EAAAA,QAAO,CAACrE,KAAM3C,EACXiH,QAvGI,CACd,CAAElJ,MAAO,SAAUC,IAAK,SACxB,CAAED,MAAO,aAAcC,IAAK,MAC5B,CAAED,MAAO,gBAAiBC,IAAK,iBAC/B,CAAED,MAAO,WAAYC,IAAK,SAC1B,CAAED,MAAO,gBAAiBC,IAAK,UAC/B,CAAED,MAAO,eAAgBC,IAAK,gBAC9B,CAAED,MAAO,kBAAmBC,IAAK,mBACjC,CAAED,MAAO,SAAUC,IAAK,WAgGdkJ,SAAU,oBAAoB3J,UAE9BN,EAAAA,EAAAA,MAACyB,EAAAA,EAAM,CAACD,UAAU,iCAAgClB,SAAA,EAChDC,EAAAA,EAAAA,KAAA,OAAKiB,UAAU,OAAOG,IAAKC,EAAAA,EAAYC,IAAI,eAAmB,eAIpEtB,EAAAA,EAAAA,KAAC2J,EAAAA,GAAI,CAACC,GAAG,0CAAyC7J,UAC9CN,EAAAA,EAAAA,MAACyB,EAAAA,EAAM,CACLD,UAAU,iCACVP,KAAK,UACLuG,KAAK,SAAQlH,SAAA,EAEbC,EAAAA,EAAAA,KAACmC,EAAAA,EAAI,CAACC,UAAWyH,EAAAA,KAAW,sBAOtC7J,EAAAA,EAAAA,KAAC8J,EAAgB,CAACtH,aAAcA,EAAcC,gBAAiBA,EAC/DI,0BAA2BA,EAC3BC,qBAAsBA,EACtBF,eAAgBA,KAEhB5C,EAAAA,EAAAA,KAAC+J,EAAAA,EAAM,CAAC/F,MAAM,SACVgG,UAAU,QACVhJ,QA5Fc,WACpBmF,QAAQC,IAAI,UACZyB,GAAgB,EAClB,EA0FQoC,KAAMrC,EACNsC,UAAU,EAEV1D,QAASoB,EACThB,OAAQ,EACN5G,EAAAA,EAAAA,KAACkB,EAAAA,EAAM,CAAgB2F,MAAO,CAAEzC,MAAO,WAAa1D,KAAK,UAAUO,UAAU,wBAAwBE,QA/GxF,WACrBmH,GAAkB,SAAC6B,GAAa,OAAMA,CAAa,IACnDtC,GAAgB,EAClB,EA4GuI9H,SAAC,SAAjH,WACbC,EAAAA,EAAAA,KAACkB,EAAAA,EAAM,CAAgB2F,MAAO,CAAEzC,MAAO,WAAajD,QAAS,WA1GrEmH,GAAkB,SAAC6B,GAAa,OAAMA,CAAa,IACnDnC,GAA6B,GAC7BG,GAAwB,GAExBN,GAAgB,EAsG+E,EAAG5G,UAAU,mBAAkBlB,SAAC,SAA1G,WACbA,UAgBFN,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACJN,EAAAA,EAAAA,MAAC2K,EAAAA,EAAM,CACHC,YAAU,EACVC,YAAY,SACZjD,MAAOvE,EACPoE,SAAU,SAACC,GAAOgB,EAAwBhB,EAAE,EAC5ClG,UAAU,QAAOlB,SAAA,EAEjBC,EAAAA,EAAAA,KAACoK,EAAAA,EAAAA,OAAa,CAACpG,MAAO,OAAqBqD,MAAO,OAAOtH,SAAE,QAAxB,SACnCC,EAAAA,EAAAA,KAACoK,EAAAA,EAAAA,OAAa,CAACpG,MAAO,aAAiCqD,MAAO,aAAatH,SAAE,cAApC,eACzCC,EAAAA,EAAAA,KAACoK,EAAAA,EAAAA,OAAa,CAACpG,MAAO,iBAAyCqD,MAAO,iBAAiBtH,SAAE,kBAA5C,mBAC7CC,EAAAA,EAAAA,KAACoK,EAAAA,EAAAA,OAAa,CAACpG,MAAO,SAAyBqD,MAAO,SAAStH,SAAE,UAA5B,oBAMrD,E,cChMkBe,EAAAA,EAAAA,M,gCCZlB,EADmB,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAC,EAAG,SAAY,CAAC,CAAE,IAAO,QAAS,MAAS,CAAC,KAAQ,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,mZAAuZ,KAAQ,OAAQ,MAAS,Y,UCKrpByJ,EAAe,SAAsBxJ,EAAOyJ,GAC9C,OAAoBC,EAAAA,cAAoBC,EAAAA,GAAUnF,EAAAA,EAAAA,IAAcA,EAAAA,EAAAA,GAAc,CAAC,EAAGxE,GAAQ,CAAC,EAAG,CAC5FyJ,IAAKA,EACLG,KAAMC,IAEV,EACAL,EAAaM,YAAc,eAC3B,MAA4BJ,EAAAA,WAAiBF,G,iCCArC1J,EAAgBC,EAAAA,EAAAA,MAATgK,EAAShK,EAAAA,EAAAA,KAuRxB,GArRuB,SAAHU,GAA0B,IAApBuJ,EAAYvJ,EAAZuJ,aACxBhI,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCiI,EAAM/H,EAAA,GAAEgI,EAAShI,EAAA,GACxBG,GAAwCJ,EAAAA,EAAAA,UAAS,IAAGK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAA7C8H,EAAY7H,EAAA,GAAE8H,EAAe9H,EAAA,GACpCE,GAAwCP,EAAAA,EAAAA,UAAS,IAAGQ,GAAAN,EAAAA,EAAAA,GAAAK,EAAA,GAA7C6H,EAAY5H,EAAA,GAAE6H,EAAe7H,EAAA,GACpCG,GAA8BX,EAAAA,EAAAA,UAAS,CAAC,GAAEY,GAAAV,EAAAA,EAAAA,GAAAS,EAAA,GAA1B2H,GAAF1H,EAAA,GAAYA,EAAA,IAEpB6B,GADckD,aAAaC,QAAQ,eACnBD,aAAaC,QAAQ,kBACrC2C,EAAiB5C,aAAaC,QAAQ,QACtC4C,EAAU7C,aAAaC,QAAQ,WAoB/B6C,EAAc,WACfP,EAAaQ,OAAOC,QAAU,IAC/BjH,EAAAA,EAAAA,GAAM,CACJkH,OAAQ,OACRC,IAAK,yBACL1G,KAAM,CACJ2G,QAASd,EACTe,aAAcb,EACdc,kBAAmB,WAEpBhH,MAAK,SAAUC,GACNA,EAASE,KAAKA,KACxBgB,QAAQC,IAAInB,EAASE,OAMP,IAAI8G,MAAOC,cAIzBf,EAAgB,IAChBgB,EAAgBnB,EAClB,IAAG/E,OAAM,SAAUC,GACfC,QAAQC,IAAIF,EAChB,GAEJ,EAEMiG,EAAkB,SAACjM,GACvBwE,EAAAA,EAAAA,KAEI,8BACA,CACEoH,QAAS5L,IAGZ8E,MAAK,SAACC,GACL,IAAI8B,EAAM9B,EAASE,KACnBgB,QAAQC,IAAIW,GACZsE,EAAgBtE,EAAIqF,SAASjH,KAC/B,IACCc,OAAM,SAACC,GACNC,QAAQC,IAAIF,EACd,GACJ,EAiEA,OAvCA1B,EAAAA,EAAAA,YAAU,WAgBR2G,EAAgB,GAClB,GAAG,CAACJ,KAEJvG,EAAAA,EAAAA,YAAU,YA5GRE,EAAAA,EAAAA,GAAM,CACJkH,OAAQ,OACRC,IAAK,8BACL1G,KAAM,CAAC,IAINH,MAAK,SAAUC,GACdkB,QAAQC,IAAInB,EAASE,MAErB,IAAI4B,EAAM9B,EAASE,KAAKA,KACxBmG,EAAUe,WAAC,GAADC,EAAAA,EAAAA,GAAIvF,GAClB,IAAGd,OAAM,SAAUC,GACfC,QAAQC,IAAIF,EAChB,IAoDAxB,EAAAA,EAAAA,KAEI,+BACA,CACE6H,SAAU,CAACf,GACXgB,UAAW/G,EAAc,MAAM8F,EAC/BkB,UAAW,QACXC,YAAa,YAGhB1H,MAAK,SAACC,GACL,IAAI8B,EAAM9B,EAASE,KACnBgB,QAAQC,IAAIW,GACZoF,EAAgBpF,EAAI+E,SACjB/E,EAAI+E,SAASb,EAAUlE,EAAI+E,QAChC,IACC7F,OAAM,SAACC,GACNC,QAAQC,IAAIF,EACd,GA2BJ,GAAG,KAkBDzG,EAAAA,EAAAA,MAAA,OAAKoH,MAAO,CAAElH,OAAQ,OAAQgN,QAAS,OAAQjN,MAAO,OAAQkN,cAAe,UAAW7M,SAAA,EAEtFC,EAAAA,EAAAA,KAAA,OAAK6G,MAAO,CAAEgG,QAAS,aAAc9M,UACnCN,EAAAA,EAAAA,MAAA,OAAKwB,UAAU,iCAAgClB,SAAA,EAC7CN,EAAAA,EAAAA,MAAA,OAAKwB,UAAU,SAAQlB,SAAA,EACrBC,EAAAA,EAAAA,KAAA,OAAK6G,MAAO,CAAEnH,MAAO,QAAUuB,UAAU,OAAMlB,UAC7CC,EAAAA,EAAAA,KAAA,OACE6G,MAAO,CACLnH,MAAO,OACPoN,UAAW,QACXD,QAAS,WAIXzL,IAAK2L,EACLzL,IAAI,eAGR7B,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACEC,EAAAA,EAAAA,KAACa,EAAK,CAACmM,MAAO,EAAGnG,MAAO,CAAEoG,OAAQ,GAAIlN,SAAC,+BACvCC,EAAAA,EAAAA,KAAC8K,EAAI,CAAA/K,SAAC,yBAGVC,EAAAA,EAAAA,KAACuE,EAAO,UAGZvE,EAAAA,EAAAA,KAACkN,EAAAA,EAAO,CAACrG,MAAO,CAAEoG,OAAQ,iBAG1BxN,EAAAA,EAAAA,MAAA,OAAKwB,UAAU,sBAAsB4F,MAAO,CAC1CsG,SAAU,EACVR,QAAS,OACTC,cAAe,SACfQ,SAAU,UACVrN,SAAA,EACAC,EAAAA,EAAAA,KAAA,OACEE,GAAG,gBACHe,UAAU,WACV4F,MAAO,CACLlH,OAAQ,OACRwN,SAAU,EACVN,QAAS,sBACTF,QAAS,OACTC,cAAe,iBACfS,UAAW,QACXtN,UAEFC,EAAAA,EAAAA,KAAA,OAAK6G,MAAO,CAAE8F,QAAS,OAAQC,cAAe,UAAW7M,SACtDqL,EAAakC,UAAUlI,KAAI,SAACmI,EAASpE,GACpC,IAAMqE,EAAQD,EAAQ/B,WAAaA,EAGnC,OAFArF,QAAQC,IAAIoF,IAGVxL,EAAAA,EAAAA,KAAA,OAEEiB,UAAS,2BAAAiB,OAA6BsL,EAAQ,QAAU,IACxD3G,MAAO,CACLoG,OAAQ,SACRlN,UAEFN,EAAAA,EAAAA,MAAA,OACEwB,UAAS,0CAAAiB,OAA4CsL,EAAQ,kBAAoB,qBAEjF3G,MAAO,CAAEnH,MAAO,QAASK,SAAA,EAEzBC,EAAAA,EAAAA,KAAA,OAAK6G,MAAO,CAAE4G,SAAU,OAAQC,aAAc,OAAQ3N,SACnDwN,EAAQI,iBAAmBpC,EAAiB,MAAQgC,EAAQK,QAE/D5N,EAAAA,EAAAA,KAAA,OAAKiB,UAAS,kBAAAiB,OAAoBsL,EAAQ,QAAU,IAAKzN,SACtDwN,EAAQxB,gBAEX/L,EAAAA,EAAAA,KAAA,OAAKiB,UAAS,mBAAAiB,OAAqBsL,EAAQ,QAAU,IAAKzN,SACvDwN,EAAQxH,WACLD,IAAOyH,EAAQxH,YAAYC,OAAO,WAClC,SApBHmD,EAyBX,SAKJnJ,EAAAA,EAAAA,KAAA,OAAK6G,MAAO,CAAEgG,QAAS,YAAagB,UAAW,qBAAsB9N,UACnEC,EAAAA,EAAAA,KAAC8N,EAAAA,EAAI,CAAA/N,UACHN,EAAAA,EAAAA,MAAA,OAAKoH,MAAO,CACV8F,QAAS,OACToB,eAAgB,gBAChBC,IAAI,QACJjO,SAAA,EACAC,EAAAA,EAAAA,KAAA,OAAK6G,MAAO,CACVsG,SAAU,GACVpN,UACAC,EAAAA,EAAAA,KAACsC,EAAAA,QAAQ,CACPkF,KAAM,EACNX,MAAO,CACLoH,aAAc,MACdC,OAAQ,OACRrB,QAAS,YAEXvC,YAAY,oBACZjD,MAAO6D,EACPhE,SAAU,SAACC,GAAC,OAAKgE,EAAgBhE,EAAEC,OAAOC,MAAM,EAChD8G,WAAY,SAAChH,GACG,UAAVA,EAAE3G,KAAoB2G,EAAEiH,WAC1BjH,EAAEkH,iBACF5C,IAEJ,OAGJzL,EAAAA,EAAAA,KAAA,OACE6G,MAAO,CACL8F,QAAS,OACToB,eAAgB,WAChBO,WAAY,SAEZ3O,OAAQ,QACRI,UAEFC,EAAAA,EAAAA,KAACkB,EAAAA,EAAM,CACLC,QAASsK,EACT8C,SAAUrD,EAAaQ,OAAOC,OAAS,EACvCjL,KAAK,UAASX,UAEdC,EAAAA,EAAAA,KAACuK,EAAY,oBAS/B,EClQA,ICxBwBzJ,EAAAA,EAAAA,MAAAA,EAAAA,EAAAA,KDCH,WACnB,OACErB,EAAAA,EAAAA,MAAAsC,EAAAA,SAAA,CAAAhC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACoJ,EAAAA,EAEC,CACApF,MAAM,kCAIVhE,EAAAA,EAAAA,KAACwO,EAAAA,EAAI,CAAAzO,UACLC,EAAAA,EAAAA,KAAA,OAAK6G,MAAO,CAAE8F,QAAS,OAAQhN,OAAQ,SAAUI,UAC/CC,EAAAA,EAAAA,KAACwO,EAAAA,EAAAA,KAAS,CAAC3H,MAAO,CAACnH,MAAO,QAAQK,UAChCC,EAAAA,EAAAA,KAACyO,GAAc,YAOzB,G,gDErBQnM,IADgBoM,GAAAA,EAAAA,YACHnM,EAAAA,EAAAA,UAgQrB,GA9PsB,SAACxB,GACnB,IAAA4N,EAAeb,EAAAA,EAAAA,UAARc,GAAsB1L,EAAAA,EAAAA,GAAAyL,EAAA,GAAlB,GAEX5L,GAAiCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3B8L,GAAH5L,EAAA,GAAcA,EAAA,IAC7BG,GAA+BJ,EAAAA,EAAAA,UAAS,CACpC4K,KAAM,GACN/B,IAAK,KACPxI,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAHe0L,GAAHzL,EAAA,GAAaA,EAAA,IAI3BE,GAA8BP,EAAAA,EAAAA,UAAS,IAAGQ,GAAAN,EAAAA,EAAAA,GAAAK,EAAA,GAA1BwL,GAAFvL,EAAA,GAAYA,EAAA,IAC1BG,GAAsDX,EAAAA,EAAAA,UAAS,IAAGY,GAAAV,EAAAA,EAAAA,GAAAS,EAAA,GAA3DqL,EAAmBpL,EAAA,GAAEqL,EAAsBrL,EAAA,GAC5ChC,GAAUC,EAAAA,EAAAA,MACViF,EAAc6B,aAAaC,QAAQ,eAEzCd,GAAmC9E,EAAAA,EAAAA,WAAS,GAAM+E,GAAA7E,EAAAA,EAAAA,GAAA4E,EAAA,GAAlCC,EAAA,GAAeA,EAAA,IAiI7BvD,EAAAA,EAAAA,YAAU,WACRE,EAAAA,EAAAA,KAEI,wBACA,CACEC,WAAY,EACZC,UAAW,IAEXlC,WAAa,OAGhBsC,MAAK,SAACC,GACL,IAAI8B,EAAM9B,EAASE,KAAKA,KAAKA,KAC7BgB,QAAQC,IAAIW,GAEZ,IAAI7B,EAAQ6B,EAAI3B,KAAI,SAACC,EAAMC,GACzB,MAAO,CACL9E,IAAK8E,EACLpF,GAAImF,EAAKnF,GACTgP,QAAS7J,EAAKuI,KACduB,YAAa9J,EAAK+J,MAClBC,QAAShK,EAAKM,MAElB,IAEAsJ,EAAuBD,EAAoB9M,OAAOgD,IAClDiB,QAAQC,IAAI4I,EACd,IACC/I,OAAM,SAACC,GACNC,QAAQC,IAAIF,EACd,KA9DFxB,EAAAA,EAAAA,GAAM,CACFkH,OAAQ,OACRC,IAAK,uBACL1G,KAAM,CAAC,IACRH,MAAK,SAAUC,GACd,GAAGA,EAASE,KAAKmK,QAAS,CACtBnJ,QAAQC,IAAInB,EAASE,KAAKA,MAC1B,IACID,EADMD,EAASE,KAAKA,KAAKA,KACbC,KAAI,SAACC,EAAMC,GACzB,MAAO,CACH9E,IAAK6E,EAAKnF,GACVA,GAAImF,EAAKnF,GACTqP,KAAMjK,EAAI,EACVkK,WAAYnK,EAAKmK,WACjBC,YAAapK,EAAKoK,YAClB1J,WAAYD,IAAOT,EAAKU,YAAYC,OAAO,cAC3C0J,WAAY5J,IAAOT,EAAKqK,YAAY1J,OAAO,cAEjD,IACA+I,EAAW7J,EAOf,CACJ,IAAGe,OAAM,SAAUC,GACfC,QAAQC,IAAIF,EAChB,GAoCF,GAAG,IAWP,OACEzG,EAAAA,EAAAA,MAACgL,EAAAA,SAAc,CAAA1K,SAAA,EACbC,EAAAA,EAAAA,KAACoJ,EAAAA,EAAW,CAACpF,MAAM,wBAEnBvE,EAAAA,EAAAA,MAACqO,EAAAA,EAAI,CACHc,KAAMA,EACNe,SAAU,CACRC,KAAM,IAERC,WAAY,CACVD,KAAM,IAERE,OAAO,WACPC,SApLkB,SAAC5I,GACnBhB,QAAQC,IAAIe,GAORpG,EAAMb,GACRwE,EAAAA,EAAAA,KAEI,yBACA,CACExE,GAAIa,EAAMb,GACVwF,eAAgBoB,EAChBpG,KAAMyG,EAAE6I,aACRpC,KAAMzG,EAAE8I,aACRC,QAAS/I,EAAE+I,SAAW,IAExB,CACEzG,QAAS,CACP,eAAgB,sBAIrBzE,MAAK,SAACC,GACDA,EAASE,KAAKmK,SAIlBnJ,QAAQC,IAAIrF,EAAMb,IAClBqN,GAAAA,GAAAA,QAAgB,gCAChB3L,EAAQuO,UALN5C,GAAAA,GAAAA,KAAatI,EAASE,KAAKiL,IAM/B,IACCnK,OAAM,SAACC,GACNC,QAAQC,IAAIF,EACd,IAGFxB,EAAAA,EAAAA,KAEI,sBACA,CACEgB,eAAgBoB,EAChBpG,KAAMyG,EAAE6I,aACRpC,KAAMzG,EAAE8I,aACRC,QAAS/I,EAAE+I,SAAW,IAExB,CACEzG,QAAS,CACP,eAAgB,sBAIrBzE,MAAK,SAACC,GACDA,EAASE,KAAKmK,SAIlB/B,GAAAA,GAAAA,QAAgB,gCAChB3L,EAAQuO,UAJN5C,GAAAA,GAAAA,KAAatI,EAASE,KAAKiL,IAK/B,IACCnK,OAAM,SAACC,GACNC,QAAQC,IAAIF,EACd,GAEN,EAkH0BnG,SAAA,EAExBN,EAAAA,EAAAA,MAAC+O,EAAAA,EAAI,CAACvN,UAAU,OAAMlB,SAAA,EACpBC,EAAAA,EAAAA,KAAA,OAAKiB,UAAU,6BAA6B4F,MAAO,CAAEzC,MAAO,OAAQrE,UAClEC,EAAAA,EAAAA,KAAA,OAAAD,SAAK,oCAGPN,EAAAA,EAAAA,MAAC4Q,GAAAA,EAAG,CAACC,MAAM,MAAKvQ,SAAA,EACdC,EAAAA,EAAAA,KAACuQ,GAAAA,EAAG,CAACX,KAAM,GAAG7P,UACZC,EAAAA,EAAAA,KAAC8N,EAAAA,EAAAA,KAAS,CAACF,KAAK,eAAerN,MAAM,eAAeiQ,MAAO,CAAC,CAAEC,UAAU,EAAMlD,QAAS,aAAcxN,UACnGC,EAAAA,EAAAA,KAACuC,EAAAA,EAAK,SAGVvC,EAAAA,EAAAA,KAACuQ,GAAAA,EAAG,CAACX,KAAM,GAAG7P,UACZC,EAAAA,EAAAA,KAAC8N,EAAAA,EAAAA,KAAS,CAACF,KAAK,eAAerN,MAAM,OAAMR,UACzCC,EAAAA,EAAAA,KAACuC,EAAAA,EAAK,YAKZvC,EAAAA,EAAAA,KAACqQ,GAAAA,EAAG,CAACC,MAAM,MAAKvQ,UACdC,EAAAA,EAAAA,KAACuQ,GAAAA,EAAG,CAACX,KAAM,GAAG7P,UACZC,EAAAA,EAAAA,KAAC8N,EAAAA,EAAAA,KAAS,CAACF,KAAK,UAAUrN,MAAM,UAASR,UACvCC,EAAAA,EAAAA,KAACsC,GAAQ,CAACkF,KAAM,cAMxBxH,EAAAA,EAAAA,KAAA,OAAKiB,UAAU,2CAA0ClB,UACvDN,EAAAA,EAAAA,MAACqO,EAAAA,EAAAA,KAAS,CAAC7M,UAAU,QAAOlB,SAAA,EAC1BC,EAAAA,EAAAA,KAACkB,EAAAA,EAAM,CACLC,QAAS,WACPS,EAAQuO,QACV,EAAEpQ,SACH,UAGDC,EAAAA,EAAAA,KAACkB,EAAAA,EAAM,CACLC,QAAS,WA5DfyN,EAAK8B,cACL7B,EAAY,IACZC,EAAY,CACVlB,KAAM,GACN/B,IAAK,IA0DD,EAAE9L,SACH,eAGDC,EAAAA,EAAAA,KAACkB,EAAAA,EAAM,CAACR,KAAK,UAAUiQ,SAAS,SAAQ5Q,SAAC,mBAQrD,ECrOA,GAxB0B,WAExB,IAAM6Q,GAAQ9O,EAAAA,EAAAA,MACd,OACErC,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAC6Q,EAAAA,GAAK,CAACC,KAAI,GAAA5O,OAAK6O,EAAAA,GAAe,uBAAuBC,OAAK,EAAAjR,UACzDC,EAAAA,EAAAA,KAACiR,EAAAA,GAAQ,CAACrH,GAAE,GAAA1H,OAAK0O,EAAME,KAAI,sBAE7B9Q,EAAAA,EAAAA,KAAC6Q,EAAAA,GAAK,CAACC,KAAI,GAAA5O,OAAK0O,EAAME,KAAI,iBAAiBE,OAAK,EAAAjR,UAC9CC,EAAAA,EAAAA,KAACkR,EAAW,OAEdlR,EAAAA,EAAAA,KAAC6Q,EAAAA,GAAK,CAACC,KAAI,GAAA5O,OAAK0O,EAAME,KAAI,oBAAoBE,OAAK,EAAAjR,UACjDC,EAAAA,EAAAA,KAACmR,GAAa,OAEhBnR,EAAAA,EAAAA,KAAC6Q,EAAAA,GAAK,CAACC,KAAI,GAAA5O,OAAK0O,EAAME,KAAI,qBAAqBE,OAAK,EAAAjR,UAClDC,EAAAA,EAAAA,KAACmR,GAAa,OAEhBnR,EAAAA,EAAAA,KAAC6Q,EAAAA,GAAK,CAACC,KAAI,GAAA5O,OAAK0O,EAAME,KAAI,UAAUE,OAAK,EAAAjR,UACvCC,EAAAA,EAAAA,KAACoR,GAAY,QAIrB,C","sources":["views/app-views/InquiryManagement/ActionsIcons.js","views/app-views/InquiryManagement/Export-Dropdown.js","views/app-views/InquiryManagement/Export-InquiryManagement.js","views/app-views/InquiryManagement/Actions.js","views/app-views/InquiryManagement/InquiryListTable.js","views/app-views/InquiryManagement/InquiryList.js","views/app-views/InquiryManagement/AllInbox.js","../node_modules/@ant-design/icons-svg/es/asn/SendOutlined.js","../node_modules/@ant-design/icons/es/icons/SendOutlined.js","views/app-views/InquiryManagement/ChatingSection.js","views/app-views/InquiryManagement/InquiryChats.js","views/app-views/InquiryManagement/Inquiries.js","views/app-views/InquiryManagement/AddNewInquiry/index.js","views/app-views/InquiryManagement/InquiryManagement.js"],"sourcesContent":["export const CrossIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<g clip-path=\"url(#clip0_215_9541)\">\r\n<path d=\"M18.2995 5.70948C17.9095 5.31948 17.2795 5.31948 16.8895 5.70948L11.9995 10.5895L7.10948 5.69948C6.71948 5.30948 6.08948 5.30948 5.69948 5.69948C5.30948 6.08948 5.30948 6.71948 5.69948 7.10948L10.5895 11.9995L5.69948 16.8895C5.30948 17.2795 5.30948 17.9095 5.69948 18.2995C6.08948 18.6895 6.71948 18.6895 7.10948 18.2995L11.9995 13.4095L16.8895 18.2995C17.2795 18.6895 17.9095 18.6895 18.2995 18.2995C18.6895 17.9095 18.6895 17.2795 18.2995 16.8895L13.4095 11.9995L18.2995 7.10948C18.6795 6.72948 18.6795 6.08948 18.2995 5.70948Z\" fill=\"#455560\"/>\r\n</g>\r\n<defs>\r\n<clipPath id=\"clip0_215_9541\">\r\n<rect width=\"24\" height=\"24\" fill=\"white\"/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n\r\n)\r\n\r\nexport const ChangeAssigneeIcon = () => (\r\n  <svg width=\"20\" height=\"18\" viewBox=\"0 0 20 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<path d=\"M8 8C10.21 8 12 6.21 12 4C12 1.79 10.21 0 8 0C5.79 0 4 1.79 4 4C4 6.21 5.79 8 8 8ZM8 2C9.1 2 10 2.9 10 4C10 5.1 9.1 6 8 6C6.9 6 6 5.1 6 4C6 2.9 6.9 2 8 2Z\" fill=\"#455560\"/>\r\n<path d=\"M2 14C2.22 13.28 5.31 12 8 12C8 11.3 8.13 10.63 8.35 10.01C5.62 9.91002 0 11.27 0 14V16H9.54C9.02 15.42 8.61 14.75 8.35 14H2Z\" fill=\"#455560\"/>\r\n<path d=\"M17.43 14.02C17.79 13.43 18 12.74 18 12C18 9.79 16.21 8 14 8C11.79 8 10 9.79 10 12C10 14.21 11.79 16 14 16C14.74 16 15.43 15.78 16.02 15.43C16.95 16.36 17.64 17.05 18.59 18L20 16.59C18.5 15.09 19.21 15.79 17.43 14.02ZM14 14C12.9 14 12 13.1 12 12C12 10.9 12.9 10 14 10C15.1 10 16 10.9 16 12C16 13.1 15.1 14 14 14Z\" fill=\"#455560\"/>\r\n</svg>\r\n\r\n)\r\n\r\nexport const ReportEnquiryIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<g clip-path=\"url(#clip0_215_9556)\">\r\n<path d=\"M12.36 6L12.76 8H18V14H14.64L14.24 12H7V6H12.36ZM14 4H5V21H7V14H12.6L13 16H20V6H14.4L14 4Z\" fill=\"#455560\"/>\r\n</g>\r\n<defs>\r\n<clipPath id=\"clip0_215_9556\">\r\n<rect width=\"24\" height=\"24\" fill=\"white\"/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n\r\n)\r\nexport const CreateQuotationIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n  <g clip-path=\"url(#clip0_886_13832)\">\r\n  <path d=\"M14 2H6C4.9 2 4 2.9 4 4V20C4 21.1 4.9 22 6 22H18C19.1 22 20 21.1 20 20V8L14 2ZM6 20V4H13V8H18V20H6ZM11 19H13V18H14C14.55 18 15 17.55 15 17V14C15 13.45 14.55 13 14 13H11V12H15V10H13V9H11V10H10C9.45 10 9 10.45 9 11V14C9 14.55 9.45 15 10 15H13V16H9V18H11V19Z\" fill=\"#475569\"/>\r\n  </g>\r\n  <defs>\r\n  <clipPath id=\"clip0_886_13832\">\r\n  <rect width=\"24\" height=\"24\" fill=\"white\"/>\r\n  </clipPath>\r\n  </defs>\r\n  </svg>\r\n)\r\nexport const InquiryStatusIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n  <g clip-path=\"url(#clip0_886_13838)\">\r\n  <path d=\"M11 12C13.21 12 15 10.21 15 8C15 5.79 13.21 4 11 4C8.79 4 7 5.79 7 8C7 10.21 8.79 12 11 12ZM11 6C12.1 6 13 6.9 13 8C13 9.1 12.1 10 11 10C9.9 10 9 9.1 9 8C9 6.9 9.9 6 11 6ZM5 18C5.2 17.37 7.57 16.32 9.96 16.06L12 14.06C11.61 14.02 11.32 14 11 14C8.33 14 3 15.34 3 18V20H12L10 18H5ZM20.6 12.5L15.47 17.67L13.4 15.59L12 17L15.47 20.5L22 13.91L20.6 12.5Z\" fill=\"#475569\"/>\r\n  </g>\r\n  <defs>\r\n  <clipPath id=\"clip0_886_13838\">\r\n  <rect width=\"24\" height=\"24\" fill=\"white\"/>\r\n  </clipPath>\r\n  </defs>\r\n  </svg>\r\n)","import CustomDropdown from 'components/shared-components/CustomDropdown/CustomDropdown'\r\nimport React from 'react'\r\nimport { Menu } from 'antd';\r\n\r\nconst menu = (\r\n  <Menu\r\n    items={[\r\n      {\r\n        label: <p>1st menu</p>,\r\n        key: '0',\r\n      },\r\n      {\r\n        label: <a href=\"https://www.aliyun.com\">2nd menu item</a>,\r\n        key: '1',\r\n      },\r\n      {\r\n        type: 'divider',\r\n      },\r\n      {\r\n        label: '3rd menu item',\r\n        key: '3',\r\n      },\r\n    ]}\r\n  />\r\n);\r\n\r\nconst ExportDropdown = () => {\r\n  return (\r\n    <CustomDropdown text=\"Select\" menu={menu}/>\r\n  )\r\n}\r\n\r\nexport default ExportDropdown;","import React from 'react'\r\nimport { Button, Typography } from 'antd';\r\nimport ExportDropdown from './Export-Dropdown';\r\n\r\nimport exportIcon from 'assets/svg/file-export.svg'\r\n\r\nconst {Title} = Typography;\r\n\r\nconst Export = (props) => {\r\n  const {onClose} = props;\r\n  return (\r\n    <div className='text-center p-3'>\r\n      <div className='text-right'>\r\n        <Button onClick={onClose}>close</Button>\r\n      </div>\r\n      <div className='mb-4'>\r\n        <img src={exportIcon} alt=\"ExportIcon\"></img>\r\n        <Title>Export/Download Data</Title>\r\n      </div>\r\n      <div className='text-left mb-4'>\r\n        <p>Select Department</p>\r\n        <ExportDropdown/>\r\n      </div>\r\n      <div>\r\n        <Button className='m-1 mr-3' type=\"primary\">Yes, Confirm</Button>\r\n        <Button className='m-1' onClick={onClose}>No, Cancel</Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Export;","import React, { useState } from \"react\";\r\n// import EllipsisDropdown from 'components/shared-components/EllipsisDropdown'\r\nimport EllipsisDropdown from \"components/shared-components/EllipsisDropdown/index\";\r\nimport Modal from \"components/UI/Modal\";\r\n\r\nimport { Menu, Typography, Button } from \"antd\";\r\nimport Icon from \"@ant-design/icons\";\r\n\r\nimport {\r\n  CrossIcon,\r\n  ChangeAssigneeIcon,\r\n  ReportEnquiryIcon,\r\n  CreateQuotationIcon,\r\n  InquiryStatusIcon\r\n} from \"./ActionsIcons\";\r\n\r\nimport { InquiryIcon } from \"./svgIcons\";\r\nimport { useHistory, useParams, useRouteMatch } from \"react-router-dom\";\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nconst Actions = ({setInquiryData,openStatusModal,inquiry_id}) => {\r\n  const history = useHistory();\r\n  const match = useRouteMatch();\r\n\r\n  const InquiryStatusHandler = () => {\r\n    openStatusModal((prev) => !prev);\r\n  };\r\n\r\n  const CreateQuotationHandler = () => {\r\n    history.push(`/app/contract-management/quotations/add-new-quotation/${inquiry_id}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <EllipsisDropdown\r\n        menu={\r\n          <Menu>\r\n            <Menu.Item onClick={CreateQuotationHandler}>\r\n              <span className=\"d-flex align-items-center\">\r\n                <Icon className=\"mr-2\" component={CreateQuotationIcon}  />\r\n                Create Quotation\r\n              </span>\r\n            </Menu.Item>\r\n            <Menu.Item  onClick={InquiryStatusHandler}>\r\n              <span className=\"d-flex align-items-center\">\r\n                <Icon className=\"mr-2\" component={InquiryStatusIcon}  />\r\n                Inquiry Status\r\n              </span>\r\n            </Menu.Item>\r\n          </Menu>\r\n        }\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Actions;\r\n","import React , {useState, useEffect} from 'react'\r\n\r\nimport {Input, Table , Button, Tag, Modal, Radio, message} from 'antd';\r\nimport Icon from '@ant-design/icons'\r\nimport { WhatsappIcon } from 'assets/svg/icon';\r\nimport Actions from './Actions';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\n\r\nconst { TextArea } = Input;\r\n\r\n\r\n// const data = [\r\n//   {\r\n//     key: 1,\r\n//     inquiryId: \"GE-123456\",\r\n//     userName: \"John Smith\",\r\n//     phoneNumber: \"+65 123456789\",\r\n//     emailId: \"johnsmith@gmail.com\",\r\n//     dateOfInquiry: \"20/08/22\",\r\n//     assignedTo: \"Wade Warren\",\r\n//     inquiryChanel: WhatsappIcon,\r\n//     status: \"closed\",\r\n//   }\r\n// ];\r\n\r\nconst InquiryListTable = ({allInquiries, setAllInquiries, setPage, searchText, selectedFilter, selectedInquiryModeFilter, selectedStatusFilter }) => {\r\n  // const [selectedRowKeys , setSelectedRowKeys] = useState([]);\r\n  const [inquiryData, setInquiryData] = useState({});\r\n  const [openStatusModal, setOpenStatusModal] = useState(false);\r\n  const [status, setStatus] = useState(\"Open\");\r\n  const [remark, setRemark] = useState(false);\r\n  const columns = [\r\n    {\r\n      title: 'Inquiry Id',\r\n      dataIndex: 'id',\r\n    },\r\n    {\r\n      title: 'Customer Name',\r\n      dataIndex: 'customer_name',\r\n      // defaultSortOrder: 'descend',\r\n      // sorter: (a, b) => a.customer_name - b.customer_name,\r\n    },\r\n    {\r\n      title: 'Email Id',\r\n      dataIndex: 'email',\r\n      // defaultSortOrder: 'descend',\r\n      // sorter: (a, b) => a.emailId - b.emailId,\r\n      \r\n    },\r\n    {\r\n      title: 'Mobile Number',\r\n      dataIndex: 'mobile',\r\n      // defaultSortOrder: 'descend',\r\n      // sorter: (a, b) => a.phoneNuber - b.phoneNuber,\r\n    },\r\n    {\r\n      title: 'Inquiry Date',\r\n      dataIndex: 'dateOfInquiry',\r\n      // defaultSortOrder: 'descend',\r\n      // sorter: (a, b) => a.dateOfInquiry - b.dateOfInquiry,\r\n    },\r\n    // {\r\n    //   title: 'Inquiry Chanel',\r\n    //   dataIndex: 'inquiryChanel',\r\n    //   render: (icon) => {\r\n    //     return(\r\n    //     <span className='d-flex justify-content-center'>\r\n    //       <Icon component={icon}/>\r\n    //       </span>\r\n    //       )\r\n    //   }\r\n    // },\r\n    {\r\n      title: 'Status',\r\n      dataIndex: 'status',\r\n      render: (status) => {\r\n        return(\r\n          <span>\r\n            <Tag color=\"green\" key={status}>\r\n              {status}\r\n            </Tag>\r\n          </span>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      title:\"Action\",\r\n      dataIndex: \"action\",\r\n      render: (_,record) => {\r\n        return (\r\n          <Actions setInquiryData={setInquiryData} inquiryData={record} openStatusModal={openStatusModal} inquiry_id={record.id}/>\r\n        )\r\n      }\r\n    }\r\n      \r\n      \r\n  ];\r\n\r\n  const handleStatusOk = () => {\r\n    console.log(inquiryData);\r\n    axios\r\n    .post(\r\n      \"/api/tc/update-inquiry\",\r\n      {\r\n        ...inquiryData,\r\n        id: inquiryData.id,\r\n        tc_customer_id: inquiryData.customer_id,\r\n        status: status\r\n      },\r\n    )\r\n    .then((response) => {\r\n      let res = response.data;\r\n      console.log(res);\r\n      setOpenStatusModal(false);\r\n      getData();\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n      \r\n  };\r\n  const handleStatusCancel = () => {\r\n      setStatus(\"\")\r\n      setRemark(\"\")\r\n      setOpenStatusModal(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [searchText]);\r\n\r\n  useEffect(() => {\r\n    getData()\r\n  }, [selectedFilter]);\r\n\r\n\r\n  const getData = () => {\r\n    axios\r\n      .post(\r\n        \"/api/tc/get-inquiries\",\r\n        {\r\n          page_index: 1,\r\n          page_size: 10,\r\n          statuses: null,\r\n          search: searchText ? searchText : null,\r\n          inquiry_mode: selectedInquiryModeFilter || null,\r\n          status: selectedStatusFilter || null,\r\n        },\r\n      )\r\n      .then((response) => {\r\n        let res = response.data.data.data;\r\n        // console.log(res);\r\n\r\n        let fdata = res.map((elem, ind) => {\r\n          return {\r\n            ...elem,\r\n            sr_no: ind+1,\r\n            key: elem.id,\r\n            id: elem.id,\r\n            customer_name: elem.customer_name || elem.tc_customer_id,\r\n            email: elem.email || '-',\r\n            mobile: elem.mobile || '-',\r\n            dateOfInquiry: moment(elem.created_at).format(\"DD-MM-YYYY\"),\r\n            status: elem.status,\r\n          };\r\n        });\r\n        setAllInquiries(fdata);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  \r\n  return (\r\n    <div className='mt-3'>\r\n      {/* <Table rowSelection={rowSelection} columns={columns} dataSource={data} className=\"w-100\"/> */}\r\n      <Table columns={columns} dataSource={allInquiries} className=\"w-100\"/>\r\n\r\n      <Modal\r\n        visible={openStatusModal}\r\n        centered\r\n        maskClosable\r\n        onCancel={() => {setOpenStatusModal(false);}}\r\n        title={'Inquiry Status'}\r\n        footer={[\r\n            <Button key={'submit'} style={{ color: '#F5F5F5' }} type=\"primary\" className='font-weight-bold' onClick={handleStatusOk}>Save</Button>,\r\n            <Button key={'cancel'} style={{ color: '#000B23' }} onClick={handleStatusCancel} className='font-weight-bold'>Cancel</Button>,\r\n        ]}\r\n        >   \r\n        <div>\r\n            <Radio.Group\r\n                size=\"small\" \r\n                onChange={(e) => setStatus(e.target.value)}\r\n                defaultValue={\"Open\"}\r\n            >\r\n                <Radio value=\"Open\" defaultChecked> Open </Radio>\r\n                <Radio value=\"Close\"> Close</Radio>\r\n            </Radio.Group>\r\n        </div>\r\n\r\n        <div>\r\n            <h4 className=\"mb-2 mt-4\">Remarks</h4>\r\n            <TextArea rows={4} onChange={(e) => setRemark(e.target.value)} value={remark} />\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InquiryListTable","import React , {useState, useEffect} from \"react\";\r\n\r\nimport { Button, Drawer, Select } from \"antd\";\r\nimport Icon from \"@ant-design/icons\"\r\n\r\nimport SearchBox from \"components/shared-components/SearchBox\";\r\nimport Filter from \"components/shared-components/Filter\";\r\nimport PageHeading from \"components/shared-components/PageHeading/PageHeading\";\r\nimport Export from \"./Export-InquiryManagement\";\r\nimport Modal from \"components/UI/Modal\";\r\nimport InquiryListTable from \"./InquiryListTable\";\r\nimport { Link , useRouteMatch  } from \"react-router-dom\";\r\nimport { PlusIcon } from \"assets/svg/icon\";\r\nimport { InquiryManagementPageIcon , FilterIcon , ExportIcon} from \"assets/svg/icon\";\r\nimport axios from \"axios\";\r\nimport exportIcon from \"assets/svg/exportIcon.svg\";\r\nimport { CSVLink } from \"react-csv\";\r\nimport moment from \"moment\";\r\n\r\nconst InquiryList = () => {\r\n\r\n  const [showExportOption, setShowExportOption] = useState(false);\r\n  const [searchText, setSearchText] = useState('');\r\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n  const [selectedCustomerFilter , setSelectedCustomerFilter] = useState(false);\r\n  const [selectedInquiryModeFilter , setSelectedInquiryModeFilter] = useState(false);\r\n  const [selectedStatusFilter , setSelectedStatusFilter] = useState(false);\r\n  const [selectedFilter , setSelectedFilter] = useState(false);\r\n  const [allJobsites , setAllJobsites] = useState(false);\r\n  const [allCustomers , setAllCustomers] = useState(false);\r\n  const customer_id = localStorage.getItem(\"customer_id\");\r\n\r\n  const [allInquiries , setAllInquiries] = useState([]);\r\n  const headers = [\r\n    { label: \"Sr. No\", key: \"sr_no\" },\r\n    { label: \"Inquiry ID\", key: \"id\" },\r\n    { label: \"Customer Name\", key: \"customer_name\" },\r\n    { label: \"Email Id\", key: \"email\" },\r\n    { label: \"Mobile Number\", key: \"mobile\" },\r\n    { label: \"Inquiry Date\", key: \"inquiry_date\" },\r\n    { label: \"Inquiry Channel\", key: \"inquiry_channel\" },\r\n    { label: \"Status\", key: \"status\" }\r\n  ];\r\n  \r\n\r\n  const exportHandler = () => {\r\n    setShowExportOption((prev) => !prev);\r\n  };\r\n\r\n  const exportModal = (\r\n    <Modal onclose={exportHandler}>\r\n      <Export onClose={exportHandler} />\r\n    </Modal>\r\n  );\r\n  \r\n  const drawerHandler = () => {\r\n    setDrawerIsOpen((prevState) => !prevState);\r\n  };\r\n\r\n  const handleDrawerOk = () => {\r\n    setSelectedFilter((previousState) => !previousState)\r\n    setDrawerIsOpen(false);\r\n  };\r\n\r\n  const handleDrawerReset = () => {\r\n    setSelectedFilter((previousState) => !previousState)\r\n    setSelectedInquiryModeFilter(false)\r\n    setSelectedStatusFilter(false)\r\n\r\n    setDrawerIsOpen(false);\r\n  };\r\n\r\n  const onDrawerClose = () => {\r\n    console.log(\"Closed\")\r\n    setDrawerIsOpen(false);\r\n  };\r\n\r\n  const getAllInquiries = () => {\r\n    axios\r\n    .post(\r\n      \"/api/tc/get-inquiries\",\r\n      {\r\n        page_index: 1,\r\n        page_size: 100000,\r\n        search : null,\r\n        customer_id: customer_id\r\n      },\r\n    )\r\n    .then((response) => {\r\n      let res = response.data.data.data;\r\n\r\n      let fdata = res.map((elem, index) => {\r\n        return {\r\n          ...elem,\r\n            sr_no: index+1,\r\n            key: elem.id,\r\n            id: elem.id,\r\n            customer_name: elem.customer_name || elem.tc_customer_id,\r\n            email: elem.email || '-',\r\n            mobile: elem.mobile || '-',\r\n            dateOfInquiry: moment(elem.created_at).format(\"DD-MM-YYYY\"),\r\n            status: elem.status,\r\n        };\r\n      });\r\n\r\n      setAllInquiries(fdata);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAllInquiries();\r\n  }, [])\r\n  \r\n\r\n\r\n  return (\r\n    <>\r\n      {showExportOption && exportModal}\r\n      <div className=\"d-flex justify-content-between align-items-center\">\r\n        <PageHeading\r\n          // icon={InquiryManagementPageIcon}\r\n          // svg={InquiryManagementPageIcon}\r\n          title=\"Inquiry List\"\r\n        />\r\n        <div className=\" d-flex align-items-center justify-content-end\">\r\n          <SearchBox setSearchText={setSearchText} />\r\n\r\n          <Button className=\"d-flex align-items-center ml-2\" onClick={drawerHandler}>\r\n            <Icon className=\"mr-2\" component={FilterIcon} />\r\n              Filters\r\n          </Button>\r\n          \r\n          <CSVLink data={allInquiries} \r\n              headers={headers} \r\n              filename={\"All-Inquiries.csv\"}\r\n            >\r\n              <Button className=\"d-flex align-items-center ml-2\" >\r\n                <img className=\"mr-2\" src={exportIcon} alt=\"exportIcon\"></img>Export\r\n              </Button>\r\n          </CSVLink>\r\n\r\n          <Link to=\"/app/inquiry-management/add-new-inquiry\">\r\n              <Button\r\n                className=\"ml-2 d-flex align-items-center\"\r\n                type=\"primary\"\r\n                size=\"medium\"\r\n              >\r\n                <Icon component={PlusIcon}/>\r\n                Add new\r\n              </Button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n\r\n      <InquiryListTable allInquiries={allInquiries} setAllInquiries={setAllInquiries}\r\n      selectedInquiryModeFilter={selectedInquiryModeFilter} \r\n      selectedStatusFilter={selectedStatusFilter} \r\n      selectedFilter={selectedFilter} />\r\n\r\n      <Drawer title=\"Filter\"\r\n          placement=\"right\"\r\n          onClose={onDrawerClose} \r\n          open={drawerIsOpen}\r\n          closable={true}\r\n          // getContainer={false}\r\n          visible={drawerIsOpen}\r\n          footer={[\r\n            <Button key={'submit'} style={{ color: '#F5F5F5' }} type=\"primary\" className='font-weight-bold mr-2' onClick={handleDrawerOk}>Apply</Button>,\r\n            <Button key={'cancel'} style={{ color: '#000B23' }} onClick={() => {handleDrawerReset()}} className='font-weight-bold'>Reset</Button>,\r\n          ]}\r\n        >\r\n          {/* <div>\r\n            <h4>Inquiry Channel</h4>\r\n            <Select\r\n                showSearch\r\n                placeholder=\"Status\"\r\n                value={selectedStatusFilter}\r\n                onChange={(e) => {setSelectedStatusFilter(e)}}\r\n                className=\"w-100\"\r\n            >\r\n                <Select.Option title={'Whatsapp'} key={'Whatsapp'} value={'Whatsapp'}>{'Whatsapp'}</Select.Option>\r\n                <Select.Option title={'Email'} key={'Email'} value={'Email'}>{'Email'}</Select.Option>\r\n                <Select.Option title={'Web App'} key={'Web App'} value={'Web App'}>{'Web App'}</Select.Option>\r\n            </Select>\r\n          </div> */}\r\n          <div>\r\n            <h4>Status</h4>\r\n            <Select\r\n                showSearch\r\n                placeholder=\"Status\"\r\n                value={selectedStatusFilter}\r\n                onChange={(e) => {setSelectedStatusFilter(e)}}\r\n                className=\"w-100\"\r\n            >\r\n                <Select.Option title={'Open'} key={'Open'} value={'Open'}>{'Open'}</Select.Option>\r\n                <Select.Option title={'Quote Sent'} key={'Quote Sent'} value={'Quote Sent'}>{'Quote Sent'}</Select.Option>\r\n                <Select.Option title={'Quote Accepted'} key={'Quote Accepted'} value={'Quote Accepted'}>{'Quote Accepted'}</Select.Option>\r\n                <Select.Option title={'Closed'} key={'Closed'} value={'Closed'}>{'Closed'}</Select.Option>\r\n            </Select>\r\n          </div>\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InquiryList;\r\n","import React from \"react\";\r\n\r\nimport { Badge, List, Typography } from \"antd\";\r\nimport Icon from \"@ant-design/icons\";\r\n\r\nimport {\r\n  AssignedIcon,\r\n  ClosedIcon,\r\n  EmailIcon,\r\n  InboxIcon,\r\n  UnassignedIcon,\r\n  WhatsappIcon,\r\n} from \"./svgIcons\";\r\n\r\nconst { Title } = Typography;\r\n\r\nconst data = [\r\n  { icon: InboxIcon, text: \"All\", badgeNumber: 25 },\r\n  { icon: AssignedIcon, text: \"Assigned\", badgeNumber: 5 },\r\n  { icon: UnassignedIcon, text: \"Unassigned\", badgeNumber: 5 },\r\n  { icon: WhatsappIcon, text: \"Whatsapp\", badgeNumber: 5 },\r\n  { icon: EmailIcon, text: \"Email\", badgeNumber: 5 },\r\n  { icon: ClosedIcon, text: \"Closed\", badgeNumber: 5 },\r\n];\r\n\r\nconst AllInbox = () => {\r\n  return (\r\n    <>\r\n      <List\r\n        header={<Title level={3}>All Inbox</Title>}\r\n        dataSource={data}\r\n        renderItem={(item) => (\r\n          <List.Item>\r\n            <div className=\"d-flex justify-content-between w-100 align-items-center\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <Icon component={item.icon} className=\"mr-3\" />\r\n                {item.text}\r\n              </div>\r\n              <Badge count={item.badgeNumber} style={{background: \"#0099A8\"}} />\r\n            </div>\r\n          </List.Item>\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AllInbox;\r\n","// This icon file is generated automatically.\nvar SendOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"defs\", \"attrs\": {}, \"children\": [{ \"tag\": \"style\", \"attrs\": {} }] }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M931.4 498.9L94.9 79.5c-3.4-1.7-7.3-2.1-11-1.2a15.99 15.99 0 00-11.7 19.3l86.2 352.2c1.3 5.3 5.2 9.6 10.4 11.3l147.7 50.7-147.6 50.7c-5.2 1.8-9.1 6-10.3 11.3L72.2 926.5c-.9 3.7-.5 7.6 1.2 10.9 3.9 7.9 13.5 11.1 21.5 7.2l836.5-417c3.1-1.5 5.6-4.1 7.2-7.1 3.9-8 .7-17.6-7.2-21.6zM170.8 826.3l50.3-205.6 295.2-101.3c2.3-.8 4.2-2.6 5-5 1.4-4.2-.8-8.7-5-10.2L221.1 403 171 198.2l628 314.9-628.2 313.2z\" } }] }, \"name\": \"send\", \"theme\": \"outlined\" };\nexport default SendOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport SendOutlinedSvg from \"@ant-design/icons-svg/es/asn/SendOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar SendOutlined = function SendOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: SendOutlinedSvg\n  }));\n};\nSendOutlined.displayName = 'SendOutlined';\nexport default /*#__PURE__*/React.forwardRef(SendOutlined);","import React, { useState, useEffect } from \"react\";\r\nimport { Divider, Typography, Form, Input, Button } from \"antd\";\r\nimport Icon, { SendOutlined } from \"@ant-design/icons\";\r\nimport { SendIcon } from \"assets/svg/icon\";\r\nimport Actions from \"./Actions\";\r\nimport ProfilePic from \"assets/PrimaryAccount.png\";\r\nimport GrePic from \"assets/grand-energy-logo-small.png\";\r\n// Import statements\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport \"./Bottom.css\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nconst ChatingSection = ({ selectedChat }) => {\r\n  const [chatId, setChatId] = useState(\"\");\r\n  const [messageInput, setMessageInput] = useState(\"\");\r\n  const [chatMessages, setChatMessages] = useState([]);\r\n  const [greData, setGreData] = useState({});\r\n  const customer_id = localStorage.getItem(\"customer_id\");\r\n  const customer_name = localStorage.getItem(\"customer_name\");\r\n  const associate_name = localStorage.getItem(\"name\");\r\n  const user_id = localStorage.getItem(\"user_id\");\r\n\r\n  const getGreData = () => {\r\n    axios({\r\n      method: 'post',\r\n      url: \"/api/tc/get-contact-details\",\r\n      data: {},\r\n      // headers: {\r\n      //     Authorization: `Bearer ${tok}`\r\n      // },\r\n    }).then(function (response) {\r\n        console.log(response.data);\r\n            \r\n        let res = response.data.data\r\n        setGreData(...res);\r\n    }).catch(function (error) {\r\n        console.log(error);\r\n    });\r\n  }\r\n\r\n  const sendMessage = () => {\r\n    if(messageInput.trim().length >= 1) {\r\n      axios({\r\n        method: 'post',\r\n        url: \"/api/chat/send-message\",\r\n        data: {\r\n          chat_id: chatId,\r\n          chat_message: messageInput,\r\n          chat_message_type: 'group',\r\n        },\r\n      }).then(function (response) {\r\n        let res = response.data.data\r\n        console.log(response.data);\r\n\r\n        const newMessage = {\r\n          chat_message: messageInput,\r\n          user_id: user_id,\r\n          messenger_name: \"You\",\r\n          created_at: new Date().toISOString(),\r\n        };\r\n  \r\n        // setChatMessages((prev) => [newMessage, ...prev]);\r\n        setMessageInput(\"\");\r\n        getChatMessages(chatId);\r\n      }).catch(function (error) {\r\n          console.log(error);\r\n      });\r\n    }\r\n  }\r\n\r\n  const getChatMessages = (id) => {\r\n    axios\r\n    .post(\r\n        \"/api/chat/get-chat-messages\",\r\n        {\r\n          chat_id: id\r\n        },\r\n      )\r\n      .then((response) => {\r\n        let res = response.data;\r\n        console.log(res);\r\n        setChatMessages(res.messages.data)\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const createOrGetChat = () => {\r\n    axios\r\n    .post(\r\n        \"/api/chat/create-or-get-chat\",\r\n        {\r\n          user_ids: [user_id],\r\n          chat_name: customer_name+' - '+associate_name,\r\n          chat_type: \"group\",\r\n          chat_module: \"inquiry\",\r\n        },\r\n      )\r\n      .then((response) => {\r\n        let res = response.data;\r\n        console.log(res);\r\n        getChatMessages(res.chat_id);\r\n        if(res.chat_id) setChatId(res.chat_id)\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n\r\n  // Reset messages when selected chat changes\r\n  useEffect(() => {\r\n    // Initialize with some dummy messages for the selected chat\r\n    // setChatMessages([\r\n    //   {\r\n    //     chat_message: \"I have a question about my recent order\",\r\n    //     user_id: user_id,\r\n    //     messenger_name: associate_name,\r\n    //     created_at: new Date(Date.now() - 1000 * 60 * 4).toISOString(), // 4 minutes ago\r\n    //   },\r\n    //   {\r\n    //     chat_message: \"Please provide me with your order number and I'll check the status for you\",\r\n    //     user_id: \"agent\",\r\n    //     messenger_name: \"Support Agent\",\r\n    //     created_at: new Date(Date.now() - 1000 * 60 * 3).toISOString(), // 3 minutes ago\r\n    //   },\r\n    // ]);\r\n    setMessageInput(\"\");\r\n  }, [selectedChat]);\r\n\r\n  useEffect(() => {\r\n    getGreData();\r\n    createOrGetChat();\r\n  }, []);\r\n\r\n  // Handle sending a message\r\n  // const handleSendChat = () => {\r\n  //   if (messageInput.trim().length >= 1) {\r\n  //     const newMessage = {\r\n  //       chat_message: messageInput,\r\n  //       user_id: user_id, // Assuming null user_id means it's \"my\" message\r\n  //       messenger_name: \"You\",\r\n  //       created_at: new Date().toISOString(),\r\n  //     };\r\n\r\n  //     setChatMessages((prev) => [newMessage, ...prev]);\r\n  //     setMessageInput(\"\");\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <div style={{ height: '100%', display: 'flex', width: \"100%\", flexDirection: 'column' }}>\r\n      {/* Header with user info and actions */}\r\n      <div style={{ padding: '16px 20px' }}>\r\n        <div className=\"d-flex justify-content-between\">\r\n          <div className=\"d-flex\">\r\n            <div style={{ width: \"5rem\" }} className=\"mr-3\">\r\n              <img\r\n                style={{\r\n                  width: \"100%\",\r\n                  objectFit: \"cover\",\r\n                  padding: '6px 5px'\r\n                  // borderRadius: \"50%\",\r\n                  // backgroundColor: '#d6d6d6',\r\n                }}\r\n                src={GrePic}\r\n                alt=\"Profile\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <Title level={4} style={{ margin: 0 }}>Grand Energy Technologies</Title>\r\n              <Text>+65 ####-####</Text>\r\n            </div>\r\n          </div>\r\n          <Actions />\r\n        </div>\r\n      </div>\r\n      <Divider style={{ margin: '0 0 10px 0' }} />\r\n\r\n      {/* Chat body - message area */}\r\n      <div className=\"chat-body-container\" style={{\r\n        flexGrow: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        overflow: 'hidden'\r\n      }}>\r\n        <div\r\n          id=\"scrollableDiv\"\r\n          className=\"chatBody\"\r\n          style={{\r\n            height: 'auto',\r\n            flexGrow: 1,\r\n            padding: '10px 20px 20px 20px',\r\n            display: 'flex',\r\n            flexDirection: 'column-reverse',\r\n            overflowY: 'auto',\r\n          }}\r\n        >\r\n          <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n            {chatMessages.reverse().map((message, index) => {\r\n              const myMsg = message.user_id === +user_id;\r\n              console.log(user_id);\r\n\r\n              return (\r\n                <div\r\n                  key={index}\r\n                  className={`BottomRightMsgContainer ${myMsg ? \"myMsg\" : \"\"}`}\r\n                  style={{\r\n                    margin: '8px 0',\r\n                  }}\r\n                >\r\n                  <div\r\n                    className={`d-flex flex-column justify-content-end ${myMsg ? \"align-items-end\" : \"align-items-start\"\r\n                      }`}\r\n                    style={{ width: '100%' }}\r\n                  >\r\n                    <div style={{ fontSize: '10px', marginBottom: '2px' }}>\r\n                      {message.messenger_name === associate_name ? \"You\" : message.name}\r\n                    </div>\r\n                    <div className={`BottomRightMsg ${myMsg ? \"myMsg\" : \"\"}`}>\r\n                      {message.chat_message}\r\n                    </div>\r\n                    <div className={`BottomRightTime ${myMsg ? \"myMsg\" : \"\"}`}>\r\n                      {message.created_at\r\n                        ? moment(message.created_at).format(\"hh:mm A\")\r\n                        : \"\"}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Message input area */}\r\n        <div style={{ padding: '15px 20px', borderTop: '1px solid #f0f0f0' }}>\r\n          <Form>\r\n            <div style={{\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n              gap:\"10px\"\r\n            }}>\r\n              <div style={{\r\n                flexGrow: 1,\r\n              }}>\r\n                <TextArea\r\n                  rows={1}\r\n                  style={{\r\n                    borderRadius: '8px',\r\n                    resize: 'none',\r\n                    padding: '8px 12px'\r\n                  }}\r\n                  placeholder=\"Type a message...\"\r\n                  value={messageInput}\r\n                  onChange={(e) => setMessageInput(e.target.value)}\r\n                  onKeyPress={(e) => {\r\n                    if (e.key === \"Enter\" && !e.shiftKey) {\r\n                      e.preventDefault();\r\n                      sendMessage();\r\n                    }\r\n                  }}\r\n                />\r\n              </div>\r\n              <div\r\n                style={{\r\n                  display: 'flex',\r\n                  justifyContent: 'flex-end',\r\n                  alignItems: 'center',\r\n                  // marginTop: '8px',\r\n                  height: '100%'\r\n                }}\r\n              >\r\n                <Button\r\n                  onClick={sendMessage}\r\n                  disabled={messageInput.trim().length < 1}\r\n                  type=\"primary\"\r\n                >\r\n                  <SendOutlined />\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatingSection;\r\n\r\n// import React from \"react\";\r\n// import { Typography } from \"antd\";\r\n// import Actions from \"./Actions\";\r\n// import ProfilePic from \"assets/PrimaryAccount.png\";\r\n// const { Title, Text } = Typography;\r\n\r\n// const ChatingSection = () => {\r\n//   return (\r\n//     <div className=\"d-flex justify-content-between\">\r\n//       <div className=\"d-flex\">\r\n//         <div style={{ width: \"4rem\" }} className=\"mr-3\">\r\n//           <img style={{ width: \"100%\" }} src={ProfilePic} />\r\n//         </div>\r\n//         <div>\r\n//           <Title strong level={4}>Johm Smith</Title>\r\n//           <Text>+65 123456789</Text>\r\n//         </div>\r\n//       </div>\r\n//       <Actions  />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ChatingSection;\r\n","import React from 'react'\r\n\r\nimport { Card } from 'antd'\r\nimport PageHeading from 'components/shared-components/PageHeading/PageHeading'\r\nimport AllInbox from './AllInbox'\r\nimport ChatingSection from './ChatingSection'\r\nimport { InquiryManagementPageIcon } from 'assets/svg/icon'\r\nimport Inquiries from './Inquiries'\r\n\r\nconst InquiryChats = () => {\r\n  return (\r\n    <>\r\n      <div>\r\n        <PageHeading\r\n          // icon={InquiryManagementPageIcon}\r\n          // svg={InquiryManagementPageIcon}\r\n          title=\"Inquiry Management / Chats\"\r\n        />\r\n      </div>\r\n\r\n      <Card >\r\n      <div style={{ display: 'flex', height: '500px' }}>\r\n        <Card.Grid style={{width: \"100%\"}}>\r\n          <ChatingSection/>\r\n        </Card.Grid>\r\n      </div>\r\n      </Card>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default InquiryChats","import React from \"react\";\r\n\r\nimport { Typography, Button, List, Badge } from \"antd\";\r\nimport Icon from \"@ant-design/icons\";\r\n\r\nimport { FilterIcon, SearchIcon, WhatsappIcon } from \"assets/svg/icon\";\r\nimport ProfilePic from \"assets/PrimaryAccount.png\";\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nconst data = [\"item1\", \"item2\", \"item3\"];\r\n\r\nconst Inquiries = () => {\r\n  const header = (\r\n    <div className=\"d-flex justify-content-between\">\r\n      <Title level={3}>Inquiries</Title>\r\n      <div className=\"d-flex\">\r\n        <Button>\r\n          <Icon component={SearchIcon} />\r\n        </Button>\r\n        <Button>\r\n          <Icon component={FilterIcon} />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n  return (\r\n    <List\r\n      header={header}\r\n      dataSource={data}\r\n      renderItem={(item) => (\r\n        <List.Item>\r\n          <div className=\"d-flex justify-content-between w-100\">\r\n            <div className=\"d-flex\">\r\n              <div style={{width: \"4rem\"}} className=\"mr-4\">\r\n              <img style={{maxWidth: \"100%\"}} src={ProfilePic}></img>\r\n              </div>\r\n              \r\n              <div>\r\n                <Title strong level={4}>Johm Smith</Title>\r\n                <Text  type=\"secondary\">Okay , thank you so much</Text>\r\n                <br />\r\n                <br />\r\n                \r\n                \r\n                <Text strong  >#123 General Inquiry</Text>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <Title strong secondry level={5}>15 min ago</Title>\r\n              <div className=\"d-flex align-items-center justify-content-around\">\r\n                <Badge count={1} style={{ background: \"#0099A8\" }} />\r\n                <Icon component={WhatsappIcon} />\r\n              </div>\r\n              <br />\r\n              \r\n              <Title strong level={4} style={{ color: \"#00AB6F\" }}>Assigned</Title>\r\n            </div>\r\n          </div>\r\n        </List.Item>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Inquiries;\r\n","import React , {useState,useEffect} from \"react\";\r\nimport { Form, Button, Col, Row, Card, Input, message, DatePicker } from \"antd\";\r\nimport PageHeading from \"components/shared-components/PageHeading/PageHeading\";\r\nimport Modal from \"components/UI/Modal\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { useLocation, useHistory, useParams } from 'react-router-dom';\r\n\r\nconst { RangePicker } = DatePicker;\r\nconst { TextArea } = Input;\r\n\r\nconst AddNewInquiry = (props) => {\r\n    const [form] = Form.useForm();\r\n    // const [value, setValue] = useState('');\r\n    const [jobsData , setJobsData] = useState([]);\r\n    const [jobFile , setJobFile] = useState({\r\n        name: '',\r\n        url: ''\r\n    });\r\n    const [gstData, setGstData] = useState([]);\r\n    const [customerAccountData, setCustomerAccountData] = useState([]);\r\n    const history = useHistory();\r\n    const customer_id = localStorage.getItem(\"customer_id\")\r\n       \r\n    const [showModal , setShowModal] = useState(false);\r\n    \r\n    const saveQuotationHandler = () => {\r\n        setShowModal(prev => !prev);\r\n    }\r\n    \r\n    const finishHandler = (e) => {\r\n        console.log(e)\r\n        // console.log(e.status)\r\n        // if(!jobFile || !jobFile.url) {\r\n        //   message.error(\"Please Upload attachment file first\");\r\n        //   return\r\n        // }\r\n    \r\n        if (props.id) {\r\n          axios\r\n            .post(\r\n              \"/api/tc/update-inquiry\",\r\n              {\r\n                id: props.id,\r\n                tc_customer_id: customer_id,\r\n                type: e.inquiry_type,\r\n                name: e.inquiry_name,\r\n                remarks: e.remarks || '',\r\n              },\r\n              {\r\n                headers: {\r\n                  \"content-type\": \"application/json\"\r\n                },\r\n              }\r\n            )\r\n            .then((response) => {\r\n              if(!response.data.success){\r\n                message.warn(response.data.msg)\r\n                return;\r\n              }\r\n              console.log(props.id)\r\n              message.success(\"Inquiry created successfully\")\r\n              history.goBack()\r\n            })\r\n            .catch((error) => {\r\n              console.log(error);\r\n            });\r\n          return\r\n        } else {\r\n          axios\r\n            .post(\r\n              \"/api/tc/new-inquiry\",\r\n              {\r\n                tc_customer_id: customer_id,\r\n                type: e.inquiry_type,\r\n                name: e.inquiry_name,\r\n                remarks: e.remarks || '',\r\n              },\r\n              {\r\n                headers: {\r\n                  \"content-type\": \"application/json\"\r\n                },\r\n              }\r\n            )\r\n            .then((response) => {\r\n              if(!response.data.success){\r\n                message.warn(response.data.msg)\r\n                return;\r\n              }\r\n              message.success(\"Inquiry created successfully\")\r\n              history.goBack()\r\n            })\r\n            .catch((error) => {\r\n              console.log(error);\r\n            });\r\n        }\r\n      };\r\n      const getSubTotalAmount = () => {\r\n        let amount = 0;\r\n        if(jobsData.length > 0) {\r\n          for(let i=0; i<jobsData.length; i++) {\r\n            amount += jobsData[i].total;\r\n          }\r\n        }\r\n        return amount\r\n      }\r\n    \r\n      const getTotalAmount = (gst_percentage) => {\r\n        let amount = 0;\r\n        if(jobsData.length > 0) {\r\n          for(let i=0; i<jobsData.length; i++) {\r\n            amount += jobsData[i].total;\r\n          }\r\n        }\r\n        if(amount) {\r\n          amount = amount + ((+gst_percentage/100)*amount);\r\n        }\r\n        return amount\r\n      }\r\n    \r\n      const getAllGst = ()=> {\r\n        axios({\r\n            method: 'post',\r\n            url: \"/api/tc/get-all-gsts\",\r\n            data: {},\r\n        }).then(function (response) {\r\n            if(response.data.success) {\r\n                console.log(response.data.data)\r\n                let res = response.data.data.data;\r\n                let fdata = res.map((elem, ind) => {\r\n                  return {\r\n                      key: elem.id,\r\n                      id: elem.id,\r\n                      srNo: ind+1,\r\n                      percentage: elem.percentage,\r\n                      description: elem.description,\r\n                      created_at: moment(elem.created_at).format(\"DD-MM-YYYY\"),\r\n                      updated_at: moment(elem.updated_at).format(\"DD-MM-YYYY\"),\r\n                  };\r\n                });\r\n                setGstData(fdata);\r\n                // console.log(fdata);\r\n    \r\n                // form.setFieldsValue ({\r\n                //   ...form.getFieldsValue(),\r\n                //   gst: res[res.length - 1].percentage || 8\r\n                // })\r\n            }\r\n        }).catch(function (error) {\r\n            console.log(error);\r\n        });\r\n      };\r\n\r\n      useEffect(() => {\r\n        axios\r\n          .post(\r\n            \"/api/tc/get-customers\",\r\n            {\r\n              page_index: 1,\r\n              page_size: 100000,\r\n              // statuses: [\"ACTIVE\", \"INACTIVE\", \"PENDING APPROVAL\"],\r\n              searchText : null,\r\n            }\r\n          )\r\n          .then((response) => {\r\n            let res = response.data.data.data;\r\n            console.log(res);\r\n    \r\n            let fdata = res.map((elem, ind) => {\r\n              return {\r\n                key: ind,\r\n                id: elem.id,\r\n                company: elem.name,\r\n                phoneNumber: elem.phone,\r\n                emailId: elem.email\r\n              };\r\n            });\r\n    \r\n            setCustomerAccountData(customerAccountData.concat(fdata));\r\n            console.log(customerAccountData)\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n    \r\n          getAllGst();\r\n      }, []);\r\n    \r\n      const clearForm = () => {\r\n        form.resetFields();\r\n        setJobsData([]);\r\n        setJobFile(({\r\n          name: '',\r\n          url: ''\r\n        }));\r\n      }\r\n    \r\n  return (\r\n    <React.Fragment>\r\n      <PageHeading title=\"Create New Inquiry\" />\r\n\r\n      <Form\r\n        form={form}\r\n        labelCol={{\r\n          span: 10,\r\n        }}\r\n        wrapperCol={{\r\n          span: 18,\r\n        }}\r\n        layout=\"vertical\"\r\n        onFinish={finishHandler}\r\n      >\r\n        <Card className=\"mt-2\">\r\n          <div className=\"d-flex justify-content-end\" style={{ color: \"red\" }}>\r\n            <div>* Indicates Mandatory Fields</div>\r\n          </div>\r\n\r\n          <Row align=\"top\">\r\n            <Col span={12}>\r\n              <Form.Item name=\"inquiry_type\" label=\"Inquiry Type\" rules={[{ required: true, message: \"Required\" }]}>\r\n                <Input />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item name=\"inquiry_name\" label=\"Name\">\r\n                <Input />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row align=\"top\">\r\n            <Col span={24}>\r\n              <Form.Item name=\"remarks\" label=\"Remarks\">\r\n                <TextArea rows={3}/>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Card>\r\n\r\n        <div className=\"w-100 d-flex justify-content-end actions\">\r\n          <Form.Item className=\"w-100\">\r\n            <Button\r\n              onClick={() => {\r\n                history.goBack();\r\n              }}\r\n            >\r\n              Back\r\n            </Button>\r\n            <Button\r\n              onClick={() => {\r\n                clearForm();\r\n              }}\r\n            >\r\n              Clear All\r\n            </Button>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Save\r\n            </Button>\r\n          </Form.Item>\r\n        </div>\r\n      </Form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default AddNewInquiry","import React from \"react\";\r\nimport { Route , Redirect , useRouteMatch } from \"react-router-dom\";\r\n\r\nimport { APP_PREFIX_PATH, AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\n\r\nimport InquiryList from \"./InquiryList\";\r\nimport InquiryChats from \"./InquiryChats\";\r\nimport AddNewInquiry from \"./AddNewInquiry\";\r\n\r\nconst InquiryManagement = () => {\r\n\r\n  const match = useRouteMatch();\r\n  return (\r\n    <div>\r\n      <Route path={`${APP_PREFIX_PATH}/inquiry-management`} exact>\r\n        <Redirect to={`${match.path}/inquiry-list`} />\r\n      </Route>\r\n      <Route path={`${match.path}/inquiry-list`} exact>\r\n        <InquiryList/>\r\n      </Route>\r\n      <Route path={`${match.path}/add-new-inquiry`} exact>\r\n        <AddNewInquiry/>\r\n      </Route>\r\n      <Route path={`${match.path}/edit-inquiry/:id`} exact>\r\n        <AddNewInquiry/>\r\n      </Route>\r\n      <Route path={`${match.path}/chats`} exact>\r\n        <InquiryChats/>\r\n      </Route>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InquiryManagement;\r\n"],"names":["CreateQuotationIcon","_jsxs","width","height","viewBox","fill","xmlns","children","_jsx","d","id","InquiryStatusIcon","menu","Menu","items","label","key","href","type","CustomDropdown","text","Title","Typography","props","onClose","className","Button","onClick","src","exportIcon","alt","ExportDropdown","_ref","setInquiryData","openStatusModal","inquiry_id","history","useHistory","useRouteMatch","_Fragment","EllipsisDropdown","push","concat","Icon","component","prev","TextArea","Input","allInquiries","setAllInquiries","searchText","setPage","selectedFilter","selectedInquiryModeFilter","selectedStatusFilter","_useState","useState","_useState2","_slicedToArray","inquiryData","_useState3","_useState4","setOpenStatusModal","_useState5","_useState6","status","setStatus","_useState7","_useState8","remark","setRemark","columns","title","dataIndex","render","Tag","color","_","record","Actions","useEffect","getData","axios","page_index","page_size","statuses","search","inquiry_mode","then","response","fdata","data","map","elem","ind","_objectSpread","sr_no","customer_name","tc_customer_id","email","mobile","dateOfInquiry","moment","created_at","format","catch","error","console","log","Table","dataSource","Modal","visible","centered","maskClosable","onCancel","footer","style","customer_id","res","Radio","size","onChange","e","target","value","defaultValue","defaultChecked","rows","showExportOption","setShowExportOption","setSearchText","drawerIsOpen","setDrawerIsOpen","_useState9","_useState10","setSelectedInquiryModeFilter","_useState11","_useState12","setSelectedStatusFilter","_useState13","_useState14","setSelectedFilter","_useState15","_useState16","_useState17","_useState18","localStorage","getItem","_useState19","_useState20","exportHandler","exportModal","onclose","Export","index","PageHeading","SearchBox","prevState","FilterIcon","CSVLink","headers","filename","Link","to","PlusIcon","InquiryListTable","Drawer","placement","open","closable","previousState","Select","showSearch","placeholder","SendOutlined","ref","React","AntdIcon","icon","SendOutlinedSvg","displayName","Text","selectedChat","chatId","setChatId","messageInput","setMessageInput","chatMessages","setChatMessages","setGreData","associate_name","user_id","sendMessage","trim","length","method","url","chat_id","chat_message","chat_message_type","Date","toISOString","getChatMessages","messages","apply","_toConsumableArray","user_ids","chat_name","chat_type","chat_module","display","flexDirection","padding","objectFit","GrePic","level","margin","Divider","flexGrow","overflow","overflowY","reverse","message","myMsg","fontSize","marginBottom","messenger_name","name","borderTop","Form","justifyContent","gap","borderRadius","resize","onKeyPress","shiftKey","preventDefault","alignItems","disabled","Card","ChatingSection","DatePicker","_Form$useForm","form","setJobsData","setJobFile","setGstData","customerAccountData","setCustomerAccountData","company","phoneNumber","phone","emailId","success","srNo","percentage","description","updated_at","labelCol","span","wrapperCol","layout","onFinish","inquiry_type","inquiry_name","remarks","goBack","msg","Row","align","Col","rules","required","resetFields","htmlType","match","Route","path","APP_PREFIX_PATH","exact","Redirect","InquiryList","AddNewInquiry","InquiryChats"],"sourceRoot":""}